// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager)
public final class EnvironmentManager : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_Windows_System.IEnvironmentManager
    private typealias CABI = __x_ABI_CMicrosoft_CWindows_CSystem_CIEnvironmentManager
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CWindows_CSystem_CIEnvironmentManager>?) -> EnvironmentManager? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IEnvironmentManagerStatics: __ABI_Microsoft_Windows_System.IEnvironmentManagerStatics = try! RoGetActivationFactory(HString("Microsoft.Windows.System.EnvironmentManager"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.getforprocess)
    public static func getForProcess() -> EnvironmentManager! {
        return try! _IEnvironmentManagerStatics.GetForProcessImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.getforuser)
    public static func getForUser() -> EnvironmentManager! {
        return try! _IEnvironmentManagerStatics.GetForUserImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.getformachine)
    public static func getForMachine() -> EnvironmentManager! {
        return try! _IEnvironmentManagerStatics.GetForMachineImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.issupported)
    public static var isSupported : Bool {
        get { try! _IEnvironmentManagerStatics.get_IsSupportedImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.getenvironmentvariables)
    public func getEnvironmentVariables() throws -> WindowsFoundation.AnyIMapView<String, String>! {
        try _default.GetEnvironmentVariablesImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.getenvironmentvariable)
    public func getEnvironmentVariable(_ name: String) throws -> String {
        try _default.GetEnvironmentVariableImpl(name)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.setenvironmentvariable)
    public func setEnvironmentVariable(_ name: String, _ value: String) throws {
        try _default.SetEnvironmentVariableImpl(name, value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.appendtopath)
    public func appendToPath(_ path: String) throws {
        try _default.AppendToPathImpl(path)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.removefrompath)
    public func removeFromPath(_ path: String) throws {
        try _default.RemoveFromPathImpl(path)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.addexecutablefileextension)
    public func addExecutableFileExtension(_ pathExt: String) throws {
        try _default.AddExecutableFileExtensionImpl(pathExt)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.removeexecutablefileextension)
    public func removeExecutableFileExtension(_ pathExt: String) throws {
        try _default.RemoveExecutableFileExtensionImpl(pathExt)
    }

    private lazy var _IEnvironmentManager2: __ABI_Microsoft_Windows_System.IEnvironmentManager2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.windows.system.environmentmanager.arechangestracked)
    public var areChangesTracked : Bool {
        get { try! _IEnvironmentManager2.get_AreChangesTrackedImpl() }
    }

    deinit {
        _default = nil
        _IEnvironmentManager2 = nil
    }
}

