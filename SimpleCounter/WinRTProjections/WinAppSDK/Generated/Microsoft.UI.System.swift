// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.system.themesettings)
public final class ThemeSettings : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_System.IThemeSettings
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CSystem_CIThemeSettings
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CSystem_CIThemeSettings>?) -> ThemeSettings? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    private static let _IThemeSettingsStatics: __ABI_Microsoft_UI_System.IThemeSettingsStatics = try! RoGetActivationFactory(HString("Microsoft.UI.System.ThemeSettings"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.system.themesettings.createforwindowid)
    public static func createForWindowId(_ windowId: WinAppSDK.WindowId) -> ThemeSettings! {
        return try! _IThemeSettingsStatics.CreateForWindowIdImpl(windowId)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.system.themesettings.highcontrast)
    public var highContrast : Bool {
        get { try! _default.get_HighContrastImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.system.themesettings.highcontrastscheme)
    public var highContrastScheme : String {
        get { try! _default.get_HighContrastSchemeImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.system.themesettings.changed)
    public lazy var changed : Event<TypedEventHandler<ThemeSettings?, Any?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_ChangedImpl($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_ChangedImpl($0)
       }
      )
    }()

    deinit {
        _default = nil
    }
}

