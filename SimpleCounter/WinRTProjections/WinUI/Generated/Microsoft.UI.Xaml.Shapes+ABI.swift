// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WinAppSDK
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIEllipse: WindowsFoundation.IID {
    .init(Data1: 0x805C39AA, Data2: 0xFA8A, Data3: 0x5E0B, Data4: ( 0x98,0x47,0x4A,0xB8,0x1B,0x42,0xA3,0xDF ))// 805C39AA-FA8A-5E0B-9847-4AB81B42A3DF
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine: WindowsFoundation.IID {
    .init(Data1: 0x507B3858, Data2: 0xAF7E, Data3: 0x559B, Data4: ( 0xA8,0x7E,0x4C,0xC6,0xA5,0xD8,0xBA,0x96 ))// 507B3858-AF7E-559B-A87E-4CC6A5D8BA96
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILineStatics: WindowsFoundation.IID {
    .init(Data1: 0xA425BF93, Data2: 0xF1F3, Data3: 0x5DCB, Data4: ( 0x99,0x7E,0xB6,0xA2,0x6F,0x7A,0xE8,0xC0 ))// A425BF93-F1F3-5DCB-997E-B6A26F7AE8C0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPath: WindowsFoundation.IID {
    .init(Data1: 0x757D1CD8, Data2: 0x0EC0, Data3: 0x55C5, Data4: ( 0xB4,0x00,0x66,0x65,0x7E,0x49,0x3E,0x78 ))// 757D1CD8-0EC0-55C5-B400-66657E493E78
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPathFactory: WindowsFoundation.IID {
    .init(Data1: 0x5E82E4C9, Data2: 0x7502, Data3: 0x5B1F, Data4: ( 0xB9,0x40,0xC3,0x34,0x6A,0x71,0x36,0x2A ))// 5E82E4C9-7502-5B1F-B940-C3346A71362A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPathStatics: WindowsFoundation.IID {
    .init(Data1: 0x2146D36F, Data2: 0x721C, Data3: 0x5B54, Data4: ( 0xAF,0x7D,0x60,0xF3,0xAD,0xC4,0xFB,0xCA ))// 2146D36F-721C-5B54-AF7D-60F3ADC4FBCA
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygon: WindowsFoundation.IID {
    .init(Data1: 0xFA126347, Data2: 0xD1D4, Data3: 0x54DD, Data4: ( 0xB1,0xA4,0xC3,0x50,0x19,0x39,0x79,0x44 ))// FA126347-D1D4-54DD-B1A4-C35019397944
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygonStatics: WindowsFoundation.IID {
    .init(Data1: 0x85DDBADA, Data2: 0x9E37, Data3: 0x5971, Data4: ( 0xA9,0xAA,0xDC,0xE3,0x1F,0x9C,0xF6,0x7A ))// 85DDBADA-9E37-5971-A9AA-DCE31F9CF67A
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolyline: WindowsFoundation.IID {
    .init(Data1: 0xC7F0BEC6, Data2: 0x184C, Data3: 0x5D96, Data4: ( 0x81,0x02,0x04,0xDD,0x21,0x1E,0x10,0x0C ))// C7F0BEC6-184C-5D96-8102-04DD211E100C
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolylineStatics: WindowsFoundation.IID {
    .init(Data1: 0x48840FE7, Data2: 0xD735, Data3: 0x5080, Data4: ( 0x9C,0x6D,0x28,0x62,0x66,0x5C,0xDD,0xA0 ))// 48840FE7-D735-5080-9C6D-2862665CDDA0
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangle: WindowsFoundation.IID {
    .init(Data1: 0xBF7D30B9, Data2: 0x152C, Data3: 0x556E, Data4: ( 0x9F,0x10,0xD0,0xB7,0xEB,0xA4,0xE5,0x2F ))// BF7D30B9-152C-556E-9F10-D0B7EBA4E52F
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangleStatics: WindowsFoundation.IID {
    .init(Data1: 0x3CC3CC79, Data2: 0xC332, Data3: 0x5AD0, Data4: ( 0x87,0x43,0x1F,0x1B,0x1E,0x67,0x0A,0x86 ))// 3CC3CC79-C332-5AD0-8743-1F1B1E670A86
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape: WindowsFoundation.IID {
    .init(Data1: 0x9941AAD3, Data2: 0x6AF2, Data3: 0x5BA2, Data4: ( 0x90,0x85,0x85,0x06,0xD5,0xF2,0x48,0x5E ))// 9941AAD3-6AF2-5BA2-9085-8506D5F2485E
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeFactory: WindowsFoundation.IID {
    .init(Data1: 0x4FECAFAF, Data2: 0x8265, Data3: 0x5252, Data4: ( 0xBA,0x5C,0xF4,0x36,0x39,0xF9,0x74,0xA5 ))// 4FECAFAF-8265-5252-BA5C-F43639F974A5
}

private var IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics: WindowsFoundation.IID {
    .init(Data1: 0xEA407C43, Data2: 0x8A09, Data3: 0x587A, Data4: ( 0x95,0x8A,0x4D,0xD1,0x7D,0x21,0x7C,0xE1 ))// EA407C43-8A09-587A-958A-4DD17D217CE1
}

public enum __ABI_Microsoft_UI_Xaml_Shapes {
    public class IEllipse: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIEllipse }

    }

    public class ILine: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine }

        internal func get_X1Impl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_X1(pThis, &value))
            }
            return value
        }

        internal func put_X1Impl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_X1(pThis, value))
            }
        }

        internal func get_Y1Impl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Y1(pThis, &value))
            }
            return value
        }

        internal func put_Y1Impl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Y1(pThis, value))
            }
        }

        internal func get_X2Impl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_X2(pThis, &value))
            }
            return value
        }

        internal func put_X2Impl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_X2(pThis, value))
            }
        }

        internal func get_Y2Impl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Y2(pThis, &value))
            }
            return value
        }

        internal func put_Y2Impl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILine.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Y2(pThis, value))
            }
        }

    }

    public class ILineStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILineStatics }

        internal func get_X1PropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_X1Property(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_Y1PropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Y1Property(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_X2PropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_X2Property(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_Y2PropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CILineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Y2Property(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPath: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPath }

        internal func get_DataImpl() throws -> WinUI.Geometry? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPath.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Data(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_DataImpl(_ value: WinUI.Geometry?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPath.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Data(pThis, RawPointer(value)))
            }
        }

    }

    public class IPathFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPathFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.Path.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IPath {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPathFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IPath(value!)
        }

    }

    public class IPathStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPathStatics }

        internal func get_DataPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPathStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DataProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPolygon: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygon }

        internal func get_FillRuleImpl() throws -> WinUI.FillRule {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygon.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillRule(pThis, &value))
            }
            return value
        }

        internal func put_FillRuleImpl(_ value: WinUI.FillRule) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygon.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FillRule(pThis, value))
            }
        }

        internal func get_PointsImpl() throws -> WinUI.PointCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygon.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Points(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_PointsImpl(_ value: WinUI.PointCollection?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygon.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Points(pThis, RawPointer(value)))
            }
        }

    }

    public class IPolygonStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygonStatics }

        internal func get_FillRulePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygonStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillRuleProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_PointsPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolygonStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PointsProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IPolyline: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolyline }

        internal func get_FillRuleImpl() throws -> WinUI.FillRule {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CFillRule = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolyline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillRule(pThis, &value))
            }
            return value
        }

        internal func put_FillRuleImpl(_ value: WinUI.FillRule) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolyline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FillRule(pThis, value))
            }
        }

        internal func get_PointsImpl() throws -> WinUI.PointCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolyline.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Points(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_PointsImpl(_ value: WinUI.PointCollection?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolyline.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Points(pThis, RawPointer(value)))
            }
        }

    }

    public class IPolylineStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolylineStatics }

        internal func get_FillRulePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolylineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillRuleProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_PointsPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIPolylineStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PointsProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IRectangle: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangle }

        internal func get_RadiusXImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangle.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RadiusX(pThis, &value))
            }
            return value
        }

        internal func put_RadiusXImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangle.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RadiusX(pThis, value))
            }
        }

        internal func get_RadiusYImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangle.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RadiusY(pThis, &value))
            }
            return value
        }

        internal func put_RadiusYImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangle.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RadiusY(pThis, value))
            }
        }

    }

    public class IRectangleStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangleStatics }

        internal func get_RadiusXPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangleStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_RadiusXProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_RadiusYPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIRectangleStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_RadiusYProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

    public class IShape: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape }

        internal func get_FillImpl() throws -> WinUI.Brush? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fill(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_FillImpl(_ value: WinUI.Brush?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Fill(pThis, RawPointer(value)))
            }
        }

        internal func get_StrokeImpl() throws -> WinUI.Brush? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Stroke(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_StrokeImpl(_ value: WinUI.Brush?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Stroke(pThis, RawPointer(value)))
            }
        }

        internal func get_StrokeMiterLimitImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeMiterLimit(pThis, &value))
            }
            return value
        }

        internal func put_StrokeMiterLimitImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeMiterLimit(pThis, value))
            }
        }

        internal func get_StrokeThicknessImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeThickness(pThis, &value))
            }
            return value
        }

        internal func put_StrokeThicknessImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeThickness(pThis, value))
            }
        }

        internal func get_StrokeStartLineCapImpl() throws -> WinUI.PenLineCap {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeStartLineCap(pThis, &value))
            }
            return value
        }

        internal func put_StrokeStartLineCapImpl(_ value: WinUI.PenLineCap) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeStartLineCap(pThis, value))
            }
        }

        internal func get_StrokeEndLineCapImpl() throws -> WinUI.PenLineCap {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeEndLineCap(pThis, &value))
            }
            return value
        }

        internal func put_StrokeEndLineCapImpl(_ value: WinUI.PenLineCap) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeEndLineCap(pThis, value))
            }
        }

        internal func get_StrokeLineJoinImpl() throws -> WinUI.PenLineJoin {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineJoin = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeLineJoin(pThis, &value))
            }
            return value
        }

        internal func put_StrokeLineJoinImpl(_ value: WinUI.PenLineJoin) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeLineJoin(pThis, value))
            }
        }

        internal func get_StrokeDashOffsetImpl() throws -> Double {
            var value: DOUBLE = 0.0
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeDashOffset(pThis, &value))
            }
            return value
        }

        internal func put_StrokeDashOffsetImpl(_ value: Double) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeDashOffset(pThis, value))
            }
        }

        internal func get_StrokeDashCapImpl() throws -> WinUI.PenLineCap {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CPenLineCap = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeDashCap(pThis, &value))
            }
            return value
        }

        internal func put_StrokeDashCapImpl(_ value: WinUI.PenLineCap) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeDashCap(pThis, value))
            }
        }

        internal func get_StrokeDashArrayImpl() throws -> WinUI.DoubleCollection? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeDashArray(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_StrokeDashArrayImpl(_ value: WinUI.DoubleCollection?) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StrokeDashArray(pThis, RawPointer(value)))
            }
        }

        internal func get_StretchImpl() throws -> WinUI.Stretch {
            var value: __x_ABI_CMicrosoft_CUI_CXaml_CMedia_CStretch = .init(0)
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Stretch(pThis, &value))
            }
            return value
        }

        internal func put_StretchImpl(_ value: WinUI.Stretch) throws {
            _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Stretch(pThis, value))
            }
        }

        internal func get_GeometryTransformImpl() throws -> WinUI.Transform? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_GeometryTransform(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func GetAlphaMaskImpl() throws -> WinAppSDK.CompositionBrush? {
            let (result) = try ComPtrs.initialize { resultAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShape.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetAlphaMask(pThis, &resultAbi))
                }
            }
            return .from(abi: result)
        }

    }

    public class IShapeFactory: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeFactory }

        internal func CreateInstanceImpl(_ baseInterface: UnsealedWinRTClassWrapper<WinUI.Shape.Composable>?, _ innerInterface: inout WindowsFoundation.IInspectable?) throws -> IShape {
            let (value) = try ComPtrs.initialize { valueAbi in
                let _baseInterface = baseInterface?.toIInspectableABI { $0 }
                let (_innerInterface) = try ComPtrs.initialize { _innerInterfaceAbi in
                    _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeFactory.self) { pThis in
                        try CHECKED(pThis.pointee.lpVtbl.pointee.CreateInstance(pThis, _baseInterface, &_innerInterfaceAbi, &valueAbi))
                    }
                }
                innerInterface = WindowsFoundation.IInspectable(_innerInterface!)
            }
            return IShape(value!)
        }

    }

    public class IShapeStatics: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics }

        internal func get_FillPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_FillProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokePropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeMiterLimitPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeMiterLimitProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeThicknessPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeThicknessProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeStartLineCapPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeStartLineCapProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeEndLineCapPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeEndLineCapProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeLineJoinPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeLineJoinProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeDashOffsetPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeDashOffsetProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeDashCapPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeDashCapProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StrokeDashArrayPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StrokeDashArrayProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func get_StretchPropertyImpl() throws -> WinUI.DependencyProperty? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CMicrosoft_CUI_CXaml_CShapes_CIShapeStatics.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_StretchProperty(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

    }

}
