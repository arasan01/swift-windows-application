// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import UWP
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.previewpagecounttype)
public typealias PreviewPageCountType = __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CPreviewPageCountType
/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.addpageseventargs)
public final class AddPagesEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Printing.IAddPagesEventArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIAddPagesEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIAddPagesEventArgs>?) -> AddPagesEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public init() {
        super.init(try! RoActivateInstance(HString("Microsoft.UI.Xaml.Printing.AddPagesEventArgs")))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.addpageseventargs.printtaskoptions)
    public var printTaskOptions : UWP.PrintTaskOptions! {
        get { try! _default.get_PrintTaskOptionsImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.getpreviewpageeventargs)
public final class GetPreviewPageEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Printing.IGetPreviewPageEventArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIGetPreviewPageEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIGetPreviewPageEventArgs>?) -> GetPreviewPageEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public init() {
        super.init(try! RoActivateInstance(HString("Microsoft.UI.Xaml.Printing.GetPreviewPageEventArgs")))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.getpreviewpageeventargs.pagenumber)
    public var pageNumber : Int32 {
        get { try! _default.get_PageNumberImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.paginateeventargs)
public final class PaginateEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Printing.IPaginateEventArgs
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIPaginateEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIPaginateEventArgs>?) -> PaginateEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public init() {
        super.init(try! RoActivateInstance(HString("Microsoft.UI.Xaml.Printing.PaginateEventArgs")))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.paginateeventargs.currentpreviewpagenumber)
    public var currentPreviewPageNumber : Int32 {
        get { try! _default.get_CurrentPreviewPageNumberImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.paginateeventargs.printtaskoptions)
    public var printTaskOptions : UWP.PrintTaskOptions! {
        get { try! _default.get_PrintTaskOptionsImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument)
open class PrintDocument : WinUI.DependencyObject {
    private typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Printing.IPrintDocument
    private typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIPrintDocument
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override open func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIPrintDocument>?) -> PrintDocument? {
        guard let abi = abi else { return nil }
        return UnsealedWinRTClassWrapper<Composable>.unwrapFrom(base: abi)
    }

    @_spi(WinRTInternal)
    override public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi: fromAbi)
    }

    @_spi(WinRTInternal)
    override public init<Composable: ComposableImpl>(
        composing: Composable.Type,
        _ createCallback: (UnsealedWinRTClassWrapper<Composable>?, inout WindowsFoundation.IInspectable?) -> Composable.Default.SwiftABI)
    {
        super.init(composing: composing, createCallback)
    }
    override open func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        return super.queryInterface(iid)
    }
    private static var _IPrintDocumentFactory : __ABI_Microsoft_UI_Xaml_Printing.IPrintDocumentFactory =  try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Printing.PrintDocument"))

    override public init() {
        super.init(composing: Self.Composable.self) { baseInterface, innerInterface in 
            try! Self._IPrintDocumentFactory.CreateInstanceImpl(baseInterface, &innerInterface)
        }
    }

    private static let _IPrintDocumentStatics: __ABI_Microsoft_UI_Xaml_Printing.IPrintDocumentStatics = try! RoGetActivationFactory(HString("Microsoft.UI.Xaml.Printing.PrintDocument"))
    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.documentsourceproperty)
    public class var documentSourceProperty : WinUI.DependencyProperty! {
        get { try! _IPrintDocumentStatics.get_DocumentSourcePropertyImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.addpage)
    public func addPage(_ pageVisual: WinUI.UIElement!) throws {
        try _default.AddPageImpl(pageVisual)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.addpagescomplete)
    public func addPagesComplete() throws {
        try _default.AddPagesCompleteImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.setpreviewpagecount)
    public func setPreviewPageCount(_ count: Int32, _ type: PreviewPageCountType) throws {
        try _default.SetPreviewPageCountImpl(count, type)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.setpreviewpage)
    public func setPreviewPage(_ pageNumber: Int32, _ pageVisual: WinUI.UIElement!) throws {
        try _default.SetPreviewPageImpl(pageNumber, pageVisual)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.invalidatepreview)
    public func invalidatePreview() throws {
        try _default.InvalidatePreviewImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.documentsource)
    public var documentSource : UWP.AnyIPrintDocumentSource! {
        get { try! _default.get_DocumentSourceImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.addpages)
    public lazy var addPages : Event<AddPagesEventHandler> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_AddPagesImpl($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_AddPagesImpl($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.getpreviewpage)
    public lazy var getPreviewPage : Event<GetPreviewPageEventHandler> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_GetPreviewPageImpl($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_GetPreviewPageImpl($0)
       }
      )
    }()

    /// [Open Microsoft documentation](https://learn.microsoft.com/windows/windows-app-sdk/api/winrt/microsoft.ui.xaml.printing.printdocument.paginate)
    public lazy var paginate : Event<PaginateEventHandler> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_PaginateImpl($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_PaginateImpl($0)
       }
      )
    }()

    internal enum IPrintDocument : ComposableImpl {
        internal typealias CABI = C_IInspectable
        internal typealias SwiftABI = WindowsFoundation.IInspectable
        internal typealias Class = PrintDocument
        internal typealias SwiftProjection = WinRTClassWeakReference<Class>
        internal enum Default : AbiInterface {
            internal typealias CABI = __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CIPrintDocument
            internal typealias SwiftABI = __ABI_Microsoft_UI_Xaml_Printing.IPrintDocument
        }
    }
    internal typealias Composable = IPrintDocument
    deinit {
        _default = nil
    }
}

public typealias AddPagesEventHandler = (Any?, AddPagesEventArgs?) -> ()
public typealias GetPreviewPageEventHandler = (Any?, GetPreviewPageEventArgs?) -> ()
public typealias PaginateEventHandler = (Any?, PaginateEventArgs?) -> ()
extension WinUI.PreviewPageCountType {
    public static var final : WinUI.PreviewPageCountType {
        __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CPreviewPageCountType_Final
    }
    public static var intermediate : WinUI.PreviewPageCountType {
        __x_ABI_CMicrosoft_CUI_CXaml_CPrinting_CPreviewPageCountType_Intermediate
    }
}
extension WinUI.PreviewPageCountType: @retroactive Hashable, @retroactive Codable {}

