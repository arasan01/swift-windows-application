// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.popups.placement)
public typealias Placement = __x_ABI_CWindows_CUI_CPopups_CPlacement
public typealias UICommandInvokedHandler = (AnyIUICommand?) -> ()
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.popups.iuicommand)
public protocol IUICommand : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.popups.iuicommand.id)
    var id: Any! { get set }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.popups.iuicommand.invoked)
    var invoked: UWP.UICommandInvokedHandler! { get set }
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.ui.popups.iuicommand.label)
    var label: String { get set }
}

extension IUICommand {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_UI_Popups.IUICommandWrapper.IID:
                let wrapper = __ABI_Windows_UI_Popups.IUICommandWrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyIUICommand = any IUICommand

extension UWP.Placement {
    public static var `default` : UWP.Placement {
        __x_ABI_CWindows_CUI_CPopups_CPlacement_Default
    }
    public static var above : UWP.Placement {
        __x_ABI_CWindows_CUI_CPopups_CPlacement_Above
    }
    public static var below : UWP.Placement {
        __x_ABI_CWindows_CUI_CPopups_CPlacement_Below
    }
    public static var left : UWP.Placement {
        __x_ABI_CWindows_CUI_CPopups_CPlacement_Left
    }
    public static var right : UWP.Placement {
        __x_ABI_CWindows_CUI_CPopups_CPlacement_Right
    }
}
extension UWP.Placement: @retroactive Hashable, @retroactive Codable {}

