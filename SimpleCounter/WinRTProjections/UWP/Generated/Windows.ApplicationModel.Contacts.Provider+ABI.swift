// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI: WindowsFoundation.IID {
    .init(Data1: 0xE2CC1366, Data2: 0xCF66, Data3: 0x43C4, Data4: ( 0xA9,0x6A,0xA5,0xA1,0x12,0xDB,0x47,0x46 ))// E2CC1366-CF66-43C4-A96A-A5A112DB4746
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI2: WindowsFoundation.IID {
    .init(Data1: 0x6E449E28, Data2: 0x7B25, Data3: 0x4999, Data4: ( 0x9B,0x0B,0x87,0x54,0x00,0xA1,0xE8,0xC8 ))// 6E449E28-7B25-4999-9B0B-875400A1E8C8
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactRemovedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x6F354338, Data2: 0x3302, Data3: 0x4D13, Data4: ( 0xAD,0x8D,0xAD,0xCC,0x0F,0xF9,0xE4,0x7C ))// 6F354338-3302-4D13-AD8D-ADCC0FF9E47C
}

public enum __ABI_Windows_ApplicationModel_Contacts_Provider {
    public class IContactPickerUI: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI }

        internal func AddContactImpl(_ id: String, _ contact: UWP.Contact?) throws -> UWP.AddContactResult {
            var result: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CAddContactResult = .init(0)
            let _id = try! HString(id)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.AddContact(pThis, _id.get(), RawPointer(contact), &result))
            }
            return result
        }

        internal func RemoveContactImpl(_ id: String) throws {
            let _id = try! HString(id)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.RemoveContact(pThis, _id.get()))
            }
        }

        internal func ContainsContactImpl(_ id: String) throws -> Bool {
            var isContained: boolean = 0
            let _id = try! HString(id)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ContainsContact(pThis, _id.get(), &isContained))
            }
            return .init(from: isContained)
        }

        internal func get_DesiredFieldsImpl() throws -> WindowsFoundation.AnyIVectorView<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredFields(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVectorView_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        internal func get_SelectionModeImpl() throws -> UWP.ContactSelectionMode {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactSelectionMode = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SelectionMode(pThis, &value))
            }
            return value
        }

        internal func add_ContactRemovedImpl(_ handler: TypedEventHandler<UWP.ContactPickerUI?, UWP.ContactRemovedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CProvider__CContactPickerUI___x_ABI_CWindows__CApplicationModel__CContacts__CProvider__CContactRemovedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_ContactRemoved(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_ContactRemovedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_ContactRemoved(pThis, token))
            }
        }

    }

    public class IContactPickerUI2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI2 }

        internal func AddContactImpl(_ contact: UWP.Contact?) throws -> UWP.AddContactResult {
            var result: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CAddContactResult = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.AddContact(pThis, RawPointer(contact), &result))
            }
            return result
        }

        internal func get_DesiredFieldsWithContactFieldTypeImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactFieldType>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactPickerUI2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DesiredFieldsWithContactFieldType(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactFieldTypeWrapper.unwrapFrom(abi: value)
        }

    }

    public class IContactRemovedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactRemovedEventArgs }

        internal func get_IdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CProvider_CIContactRemovedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, &value))
            }
            return .init(from: value)
        }

    }

}
