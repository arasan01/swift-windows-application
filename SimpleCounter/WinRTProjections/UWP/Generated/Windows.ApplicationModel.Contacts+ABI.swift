// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact: WindowsFoundation.IID {
    .init(Data1: 0xEC0072F3, Data2: 0x2118, Data3: 0x4049, Data4: ( 0x9E,0xBC,0x17,0xF0,0xAB,0x69,0x2B,0x64 ))// EC0072F3-2118-4049-9EBC-17F0AB692B64
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact2: WindowsFoundation.IID {
    .init(Data1: 0xF312F365, Data2: 0xBB77, Data3: 0x4C94, Data4: ( 0x80,0x2D,0x83,0x28,0xCE,0xE4,0x0C,0x08 ))// F312F365-BB77-4C94-802D-8328CEE40C08
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact3: WindowsFoundation.IID {
    .init(Data1: 0x48201E67, Data2: 0xE08E, Data3: 0x42A4, Data4: ( 0xB5,0x61,0x41,0xD0,0x8C,0xA9,0x57,0x5D ))// 48201E67-E08E-42A4-B561-41D08CA9575D
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress: WindowsFoundation.IID {
    .init(Data1: 0x9739D39A, Data2: 0x42CE, Data3: 0x4872, Data4: ( 0x8D,0x70,0x30,0x63,0xAA,0x58,0x4B,0x70 ))// 9739D39A-42CE-4872-8D70-3063AA584B70
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount: WindowsFoundation.IID {
    .init(Data1: 0xF6F83553, Data2: 0xAA27, Data3: 0x4731, Data4: ( 0x8E,0x4A,0x3D,0xEC,0x5C,0xE9,0xEE,0xC9 ))// F6F83553-AA27-4731-8E4A-3DEC5CE9EEC9
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate: WindowsFoundation.IID {
    .init(Data1: 0xFE98AE66, Data2: 0xB205, Data3: 0x4934, Data4: ( 0x91,0x74,0x0F,0xF2,0xB0,0x56,0x57,0x07 ))// FE98AE66-B205-4934-9174-0FF2B0565707
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail: WindowsFoundation.IID {
    .init(Data1: 0x90A219A9, Data2: 0xE3D3, Data3: 0x4D63, Data4: ( 0x99,0x3B,0x05,0xB9,0xA5,0x39,0x3A,0xBF ))// 90A219A9-E3D3-4D63-993B-05B9A5393ABF
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactField: WindowsFoundation.IID {
    .init(Data1: 0xB176486A, Data2: 0xD293, Data3: 0x492C, Data4: ( 0xA0,0x58,0xDB,0x57,0x5B,0x3E,0x3C,0x0F ))// B176486A-D293-492C-A058-DB575B3E3C0F
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo: WindowsFoundation.IID {
    .init(Data1: 0x6D117B4C, Data2: 0xCE50, Data3: 0x4B43, Data4: ( 0x9E,0x69,0xB1,0x82,0x58,0xEA,0x53,0x15 ))// 6D117B4C-CE50-4B43-9E69-B18258EA5315
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactName: WindowsFoundation.IID {
    .init(Data1: 0xF404E97B, Data2: 0x9034, Data3: 0x453C, Data4: ( 0x8E,0xBF,0x14,0x0A,0x38,0xC8,0x6F,0x1D ))// F404E97B-9034-453C-8EBF-140A38C86F1D
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel: WindowsFoundation.IID {
    .init(Data1: 0x41BF1265, Data2: 0xD2EE, Data3: 0x4B97, Data4: ( 0xA8,0x0A,0x7D,0x8D,0x64,0xCC,0xA6,0xF5 ))// 41BF1265-D2EE-4B97-A80A-7D8D64CCA6F5
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x222174D3, Data2: 0xCF4B, Data3: 0x46D7, Data4: ( 0xB7,0x39,0x6E,0xDC,0x16,0x11,0x0B,0xFB ))// 222174D3-CF4B-46D7-B739-6EDC16110BFB
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x88D61C0E, Data2: 0x23B4, Data3: 0x4BE8, Data4: ( 0x8A,0xFC,0x07,0x2C,0x25,0xA4,0x19,0x0D ))// 88D61C0E-23B4-4BE8-8AFC-072C25A4190D
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone: WindowsFoundation.IID {
    .init(Data1: 0x467DAB65, Data2: 0x2712, Data3: 0x4F52, Data4: ( 0xB7,0x83,0x9E,0xA8,0x11,0x1C,0x63,0xCD ))// 467DAB65-2712-4F52-B783-9EA8111C63CD
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther: WindowsFoundation.IID {
    .init(Data1: 0x8873B5AB, Data2: 0xC5FB, Data3: 0x46D8, Data4: ( 0x93,0xFE,0xDA,0x3F,0xF1,0x93,0x40,0x54 ))// 8873B5AB-C5FB-46D8-93FE-DA3FF1934054
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2: WindowsFoundation.IID {
    .init(Data1: 0x8D7BD474, Data2: 0x3F03, Data3: 0x45F8, Data4: ( 0xBA,0x0F,0xC4,0xED,0x37,0xD6,0x42,0x19 ))// 8D7BD474-3F03-45F8-BA0F-C4ED37D64219
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite: WindowsFoundation.IID {
    .init(Data1: 0x9F130176, Data2: 0xDC1B, Data3: 0x4055, Data4: ( 0xAD,0x66,0x65,0x2F,0x39,0xD9,0x90,0xE8 ))// 9F130176-DC1B-4055-AD66-652F39D990E8
}

private var IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2: WindowsFoundation.IID {
    .init(Data1: 0xF87EE91E, Data2: 0x5647, Data3: 0x4068, Data4: ( 0xBB,0x5E,0x4B,0x6F,0x43,0x7C,0xE3,0x08 ))// F87EE91E-5647-4068-BB5E-4B6F437CE308
}

public enum __ABI_Windows_ApplicationModel_Contacts {
    public class IContact: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_NameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Name(pThis, _value.get()))
            }
        }

        internal func get_ThumbnailImpl() throws -> UWP.AnyIRandomAccessStreamReference? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Thumbnail(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IRandomAccessStreamReferenceWrapper.unwrapFrom(abi: value)
        }

        internal func put_ThumbnailImpl(_ value: UWP.AnyIRandomAccessStreamReference?) throws {
            let valueWrapper = __ABI_Windows_Storage_Streams.IRandomAccessStreamReferenceWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Thumbnail(pThis, _value))
            }
        }

        internal func get_FieldsImpl() throws -> WindowsFoundation.AnyIVector<UWP.AnyIContactField?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Fields(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CIContactFieldWrapper.unwrapFrom(abi: value)
        }

    }

    public class IContact2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact2 }

        internal func get_IdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IdImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Id(pThis, _value.get()))
            }
        }

        internal func get_NotesImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Notes(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_NotesImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Notes(pThis, _value.get()))
            }
        }

        internal func get_PhonesImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactPhone?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Phones(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactPhoneWrapper.unwrapFrom(abi: value)
        }

        internal func get_EmailsImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactEmail?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Emails(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactEmailWrapper.unwrapFrom(abi: value)
        }

        internal func get_AddressesImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactAddress?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Addresses(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactAddressWrapper.unwrapFrom(abi: value)
        }

        internal func get_ConnectedServiceAccountsImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactConnectedServiceAccount?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ConnectedServiceAccounts(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactConnectedServiceAccountWrapper.unwrapFrom(abi: value)
        }

        internal func get_ImportantDatesImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactDate?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ImportantDates(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactDateWrapper.unwrapFrom(abi: value)
        }

        internal func get_DataSuppliersImpl() throws -> WindowsFoundation.AnyIVector<String>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_DataSuppliers(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1_HSTRINGWrapper.unwrapFrom(abi: value)
        }

        internal func get_JobInfoImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactJobInfo?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_JobInfo(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactJobInfoWrapper.unwrapFrom(abi: value)
        }

        internal func get_SignificantOthersImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactSignificantOther?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SignificantOthers(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactSignificantOtherWrapper.unwrapFrom(abi: value)
        }

        internal func get_WebsitesImpl() throws -> WindowsFoundation.AnyIVector<UWP.ContactWebsite?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Websites(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CContacts__CContactWebsiteWrapper.unwrapFrom(abi: value)
        }

        internal func get_ProviderPropertiesImpl() throws -> WindowsFoundation.AnyIPropertySet? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ProviderProperties(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Foundation_Collections.IPropertySetWrapper.unwrapFrom(abi: value)
        }

    }

    public class IContact3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContact3 }

        internal func get_ContactListIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ContactListId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DisplayPictureUserUpdateTimeImpl() throws -> WindowsFoundation.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayPictureUserUpdateTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_DisplayPictureUserUpdateTimeImpl(_ value: WindowsFoundation.DateTime) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DisplayPictureUserUpdateTime(pThis, .from(swift: value)))
            }
        }

        internal func get_IsMeImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsMe(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_AggregateIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AggregateId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_RemoteIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RemoteId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_RemoteIdImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RemoteId(pThis, _value.get()))
            }
        }

        internal func get_RingToneTokenImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RingToneToken(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_RingToneTokenImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RingToneToken(pThis, _value.get()))
            }
        }

        internal func get_IsDisplayPictureManuallySetImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsDisplayPictureManuallySet(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_LargeDisplayPictureImpl() throws -> UWP.AnyIRandomAccessStreamReference? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_LargeDisplayPicture(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IRandomAccessStreamReferenceWrapper.unwrapFrom(abi: value)
        }

        internal func get_SmallDisplayPictureImpl() throws -> UWP.AnyIRandomAccessStreamReference? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SmallDisplayPicture(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IRandomAccessStreamReferenceWrapper.unwrapFrom(abi: value)
        }

        internal func get_SourceDisplayPictureImpl() throws -> UWP.AnyIRandomAccessStreamReference? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_SourceDisplayPicture(pThis, &valueAbi))
                }
            }
            return __ABI_Windows_Storage_Streams.IRandomAccessStreamReferenceWrapper.unwrapFrom(abi: value)
        }

        internal func put_SourceDisplayPictureImpl(_ value: UWP.AnyIRandomAccessStreamReference?) throws {
            let valueWrapper = __ABI_Windows_Storage_Streams.IRandomAccessStreamReferenceWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_SourceDisplayPicture(pThis, _value))
            }
        }

        internal func get_TextToneTokenImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TextToneToken(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TextToneTokenImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TextToneToken(pThis, _value.get()))
            }
        }

        internal func get_IsAggregateImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsAggregate(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_FullNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FullName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_DisplayNameOverrideImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayNameOverride(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DisplayNameOverrideImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DisplayNameOverride(pThis, _value.get()))
            }
        }

        internal func get_NicknameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Nickname(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_NicknameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Nickname(pThis, _value.get()))
            }
        }

        internal func get_SortNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContact3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_SortName(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IContactAddress: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress }

        internal func get_StreetAddressImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StreetAddress(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_StreetAddressImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StreetAddress(pThis, _value.get()))
            }
        }

        internal func get_LocalityImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Locality(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_LocalityImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Locality(pThis, _value.get()))
            }
        }

        internal func get_RegionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Region(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_RegionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Region(pThis, _value.get()))
            }
        }

        internal func get_CountryImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Country(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_CountryImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Country(pThis, _value.get()))
            }
        }

        internal func get_PostalCodeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_PostalCode(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_PostalCodeImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_PostalCode(pThis, _value.get()))
            }
        }

        internal func get_KindImpl() throws -> UWP.ContactAddressKind {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactAddressKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Kind(pThis, &value))
            }
            return value
        }

        internal func put_KindImpl(_ value: UWP.ContactAddressKind) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Kind(pThis, value))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactAddress.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactConnectedServiceAccount: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount }

        internal func get_IdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Id(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IdImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Id(pThis, _value.get()))
            }
        }

        internal func get_ServiceNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ServiceName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ServiceNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactConnectedServiceAccount.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ServiceName(pThis, _value.get()))
            }
        }

    }

    public class IContactDate: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate }

        internal func get_DayImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Day(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func put_DayImpl(_ value: UInt32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT32Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Day(pThis, _value))
            }
        }

        internal func get_MonthImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Month(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func put_MonthImpl(_ value: UInt32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT32Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Month(pThis, _value))
            }
        }

        internal func get_YearImpl() throws -> Int32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Year(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_intWrapper.unwrapFrom(abi: value)
        }

        internal func put_YearImpl(_ value: Int32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_intWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Year(pThis, _value))
            }
        }

        internal func get_KindImpl() throws -> UWP.ContactDateKind {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactDateKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Kind(pThis, &value))
            }
            return value
        }

        internal func put_KindImpl(_ value: UWP.ContactDateKind) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Kind(pThis, value))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactDate.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactEmail: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail }

        internal func get_AddressImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Address(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AddressImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Address(pThis, _value.get()))
            }
        }

        internal func get_KindImpl() throws -> UWP.ContactEmailKind {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactEmailKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Kind(pThis, &value))
            }
            return value
        }

        internal func put_KindImpl(_ value: UWP.ContactEmailKind) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Kind(pThis, value))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactEmail.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactField: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactField }

        open func get_TypeImpl() throws -> UWP.ContactFieldType {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Type(pThis, &value))
            }
            return value
        }

        open func get_CategoryImpl() throws -> UWP.ContactFieldCategory {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactFieldCategory = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Category(pThis, &value))
            }
            return value
        }

        open func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        open func get_ValueImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactField.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Value(pThis, &value))
            }
            return .init(from: value)
        }

    }

    internal static var IContactFieldVTable: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactFieldVtbl = .init(
        QueryInterface: { IContactFieldWrapper.queryInterface($0, $1, $2) },
        AddRef: { IContactFieldWrapper.addRef($0) },
        Release: { IContactFieldWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_ApplicationModel_Contacts.IContactFieldWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.ApplicationModel.Contacts.IContactField").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_Type: {
            guard let __unwrapped__instance = IContactFieldWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.type
            $1?.initialize(to: value)
            return S_OK
        },

        get_Category: {
            guard let __unwrapped__instance = IContactFieldWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.category
            $1?.initialize(to: value)
            return S_OK
        },

        get_Name: {
            guard let __unwrapped__instance = IContactFieldWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.name
            $1?.initialize(to: try! HString(value).detach())
            return S_OK
        },

        get_Value: {
            guard let __unwrapped__instance = IContactFieldWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.value
            $1?.initialize(to: try! HString(value).detach())
            return S_OK
        }
    )

    public typealias IContactFieldWrapper = InterfaceWrapperBase<__IMPL_Windows_ApplicationModel_Contacts.IContactFieldBridge>
    public class IContactJobInfo: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo }

        internal func get_CompanyNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CompanyName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_CompanyNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CompanyName(pThis, _value.get()))
            }
        }

        internal func get_CompanyYomiNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CompanyYomiName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_CompanyYomiNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CompanyYomiName(pThis, _value.get()))
            }
        }

        internal func get_DepartmentImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Department(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DepartmentImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Department(pThis, _value.get()))
            }
        }

        internal func get_TitleImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Title(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TitleImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Title(pThis, _value.get()))
            }
        }

        internal func get_ManagerImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Manager(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_ManagerImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Manager(pThis, _value.get()))
            }
        }

        internal func get_OfficeImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Office(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_OfficeImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Office(pThis, _value.get()))
            }
        }

        internal func get_CompanyAddressImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CompanyAddress(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_CompanyAddressImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_CompanyAddress(pThis, _value.get()))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactJobInfo.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactName: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactName }

        internal func get_FirstNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_FirstName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_FirstNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_FirstName(pThis, _value.get()))
            }
        }

        internal func get_LastNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LastName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_LastNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_LastName(pThis, _value.get()))
            }
        }

        internal func get_MiddleNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_MiddleName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_MiddleNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_MiddleName(pThis, _value.get()))
            }
        }

        internal func get_YomiGivenNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_YomiGivenName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_YomiGivenNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_YomiGivenName(pThis, _value.get()))
            }
        }

        internal func get_YomiFamilyNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_YomiFamilyName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_YomiFamilyNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_YomiFamilyName(pThis, _value.get()))
            }
        }

        internal func get_HonorificNameSuffixImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HonorificNameSuffix(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_HonorificNameSuffixImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_HonorificNameSuffix(pThis, _value.get()))
            }
        }

        internal func get_HonorificNamePrefixImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HonorificNamePrefix(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_HonorificNamePrefixImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_HonorificNamePrefix(pThis, _value.get()))
            }
        }

        internal func get_DisplayNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayName(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_YomiDisplayNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactName.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_YomiDisplayName(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IContactPanel: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel }

        internal func ClosePanelImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.ClosePanel(pThis))
            }
        }

        internal func get_HeaderColorImpl() throws -> UWP.Color? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_HeaderColor(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper.unwrapFrom(abi: value)
        }

        internal func put_HeaderColorImpl(_ value: UWP.Color?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CUI__CColorWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_HeaderColor(pThis, _value))
            }
        }

        internal func add_LaunchFullAppRequestedImpl(_ handler: TypedEventHandler<UWP.ContactPanel?, UWP.ContactPanelLaunchFullAppRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelLaunchFullAppRequestedEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_LaunchFullAppRequested(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_LaunchFullAppRequestedImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_LaunchFullAppRequested(pThis, token))
            }
        }

        internal func add_ClosingImpl(_ handler: TypedEventHandler<UWP.ContactPanel?, UWP.ContactPanelClosingEventArgs?>?) throws -> EventRegistrationToken {
            var token: EventRegistrationToken = .init()
            let handlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanel___x_ABI_CWindows__CApplicationModel__CContacts__CContactPanelClosingEventArgsWrapper(handler)
            let _handler = try! handlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_Closing(pThis, _handler, &token))
            }
            return token
        }

        internal func remove_ClosingImpl(_ token: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanel.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_Closing(pThis, token))
            }
        }

    }

    public class IContactPanelClosingEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs }

        internal func GetDeferralImpl() throws -> WindowsFoundation.Deferral? {
            let (deferral) = try ComPtrs.initialize { deferralAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelClosingEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &deferralAbi))
                }
            }
            return .from(abi: deferral)
        }

    }

    public class IContactPanelLaunchFullAppRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs }

        internal func get_HandledImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Handled(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_HandledImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPanelLaunchFullAppRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Handled(pThis, .init(from: value)))
            }
        }

    }

    public class IContactPhone: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone }

        internal func get_NumberImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Number(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_NumberImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Number(pThis, _value.get()))
            }
        }

        internal func get_KindImpl() throws -> UWP.ContactPhoneKind {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactPhoneKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Kind(pThis, &value))
            }
            return value
        }

        internal func put_KindImpl(_ value: UWP.ContactPhoneKind) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Kind(pThis, value))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactPhone.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactSignificantOther: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther }

        internal func get_NameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Name(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_NameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Name(pThis, _value.get()))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactSignificantOther2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2 }

        internal func get_RelationshipImpl() throws -> UWP.ContactRelationship {
            var value: __x_ABI_CWindows_CApplicationModel_CContacts_CContactRelationship = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Relationship(pThis, &value))
            }
            return value
        }

        internal func put_RelationshipImpl(_ value: UWP.ContactRelationship) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactSignificantOther2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Relationship(pThis, value))
            }
        }

    }

    public class IContactWebsite: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite }

        internal func get_UriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_UriImpl(_ value: WindowsFoundation.Uri?) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Uri(pThis, RawPointer(value)))
            }
        }

        internal func get_DescriptionImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Description(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DescriptionImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Description(pThis, _value.get()))
            }
        }

    }

    public class IContactWebsite2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2 }

        internal func get_RawValueImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RawValue(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_RawValueImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CContacts_CIContactWebsite2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RawValue(pThis, _value.get()))
            }
        }

    }

}
