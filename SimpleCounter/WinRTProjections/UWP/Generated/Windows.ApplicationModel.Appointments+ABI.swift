// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment: WindowsFoundation.IID {
    .init(Data1: 0xDD002F2F, Data2: 0x2BDD, Data3: 0x4076, Data4: ( 0x90,0xA3,0x22,0xC2,0x75,0x31,0x29,0x65 ))// DD002F2F-2BDD-4076-90A3-22C275312965
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2: WindowsFoundation.IID {
    .init(Data1: 0x5E85983C, Data2: 0x540F, Data3: 0x3452, Data4: ( 0x9B,0x5C,0x0D,0xD7,0xAD,0x4C,0x65,0xA2 ))// 5E85983C-540F-3452-9B5C-0DD7AD4C65A2
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3: WindowsFoundation.IID {
    .init(Data1: 0xBFCC45A9, Data2: 0x8961, Data3: 0x4991, Data4: ( 0x93,0x4B,0xC4,0x87,0x68,0xE5,0xA9,0x6C ))// BFCC45A9-8961-4991-934B-C48768E5A96C
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee: WindowsFoundation.IID {
    .init(Data1: 0x13BF0796, Data2: 0x9842, Data3: 0x495B, Data4: ( 0xB0,0xE7,0xEF,0x8F,0x79,0xC0,0x70,0x1D ))// 13BF0796-9842-495B-B0E7-EF8F79C0701D
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant: WindowsFoundation.IID {
    .init(Data1: 0x615E2902, Data2: 0x9718, Data3: 0x467B, Data4: ( 0x83,0xFB,0xB2,0x93,0xA1,0x91,0x21,0xDE ))// 615E2902-9718-467B-83FB-B293A19121DE
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence: WindowsFoundation.IID {
    .init(Data1: 0xD87B3E83, Data2: 0x15A6, Data3: 0x487B, Data4: ( 0xB9,0x59,0x0C,0x36,0x1E,0x60,0xE9,0x54 ))// D87B3E83-15A6-487B-B959-0C361E60E954
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2: WindowsFoundation.IID {
    .init(Data1: 0x3DF3A2E0, Data2: 0x05A7, Data3: 0x4F50, Data4: ( 0x9F,0x86,0xB0,0x3F,0x94,0x36,0x25,0x4D ))// 3DF3A2E0-05A7-4F50-9F86-B03F9436254D
}

private var IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3: WindowsFoundation.IID {
    .init(Data1: 0x89FF96D9, Data2: 0xDA4D, Data3: 0x4A17, Data4: ( 0x8D,0xD2,0x1C,0xEB,0xC2,0xB5,0xFF,0x9D ))// 89FF96D9-DA4D-4A17-8DD2-1CEBC2B5FF9D
}

public enum __ABI_Windows_ApplicationModel_Appointments {
    public class IAppointment: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment }

        internal func get_StartTimeImpl() throws -> WindowsFoundation.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_StartTime(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_StartTimeImpl(_ value: WindowsFoundation.DateTime) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_StartTime(pThis, .from(swift: value)))
            }
        }

        internal func get_DurationImpl() throws -> WindowsFoundation.TimeSpan {
            var value: __x_ABI_CWindows_CFoundation_CTimeSpan = .init()
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Duration(pThis, &value))
            }
            return .from(abi: value)
        }

        internal func put_DurationImpl(_ value: WindowsFoundation.TimeSpan) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Duration(pThis, .from(swift: value)))
            }
        }

        internal func get_LocationImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Location(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_LocationImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Location(pThis, _value.get()))
            }
        }

        internal func get_SubjectImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Subject(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_SubjectImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Subject(pThis, _value.get()))
            }
        }

        internal func get_DetailsImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Details(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_DetailsImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Details(pThis, _value.get()))
            }
        }

        internal func get_ReminderImpl() throws -> WindowsFoundation.TimeSpan? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Reminder(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper.unwrapFrom(abi: value)
        }

        internal func put_ReminderImpl(_ value: WindowsFoundation.TimeSpan?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CTimeSpanWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Reminder(pThis, _value))
            }
        }

        internal func get_OrganizerImpl() throws -> UWP.AppointmentOrganizer? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Organizer(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_OrganizerImpl(_ value: UWP.AppointmentOrganizer?) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Organizer(pThis, RawPointer(value)))
            }
        }

        internal func get_InviteesImpl() throws -> WindowsFoundation.AnyIVector<UWP.AppointmentInvitee?>? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Invitees(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIVector_1___x_ABI_CWindows__CApplicationModel__CAppointments__CAppointmentInviteeWrapper.unwrapFrom(abi: value)
        }

        internal func get_RecurrenceImpl() throws -> UWP.AppointmentRecurrence? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Recurrence(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_RecurrenceImpl(_ value: UWP.AppointmentRecurrence?) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Recurrence(pThis, RawPointer(value)))
            }
        }

        internal func get_BusyStatusImpl() throws -> UWP.AppointmentBusyStatus {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentBusyStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_BusyStatus(pThis, &value))
            }
            return value
        }

        internal func put_BusyStatusImpl(_ value: UWP.AppointmentBusyStatus) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_BusyStatus(pThis, value))
            }
        }

        internal func get_AllDayImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AllDay(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AllDayImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AllDay(pThis, .init(from: value)))
            }
        }

        internal func get_SensitivityImpl() throws -> UWP.AppointmentSensitivity {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentSensitivity = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Sensitivity(pThis, &value))
            }
            return value
        }

        internal func put_SensitivityImpl(_ value: UWP.AppointmentSensitivity) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Sensitivity(pThis, value))
            }
        }

        internal func get_UriImpl() throws -> WindowsFoundation.Uri? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Uri(pThis, &valueAbi))
                }
            }
            return .from(abi: value)
        }

        internal func put_UriImpl(_ value: WindowsFoundation.Uri?) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Uri(pThis, RawPointer(value)))
            }
        }

    }

    public class IAppointment2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2 }

        internal func get_LocalIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_LocalId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_CalendarIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CalendarId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_RoamingIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RoamingId(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_RoamingIdImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RoamingId(pThis, _value.get()))
            }
        }

        internal func get_OriginalStartTimeImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_OriginalStartTime(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func get_IsResponseRequestedImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsResponseRequested(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsResponseRequestedImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsResponseRequested(pThis, .init(from: value)))
            }
        }

        internal func get_AllowNewTimeProposalImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_AllowNewTimeProposal(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_AllowNewTimeProposalImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_AllowNewTimeProposal(pThis, .init(from: value)))
            }
        }

        internal func get_OnlineMeetingLinkImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_OnlineMeetingLink(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_OnlineMeetingLinkImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_OnlineMeetingLink(pThis, _value.get()))
            }
        }

        internal func get_ReplyTimeImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_ReplyTime(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_ReplyTimeImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_ReplyTime(pThis, _value))
            }
        }

        internal func get_UserResponseImpl() throws -> UWP.AppointmentParticipantResponse {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_UserResponse(pThis, &value))
            }
            return value
        }

        internal func put_UserResponseImpl(_ value: UWP.AppointmentParticipantResponse) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_UserResponse(pThis, value))
            }
        }

        internal func get_HasInviteesImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_HasInvitees(pThis, &value))
            }
            return .init(from: value)
        }

        internal func get_IsCanceledMeetingImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsCanceledMeeting(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsCanceledMeetingImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsCanceledMeeting(pThis, .init(from: value)))
            }
        }

        internal func get_IsOrganizedByUserImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsOrganizedByUser(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsOrganizedByUserImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsOrganizedByUser(pThis, .init(from: value)))
            }
        }

    }

    public class IAppointment3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3 }

        internal func get_ChangeNumberImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_ChangeNumber(pThis, &value))
            }
            return value
        }

        internal func get_RemoteChangeNumberImpl() throws -> UInt64 {
            var value: UINT64 = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RemoteChangeNumber(pThis, &value))
            }
            return value
        }

        internal func put_RemoteChangeNumberImpl(_ value: UInt64) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_RemoteChangeNumber(pThis, value))
            }
        }

        internal func get_DetailsKindImpl() throws -> UWP.AppointmentDetailsKind {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDetailsKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DetailsKind(pThis, &value))
            }
            return value
        }

        internal func put_DetailsKindImpl(_ value: UWP.AppointmentDetailsKind) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointment3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DetailsKind(pThis, value))
            }
        }

    }

    public class IAppointmentInvitee: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee }

        internal func get_RoleImpl() throws -> UWP.AppointmentParticipantRole {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantRole = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Role(pThis, &value))
            }
            return value
        }

        internal func put_RoleImpl(_ value: UWP.AppointmentParticipantRole) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Role(pThis, value))
            }
        }

        internal func get_ResponseImpl() throws -> UWP.AppointmentParticipantResponse {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentParticipantResponse = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Response(pThis, &value))
            }
            return value
        }

        internal func put_ResponseImpl(_ value: UWP.AppointmentParticipantResponse) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentInvitee.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Response(pThis, value))
            }
        }

    }

    public class IAppointmentParticipant: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant }

        open func get_DisplayNameImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DisplayName(pThis, &value))
            }
            return .init(from: value)
        }

        open func put_DisplayNameImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DisplayName(pThis, _value.get()))
            }
        }

        open func get_AddressImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Address(pThis, &value))
            }
            return .init(from: value)
        }

        open func put_AddressImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipant.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Address(pThis, _value.get()))
            }
        }

    }

    internal static var IAppointmentParticipantVTable: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentParticipantVtbl = .init(
        QueryInterface: { IAppointmentParticipantWrapper.queryInterface($0, $1, $2) },
        AddRef: { IAppointmentParticipantWrapper.addRef($0) },
        Release: { IAppointmentParticipantWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_ApplicationModel_Appointments.IAppointmentParticipantWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.ApplicationModel.Appointments.IAppointmentParticipant").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_DisplayName: {
            guard let __unwrapped__instance = IAppointmentParticipantWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.displayName
            $1?.initialize(to: try! HString(value).detach())
            return S_OK
        },

        put_DisplayName: {
            guard let __unwrapped__instance = IAppointmentParticipantWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value: String = .init(from: $1)
            __unwrapped__instance.displayName = value
            return S_OK
        },

        get_Address: {
            guard let __unwrapped__instance = IAppointmentParticipantWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.address
            $1?.initialize(to: try! HString(value).detach())
            return S_OK
        },

        put_Address: {
            guard let __unwrapped__instance = IAppointmentParticipantWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value: String = .init(from: $1)
            __unwrapped__instance.address = value
            return S_OK
        }
    )

    public typealias IAppointmentParticipantWrapper = InterfaceWrapperBase<__IMPL_Windows_ApplicationModel_Appointments.IAppointmentParticipantBridge>
    public class IAppointmentRecurrence: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence }

        internal func get_UnitImpl() throws -> UWP.AppointmentRecurrenceUnit {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentRecurrenceUnit = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Unit(pThis, &value))
            }
            return value
        }

        internal func put_UnitImpl(_ value: UWP.AppointmentRecurrenceUnit) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Unit(pThis, value))
            }
        }

        internal func get_OccurrencesImpl() throws -> UInt32? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Occurrences(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1_UINT32Wrapper.unwrapFrom(abi: value)
        }

        internal func put_OccurrencesImpl(_ value: UInt32?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1_UINT32Wrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Occurrences(pThis, _value))
            }
        }

        internal func get_UntilImpl() throws -> WindowsFoundation.DateTime? {
            let (value) = try ComPtrs.initialize { valueAbi in
                _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Until(pThis, &valueAbi))
                }
            }
            return UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper.unwrapFrom(abi: value)
        }

        internal func put_UntilImpl(_ value: WindowsFoundation.DateTime?) throws {
            let valueWrapper = UWP.__x_ABI_C__FIReference_1___x_ABI_CWindows__CFoundation__CDateTimeWrapper(value)
            let _value = try! valueWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Until(pThis, _value))
            }
        }

        internal func get_IntervalImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Interval(pThis, &value))
            }
            return value
        }

        internal func put_IntervalImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Interval(pThis, value))
            }
        }

        internal func get_DaysOfWeekImpl() throws -> UWP.AppointmentDaysOfWeek {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentDaysOfWeek = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DaysOfWeek(pThis, &value))
            }
            return value
        }

        internal func put_DaysOfWeekImpl(_ value: UWP.AppointmentDaysOfWeek) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_DaysOfWeek(pThis, value))
            }
        }

        internal func get_WeekOfMonthImpl() throws -> UWP.AppointmentWeekOfMonth {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CAppointmentWeekOfMonth = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_WeekOfMonth(pThis, &value))
            }
            return value
        }

        internal func put_WeekOfMonthImpl(_ value: UWP.AppointmentWeekOfMonth) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_WeekOfMonth(pThis, value))
            }
        }

        internal func get_MonthImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Month(pThis, &value))
            }
            return value
        }

        internal func put_MonthImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Month(pThis, value))
            }
        }

        internal func get_DayImpl() throws -> UInt32 {
            var value: UINT32 = 0
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Day(pThis, &value))
            }
            return value
        }

        internal func put_DayImpl(_ value: UInt32) throws {
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_Day(pThis, value))
            }
        }

    }

    public class IAppointmentRecurrence2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2 }

        internal func get_RecurrenceTypeImpl() throws -> UWP.RecurrenceType {
            var value: __x_ABI_CWindows_CApplicationModel_CAppointments_CRecurrenceType = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_RecurrenceType(pThis, &value))
            }
            return value
        }

        internal func get_TimeZoneImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_TimeZone(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_TimeZoneImpl(_ value: String) throws {
            let _value = try! HString(value)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_TimeZone(pThis, _value.get()))
            }
        }

    }

    public class IAppointmentRecurrence3: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3 }

        internal func get_CalendarIdentifierImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CAppointments_CIAppointmentRecurrence3.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_CalendarIdentifier(pThis, &value))
            }
            return .init(from: value)
        }

    }

}
