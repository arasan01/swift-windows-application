// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.quicklink)
public final class QuickLink : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel_DataTransfer_ShareTarget.IQuickLink
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CDataTransfer_CShareTarget_CIQuickLink
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CApplicationModel_CDataTransfer_CShareTarget_CIQuickLink>?) -> QuickLink? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    override public init() {
        super.init(try! RoActivateInstance(HString("Windows.ApplicationModel.DataTransfer.ShareTarget.QuickLink")))
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.quicklink.id)
    public var id : String {
        get { try! _default.get_IdImpl() }
        set { try! _default.put_IdImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.quicklink.supporteddataformats)
    public var supportedDataFormats : WindowsFoundation.AnyIVector<String>! {
        get { try! _default.get_SupportedDataFormatsImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.quicklink.supportedfiletypes)
    public var supportedFileTypes : WindowsFoundation.AnyIVector<String>! {
        get { try! _default.get_SupportedFileTypesImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.quicklink.thumbnail)
    public var thumbnail : UWP.RandomAccessStreamReference! {
        get { try! _default.get_ThumbnailImpl() }
        set { try! _default.put_ThumbnailImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.quicklink.title)
    public var title : String {
        get { try! _default.get_TitleImpl() }
        set { try! _default.put_TitleImpl(newValue) }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation)
public final class ShareOperation : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_ApplicationModel_DataTransfer_ShareTarget.IShareOperation
    private typealias CABI = __x_ABI_CWindows_CApplicationModel_CDataTransfer_CShareTarget_CIShareOperation
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CApplicationModel_CDataTransfer_CShareTarget_CIShareOperation>?) -> ShareOperation? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.removethisquicklink)
    public func removeThisQuickLink() throws {
        try _default.RemoveThisQuickLinkImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.reportstarted)
    public func reportStarted() throws {
        try _default.ReportStartedImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.reportdataretrieved)
    public func reportDataRetrieved() throws {
        try _default.ReportDataRetrievedImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.reportsubmittedbackgroundtask)
    public func reportSubmittedBackgroundTask() throws {
        try _default.ReportSubmittedBackgroundTaskImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.reportcompleted)
    public func reportCompleted(_ quicklink: QuickLink!) throws {
        try _default.ReportCompletedWithQuickLinkImpl(quicklink)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.reportcompleted)
    public func reportCompleted() throws {
        try _default.ReportCompletedImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.reporterror)
    public func reportError(_ value: String) throws {
        try _default.ReportErrorImpl(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.data)
    public var data : UWP.DataPackageView! {
        get { try! _default.get_DataImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.quicklinkid)
    public var quickLinkId : String {
        get { try! _default.get_QuickLinkIdImpl() }
    }

    private lazy var _IShareOperation2: __ABI_Windows_ApplicationModel_DataTransfer_ShareTarget.IShareOperation2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.dismissui)
    public func dismissUI() throws {
        try _IShareOperation2.DismissUIImpl()
    }

    private lazy var _IShareOperation3: __ABI_Windows_ApplicationModel_DataTransfer_ShareTarget.IShareOperation3! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.applicationmodel.datatransfer.sharetarget.shareoperation.contacts)
    public var contacts : WindowsFoundation.AnyIVectorView<UWP.Contact?>! {
        get { try! _IShareOperation3.get_ContactsImpl() }
    }

    deinit {
        _default = nil
        _IShareOperation2 = nil
        _IShareOperation3 = nil
    }
}

