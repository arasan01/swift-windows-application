// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowdetail)
public typealias Print3DWorkflowDetail = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowstatus)
public typealias Print3DWorkflowStatus = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus
/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflow)
public final class Print3DWorkflow : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrint3DWorkflow
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow>?) -> Print3DWorkflow? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflow.getprintmodelpackage)
    public func getPrintModelPackage() throws -> Any! {
        try _default.GetPrintModelPackageImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflow.deviceid)
    public var deviceID : String {
        get { try! _default.get_DeviceIDImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflow.isprintready)
    public var isPrintReady : Bool {
        get { try! _default.get_IsPrintReadyImpl() }
        set { try! _default.put_IsPrintReadyImpl(newValue) }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflow.printrequested)
    public lazy var printRequested : Event<TypedEventHandler<Print3DWorkflow?, Print3DWorkflowPrintRequestedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_PrintRequestedImpl($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_PrintRequestedImpl($0)
       }
      )
    }()

    private lazy var _IPrint3DWorkflow2: __ABI_Windows_Devices_Printers_Extensions.IPrint3DWorkflow2! = getInterfaceForCaching()
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflow.printerchanged)
    public lazy var printerChanged : Event<TypedEventHandler<Print3DWorkflow?, Print3DWorkflowPrinterChangedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._IPrint3DWorkflow2 else { return .init() }
          return try! this.add_PrinterChangedImpl($0)
        },
        remove: { [weak self] in
         try? self?._IPrint3DWorkflow2.remove_PrinterChangedImpl($0)
       }
      )
    }()

    deinit {
        _default = nil
        _IPrint3DWorkflow2 = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprintrequestedeventargs)
public final class Print3DWorkflowPrintRequestedEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrint3DWorkflowPrintRequestedEventArgs
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs>?) -> Print3DWorkflowPrintRequestedEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprintrequestedeventargs.setextendedstatus)
    public func setExtendedStatus(_ value: Print3DWorkflowDetail) throws {
        try _default.SetExtendedStatusImpl(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprintrequestedeventargs.setsource)
    public func setSource(_ source: Any!) throws {
        try _default.SetSourceImpl(source)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprintrequestedeventargs.setsourcechanged)
    public func setSourceChanged(_ value: Bool) throws {
        try _default.SetSourceChangedImpl(value)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprintrequestedeventargs.status)
    public var status : Print3DWorkflowStatus {
        get { try! _default.get_StatusImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprinterchangedeventargs)
public final class Print3DWorkflowPrinterChangedEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrint3DWorkflowPrinterChangedEventArgs
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrinterChangedEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrinterChangedEventArgs>?) -> Print3DWorkflowPrinterChangedEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.print3dworkflowprinterchangedeventargs.newdeviceid)
    public var newDeviceId : String {
        get { try! _default.get_NewDeviceIdImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfiguration)
public final class PrintTaskConfiguration : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrintTaskConfiguration
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration>?) -> PrintTaskConfiguration? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfiguration.printerextensioncontext)
    public var printerExtensionContext : Any! {
        get { try! _default.get_PrinterExtensionContextImpl() }
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfiguration.saverequested)
    public lazy var saveRequested : Event<TypedEventHandler<PrintTaskConfiguration?, PrintTaskConfigurationSaveRequestedEventArgs?>> = {
      .init(
        add: { [weak self] in
          guard let this = self?._default else { return .init() }
          return try! this.add_SaveRequestedImpl($0)
        },
        remove: { [weak self] in
         try? self?._default.remove_SaveRequestedImpl($0)
       }
      )
    }()

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequest)
public final class PrintTaskConfigurationSaveRequest : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrintTaskConfigurationSaveRequest
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest>?) -> PrintTaskConfigurationSaveRequest? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequest.cancel)
    public func cancel() throws {
        try _default.CancelImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequest.save)
    public func save(_ printerExtensionContext: Any!) throws {
        try _default.SaveImpl(printerExtensionContext)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequest.getdeferral)
    public func getDeferral() throws -> PrintTaskConfigurationSaveRequestedDeferral! {
        try _default.GetDeferralImpl()
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequest.deadline)
    public var deadline : WindowsFoundation.DateTime {
        get { try! _default.get_DeadlineImpl() }
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequesteddeferral)
public final class PrintTaskConfigurationSaveRequestedDeferral : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrintTaskConfigurationSaveRequestedDeferral
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedDeferral
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedDeferral>?) -> PrintTaskConfigurationSaveRequestedDeferral? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequesteddeferral.complete)
    public func complete() throws {
        try _default.CompleteImpl()
    }

    deinit {
        _default = nil
    }
}

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequestedeventargs)
public final class PrintTaskConfigurationSaveRequestedEventArgs : WinRTClass {
    private typealias SwiftABI = __ABI_Windows_Devices_Printers_Extensions.IPrintTaskConfigurationSaveRequestedEventArgs
    private typealias CABI = __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedEventArgs
    private lazy var _default: SwiftABI! = getInterfaceForCaching()
    @_spi(WinRTInternal)
    override public func _getABI<T>() -> UnsafeMutablePointer<T>? {
        if T.self == CABI.self {
            return RawPointer(_default)
        }
        return super._getABI()
    }

    @_spi(WinRTInternal)
    public static func from(abi: ComPtr<__x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedEventArgs>?) -> PrintTaskConfigurationSaveRequestedEventArgs? {
        guard let abi = abi else { return nil }
        return .init(fromAbi: WindowsFoundation.IInspectable(abi))
    }

    @_spi(WinRTInternal)
    public init(fromAbi: WindowsFoundation.IInspectable) {
        super.init(fromAbi)
    }

    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.devices.printers.extensions.printtaskconfigurationsaverequestedeventargs.request)
    public var request : PrintTaskConfigurationSaveRequest! {
        get { try! _default.get_RequestImpl() }
    }

    deinit {
        _default = nil
    }
}

extension UWP.Print3DWorkflowDetail {
    public static var unknown : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_Unknown
    }
    public static var modelExceedsPrintBed : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_ModelExceedsPrintBed
    }
    public static var uploadFailed : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_UploadFailed
    }
    public static var invalidMaterialSelection : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_InvalidMaterialSelection
    }
    public static var invalidModel : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_InvalidModel
    }
    public static var modelNotManifold : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_ModelNotManifold
    }
    public static var invalidPrintTicket : UWP.Print3DWorkflowDetail {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowDetail_InvalidPrintTicket
    }
}
extension UWP.Print3DWorkflowDetail: @retroactive Hashable, @retroactive Codable {}

extension UWP.Print3DWorkflowStatus {
    public static var abandoned : UWP.Print3DWorkflowStatus {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus_Abandoned
    }
    public static var canceled : UWP.Print3DWorkflowStatus {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus_Canceled
    }
    public static var failed : UWP.Print3DWorkflowStatus {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus_Failed
    }
    public static var slicing : UWP.Print3DWorkflowStatus {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus_Slicing
    }
    public static var submitted : UWP.Print3DWorkflowStatus {
        __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus_Submitted
    }
}
extension UWP.Print3DWorkflowStatus: @retroactive Hashable, @retroactive Codable {}

