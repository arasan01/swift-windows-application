// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow: WindowsFoundation.IID {
    .init(Data1: 0xC56F74BD, Data2: 0x3669, Data3: 0x4A66, Data4: ( 0xAB,0x42,0xC8,0x15,0x19,0x30,0xCD,0x34 ))// C56F74BD-3669-4A66-AB42-C8151930CD34
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow2: WindowsFoundation.IID {
    .init(Data1: 0xA2A6C54F, Data2: 0x8AC1, Data3: 0x4918, Data4: ( 0x97,0x41,0xE3,0x4F,0x30,0x04,0x23,0x9E ))// A2A6C54F-8AC1-4918-9741-E34F3004239E
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x19F8C858, Data2: 0x5AC8, Data3: 0x4B55, Data4: ( 0x8A,0x5F,0xE6,0x15,0x67,0xDA,0xFB,0x4D ))// 19F8C858-5AC8-4B55-8A5F-E61567DAFB4D
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrinterChangedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0x45226402, Data2: 0x95FC, Data3: 0x4847, Data4: ( 0x93,0xB3,0x13,0x4D,0xBF,0x5C,0x60,0xF7 ))// 45226402-95FC-4847-93B3-134DBF5C60F7
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration: WindowsFoundation.IID {
    .init(Data1: 0xE3C22451, Data2: 0x3AA4, Data3: 0x4885, Data4: ( 0x92,0x40,0x31,0x1F,0x5F,0x8F,0xBE,0x9D ))// E3C22451-3AA4-4885-9240-311F5F8FBE9D
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest: WindowsFoundation.IID {
    .init(Data1: 0xEEAF2FCB, Data2: 0x621E, Data3: 0x4B62, Data4: ( 0xAC,0x77,0xB2,0x81,0xCC,0xE0,0x8D,0x60 ))// EEAF2FCB-621E-4B62-AC77-B281CCE08D60
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedDeferral: WindowsFoundation.IID {
    .init(Data1: 0xE959D568, Data2: 0xF729, Data3: 0x44A4, Data4: ( 0x87,0x1D,0xBD,0x06,0x28,0x69,0x6A,0x33 ))// E959D568-F729-44A4-871D-BD0628696A33
}

private var IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedEventArgs: WindowsFoundation.IID {
    .init(Data1: 0xE06C2879, Data2: 0x0D61, Data3: 0x4938, Data4: ( 0x91,0xD0,0x96,0xA4,0x5B,0xEE,0x84,0x79 ))// E06C2879-0D61-4938-91D0-96A45BEE8479
}

public enum __ABI_Windows_Devices_Printers_Extensions {
    public class IPrint3DWorkflow: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow }

        internal func get_DeviceIDImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_DeviceID(pThis, &value))
            }
            return .init(from: value)
        }

        internal func GetPrintModelPackageImpl() throws -> Any? {
            let (printModelPackage) = try ComPtrs.initialize { printModelPackageAbi in
                _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetPrintModelPackage(pThis, &printModelPackageAbi))
                }
            }
            return __ABI_.AnyWrapper.unwrapFrom(abi: printModelPackage)
        }

        internal func get_IsPrintReadyImpl() throws -> Bool {
            var value: boolean = 0
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_IsPrintReady(pThis, &value))
            }
            return .init(from: value)
        }

        internal func put_IsPrintReadyImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.put_IsPrintReady(pThis, .init(from: value)))
            }
        }

        internal func add_PrintRequestedImpl(_ eventHandler: TypedEventHandler<UWP.Print3DWorkflow?, UWP.Print3DWorkflowPrintRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var eventCookie: EventRegistrationToken = .init()
            let eventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPrinters__CExtensions__CPrint3DWorkflow___x_ABI_CWindows__CDevices__CPrinters__CExtensions__CPrint3DWorkflowPrintRequestedEventArgsWrapper(eventHandler)
            let _eventHandler = try! eventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PrintRequested(pThis, _eventHandler, &eventCookie))
            }
            return eventCookie
        }

        internal func remove_PrintRequestedImpl(_ eventCookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PrintRequested(pThis, eventCookie))
            }
        }

    }

    public class IPrint3DWorkflow2: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow2 }

        internal func add_PrinterChangedImpl(_ eventHandler: TypedEventHandler<UWP.Print3DWorkflow?, UWP.Print3DWorkflowPrinterChangedEventArgs?>?) throws -> EventRegistrationToken {
            var eventCookie: EventRegistrationToken = .init()
            let eventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPrinters__CExtensions__CPrint3DWorkflow___x_ABI_CWindows__CDevices__CPrinters__CExtensions__CPrint3DWorkflowPrinterChangedEventArgsWrapper(eventHandler)
            let _eventHandler = try! eventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_PrinterChanged(pThis, _eventHandler, &eventCookie))
            }
            return eventCookie
        }

        internal func remove_PrinterChangedImpl(_ eventCookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflow2.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_PrinterChanged(pThis, eventCookie))
            }
        }

    }

    public class IPrint3DWorkflowPrintRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs }

        internal func get_StatusImpl() throws -> UWP.Print3DWorkflowStatus {
            var value: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CPrint3DWorkflowStatus = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Status(pThis, &value))
            }
            return value
        }

        internal func SetExtendedStatusImpl(_ value: UWP.Print3DWorkflowDetail) throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetExtendedStatus(pThis, value))
            }
        }

        internal func SetSourceImpl(_ source: Any?) throws {
            let sourceWrapper = __ABI_.AnyWrapper(source)
            let _source = try! sourceWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetSource(pThis, _source))
            }
        }

        internal func SetSourceChangedImpl(_ value: Bool) throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrintRequestedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.SetSourceChanged(pThis, .init(from: value)))
            }
        }

    }

    public class IPrint3DWorkflowPrinterChangedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrinterChangedEventArgs }

        internal func get_NewDeviceIdImpl() throws -> String {
            var value: HSTRING?
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrint3DWorkflowPrinterChangedEventArgs.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_NewDeviceId(pThis, &value))
            }
            return .init(from: value)
        }

    }

    public class IPrintTaskConfiguration: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration }

        internal func get_PrinterExtensionContextImpl() throws -> Any? {
            let (context) = try ComPtrs.initialize { contextAbi in
                _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_PrinterExtensionContext(pThis, &contextAbi))
                }
            }
            return __ABI_.AnyWrapper.unwrapFrom(abi: context)
        }

        internal func add_SaveRequestedImpl(_ eventHandler: TypedEventHandler<UWP.PrintTaskConfiguration?, UWP.PrintTaskConfigurationSaveRequestedEventArgs?>?) throws -> EventRegistrationToken {
            var eventCookie: EventRegistrationToken = .init()
            let eventHandlerWrapper = UWP.__x_ABI_C__FITypedEventHandler_2___x_ABI_CWindows__CDevices__CPrinters__CExtensions__CPrintTaskConfiguration___x_ABI_CWindows__CDevices__CPrinters__CExtensions__CPrintTaskConfigurationSaveRequestedEventArgsWrapper(eventHandler)
            let _eventHandler = try! eventHandlerWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.add_SaveRequested(pThis, _eventHandler, &eventCookie))
            }
            return eventCookie
        }

        internal func remove_SaveRequestedImpl(_ eventCookie: EventRegistrationToken) throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfiguration.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.remove_SaveRequested(pThis, eventCookie))
            }
        }

    }

    public class IPrintTaskConfigurationSaveRequest: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest }

        internal func CancelImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Cancel(pThis))
            }
        }

        internal func SaveImpl(_ printerExtensionContext: Any?) throws {
            let printerExtensionContextWrapper = __ABI_.AnyWrapper(printerExtensionContext)
            let _printerExtensionContext = try! printerExtensionContextWrapper?.toABI { $0 }
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Save(pThis, _printerExtensionContext))
            }
        }

        internal func GetDeferralImpl() throws -> UWP.PrintTaskConfigurationSaveRequestedDeferral? {
            let (deferral) = try ComPtrs.initialize { deferralAbi in
                _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.GetDeferral(pThis, &deferralAbi))
                }
            }
            return .from(abi: deferral)
        }

        internal func get_DeadlineImpl() throws -> WindowsFoundation.DateTime {
            var value: __x_ABI_CWindows_CFoundation_CDateTime = .init()
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequest.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Deadline(pThis, &value))
            }
            return .from(abi: value)
        }

    }

    public class IPrintTaskConfigurationSaveRequestedDeferral: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedDeferral }

        internal func CompleteImpl() throws {
            _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedDeferral.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.Complete(pThis))
            }
        }

    }

    public class IPrintTaskConfigurationSaveRequestedEventArgs: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedEventArgs }

        internal func get_RequestImpl() throws -> UWP.PrintTaskConfigurationSaveRequest? {
            let (context) = try ComPtrs.initialize { contextAbi in
                _ = try perform(as: __x_ABI_CWindows_CDevices_CPrinters_CExtensions_CIPrintTaskConfigurationSaveRequestedEventArgs.self) { pThis in
                    try CHECKED(pThis.pointee.lpVtbl.pointee.get_Request(pThis, &contextAbi))
                }
            }
            return .from(abi: context)
        }

    }

}
