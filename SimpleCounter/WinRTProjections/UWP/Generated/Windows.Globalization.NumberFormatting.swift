// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

/// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.globalization.numberformatting.inumberformatter2)
public protocol INumberFormatter2 : WinRTInterface {
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.globalization.numberformatting.inumberformatter2.formatint)
    func formatInt(_ value: Int64) throws -> String
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.globalization.numberformatting.inumberformatter2.formatuint)
    func formatUInt(_ value: UInt64) throws -> String
    /// [Open Microsoft documentation](https://learn.microsoft.com/uwp/api/windows.globalization.numberformatting.inumberformatter2.formatdouble)
    func formatDouble(_ value: Double) throws -> String
}

extension INumberFormatter2 {
    public func queryInterface(_ iid: WindowsFoundation.IID) -> IUnknownRef? {
        switch iid {
            case __ABI_Windows_Globalization_NumberFormatting.INumberFormatter2Wrapper.IID:
                let wrapper = __ABI_Windows_Globalization_NumberFormatting.INumberFormatter2Wrapper(self)
                return wrapper!.queryInterface(iid)
            default: return nil
        }
    }
}
public typealias AnyINumberFormatter2 = any INumberFormatter2

