// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

private var IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CProvider_CIUserDataAccountProviderOperation: WindowsFoundation.IID {
    .init(Data1: 0xA20AAD63, Data2: 0x888C, Data3: 0x4A62, Data4: ( 0xA3,0xDD,0x34,0xD0,0x7A,0x80,0x2B,0x2B ))// A20AAD63-888C-4A62-A3DD-34D07A802B2B
}

public enum __ABI_Windows_ApplicationModel_UserDataAccounts_Provider {
    public class IUserDataAccountProviderOperation: WindowsFoundation.IInspectable {
        override public class var IID: WindowsFoundation.IID { IID___x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CProvider_CIUserDataAccountProviderOperation }

        open func get_KindImpl() throws -> UWP.UserDataAccountProviderOperationKind {
            var value: __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CProvider_CUserDataAccountProviderOperationKind = .init(0)
            _ = try perform(as: __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CProvider_CIUserDataAccountProviderOperation.self) { pThis in
                try CHECKED(pThis.pointee.lpVtbl.pointee.get_Kind(pThis, &value))
            }
            return value
        }

    }

    internal static var IUserDataAccountProviderOperationVTable: __x_ABI_CWindows_CApplicationModel_CUserDataAccounts_CProvider_CIUserDataAccountProviderOperationVtbl = .init(
        QueryInterface: { IUserDataAccountProviderOperationWrapper.queryInterface($0, $1, $2) },
        AddRef: { IUserDataAccountProviderOperationWrapper.addRef($0) },
        Release: { IUserDataAccountProviderOperationWrapper.release($0) },
        GetIids: {
            let size = MemoryLayout<WindowsFoundation.IID>.size
            let iids = CoTaskMemAlloc(UInt64(size) * 3).assumingMemoryBound(to: WindowsFoundation.IID.self)
            iids[0] = IUnknown.IID
            iids[1] = IInspectable.IID
            iids[2] = __ABI_Windows_ApplicationModel_UserDataAccounts_Provider.IUserDataAccountProviderOperationWrapper.IID
            $1!.pointee = 3
            $2!.pointee = iids
            return S_OK
        },

        GetRuntimeClassName: {
            _ = $0
            let hstring = try! HString("Windows.ApplicationModel.UserDataAccounts.Provider.IUserDataAccountProviderOperation").detach()
            $1!.pointee = hstring
            return S_OK
        },

        GetTrustLevel: {
            _ = $0
            $1!.pointee = TrustLevel(rawValue: 0)
            return S_OK
        },

        get_Kind: {
            guard let __unwrapped__instance = IUserDataAccountProviderOperationWrapper.tryUnwrapFrom(raw: $0) else { return E_INVALIDARG }
            let value = __unwrapped__instance.kind
            $1?.initialize(to: value)
            return S_OK
        }
    )

    public typealias IUserDataAccountProviderOperationWrapper = InterfaceWrapperBase<__IMPL_Windows_ApplicationModel_UserDataAccounts_Provider.IUserDataAccountProviderOperationBridge>
}
