// WARNING: Please don't edit this file. It was generated by Swift/WinRT v0.0.1
// swiftlint:disable all
import Foundation
@_spi(WinRTInternal) @_spi(WinRTImplements) import WindowsFoundation
import CWinRT

fileprivate func makeIEnteredBackgroundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel.IEnteredBackgroundEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel.IEnteredBackgroundEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeILeavingBackgroundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel.ILeavingBackgroundEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel.ILeavingBackgroundEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISuspendingDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel.ISuspendingDeferral = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel.ISuspendingDeferralBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISuspendingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel.ISuspendingEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel.ISuspendingEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISuspendingOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel.ISuspendingOperation = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel.ISuspendingOperationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIActivatedEventArgsWithUserFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IActivatedEventArgsWithUser = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IActivatedEventArgsWithUserBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIApplicationViewActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IApplicationViewActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IApplicationViewActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentsProviderActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IAppointmentsProviderActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IAppointmentsProviderActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentsProviderAddAppointmentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IAppointmentsProviderAddAppointmentActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IAppointmentsProviderAddAppointmentActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentsProviderRemoveAppointmentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IAppointmentsProviderRemoveAppointmentActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IAppointmentsProviderRemoveAppointmentActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentsProviderReplaceAppointmentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IAppointmentsProviderReplaceAppointmentActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IAppointmentsProviderReplaceAppointmentActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentsProviderShowAppointmentDetailsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IAppointmentsProviderShowAppointmentDetailsActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentsProviderShowTimeFrameActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IAppointmentsProviderShowTimeFrameActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IAppointmentsProviderShowTimeFrameActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IBackgroundActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IBackgroundActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBarcodeScannerPreviewActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IBarcodeScannerPreviewActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IBarcodeScannerPreviewActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICachedFileUpdaterActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ICachedFileUpdaterActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ICachedFileUpdaterActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICameraSettingsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ICameraSettingsActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ICameraSettingsActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICommandLineActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ICommandLineActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ICommandLineActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactCallActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactCallActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactCallActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactMapActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactMapActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactMapActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactMessageActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactMessageActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactMessageActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactPanelActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactPanelActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactPanelActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactPickerActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactPickerActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactPickerActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactPostActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactPostActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactPostActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactVideoCallActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactVideoCallActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactVideoCallActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactsProviderActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContactsProviderActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContactsProviderActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContinuationActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IContinuationActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IContinuationActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDeviceActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IDeviceActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IDeviceActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDevicePairingActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IDevicePairingActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IDevicePairingActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDialReceiverActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IDialReceiverActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IDialReceiverActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileActivatedEventArgsWithCallerPackageFamilyNameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileActivatedEventArgsWithCallerPackageFamilyName = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileActivatedEventArgsWithCallerPackageFamilyNameBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileActivatedEventArgsWithNeighboringFilesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileActivatedEventArgsWithNeighboringFiles = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileActivatedEventArgsWithNeighboringFilesBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileOpenPickerActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileOpenPickerActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileOpenPickerActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileOpenPickerActivatedEventArgs2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileOpenPickerActivatedEventArgs2 = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileOpenPickerActivatedEventArgs2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileOpenPickerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileOpenPickerContinuationEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileOpenPickerContinuationEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileSavePickerActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileSavePickerActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileSavePickerActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileSavePickerActivatedEventArgs2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileSavePickerActivatedEventArgs2 = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileSavePickerActivatedEventArgs2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFileSavePickerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFileSavePickerContinuationEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFileSavePickerContinuationEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFolderPickerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IFolderPickerContinuationEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IFolderPickerContinuationEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeILaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ILaunchActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ILaunchActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeILaunchActivatedEventArgs2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ILaunchActivatedEventArgs2 = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ILaunchActivatedEventArgs2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeILockScreenActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ILockScreenActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ILockScreenActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeILockScreenCallActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ILockScreenCallActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ILockScreenCallActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPickerReturnedActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IPickerReturnedActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IPickerReturnedActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrelaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IPrelaunchActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IPrelaunchActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrint3DWorkflowActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IPrint3DWorkflowActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IPrint3DWorkflowActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrintTaskSettingsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IPrintTaskSettingsActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IPrintTaskSettingsActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIProtocolActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IProtocolActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IProtocolActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIProtocolActivatedEventArgsWithCallerPackageFamilyNameAndDataFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndDataBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIProtocolForResultsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IProtocolForResultsActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IProtocolForResultsActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIRestrictedLaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IRestrictedLaunchActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IRestrictedLaunchActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISearchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ISearchActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ISearchActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISearchActivatedEventArgsWithLinguisticDetailsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.ISearchActivatedEventArgsWithLinguisticDetails = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.ISearchActivatedEventArgsWithLinguisticDetailsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIShareTargetActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IShareTargetActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IShareTargetActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStartupTaskActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IStartupTaskActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IStartupTaskActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIToastNotificationActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IToastNotificationActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IToastNotificationActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIUserDataAccountProviderActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IUserDataAccountProviderActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IUserDataAccountProviderActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIViewSwitcherProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IViewSwitcherProvider = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IViewSwitcherProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIVoiceCommandActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IVoiceCommandActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IVoiceCommandActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIWalletActionActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IWalletActionActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IWalletActionActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIWebAccountProviderActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IWebAccountProviderActivatedEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IWebAccountProviderActivatedEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIWebAuthenticationBrokerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Activation.IWebAuthenticationBrokerContinuationEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Activation.IWebAuthenticationBrokerContinuationEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAppointmentParticipantFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Appointments.IAppointmentParticipant = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Appointments.IAppointmentParticipantBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTaskInstanceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Background.IBackgroundTaskInstance = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Background.IBackgroundTaskInstanceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTaskRegistrationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Background.IBackgroundTaskRegistration = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Background.IBackgroundTaskRegistrationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTaskRegistration2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Background.IBackgroundTaskRegistration2 = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Background.IBackgroundTaskRegistration2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTaskRegistration3From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Background.IBackgroundTaskRegistration3 = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Background.IBackgroundTaskRegistration3Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTriggerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Background.IBackgroundTrigger = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Background.IBackgroundTriggerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContactFieldFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Contacts.IContactField = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Contacts.IContactFieldBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICoreApplicationUnhandledErrorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Core.ICoreApplicationUnhandledError = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Core.ICoreApplicationUnhandledErrorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFrameworkViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Core.IFrameworkView = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Core.IFrameworkViewBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIFrameworkViewSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_Core.IFrameworkViewSource = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_Core.IFrameworkViewSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIUserDataAccountProviderOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_ApplicationModel_UserDataAccounts_Provider.IUserDataAccountProviderOperation = try! abi.QueryInterface()
    return __IMPL_Windows_ApplicationModel_UserDataAccounts_Provider.IUserDataAccountProviderOperationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIJsonValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Data_Json.IJsonValue = try! abi.QueryInterface()
    return __IMPL_Windows_Data_Json.IJsonValueBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXmlCharacterDataFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Data_Xml_Dom.IXmlCharacterData = try! abi.QueryInterface()
    return __IMPL_Windows_Data_Xml_Dom.IXmlCharacterDataBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXmlNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Data_Xml_Dom.IXmlNode = try! abi.QueryInterface()
    return __IMPL_Windows_Data_Xml_Dom.IXmlNodeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXmlNodeSelectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Data_Xml_Dom.IXmlNodeSelector = try! abi.QueryInterface()
    return __IMPL_Windows_Data_Xml_Dom.IXmlNodeSelectorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXmlNodeSerializerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Data_Xml_Dom.IXmlNodeSerializer = try! abi.QueryInterface()
    return __IMPL_Windows_Data_Xml_Dom.IXmlNodeSerializerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIXmlTextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Data_Xml_Dom.IXmlText = try! abi.QueryInterface()
    return __IMPL_Windows_Data_Xml_Dom.IXmlTextBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDevicePairingSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Devices_Enumeration.IDevicePairingSettings = try! abi.QueryInterface()
    return __IMPL_Windows_Devices_Enumeration.IDevicePairingSettingsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIGeoshapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Devices_Geolocation.IGeoshape = try! abi.QueryInterface()
    return __IMPL_Windows_Devices_Geolocation.IGeoshapeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeINumberFormatter2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Globalization_NumberFormatting.INumberFormatter2 = try! abi.QueryInterface()
    return __IMPL_Windows_Globalization_NumberFormatting.INumberFormatter2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIGeometrySource2DFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics.IGeometrySource2D = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics.IGeometrySource2DBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDirect3DDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_DirectX_Direct3D11.IDirect3DDevice = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_DirectX_Direct3D11.IDirect3DDeviceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDirect3DSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_DirectX_Direct3D11.IDirect3DSurface = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_DirectX_Direct3D11.IDirect3DSurfaceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIGraphicsEffectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Effects.IGraphicsEffect = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Effects.IGraphicsEffectBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIGraphicsEffectSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Effects.IGraphicsEffectSource = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Effects.IGraphicsEffectSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBitmapFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Imaging.IBitmapFrame = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Imaging.IBitmapFrameBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBitmapFrameWithSoftwareBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Imaging.IBitmapFrameWithSoftwareBitmap = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Imaging.IBitmapFrameWithSoftwareBitmapBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBitmapPropertiesViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Imaging.IBitmapPropertiesView = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Imaging.IBitmapPropertiesViewBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrintDocumentSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Printing.IPrintDocumentSource = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Printing.IPrintDocumentSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrintTaskOptionsCoreFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Printing.IPrintTaskOptionsCore = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Printing.IPrintTaskOptionsCoreBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrintTaskOptionsCorePropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Printing.IPrintTaskOptionsCoreProperties = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Printing.IPrintTaskOptionsCorePropertiesBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPrintTaskOptionsCoreUIConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Graphics_Printing.IPrintTaskOptionsCoreUIConfiguration = try! abi.QueryInterface()
    return __IMPL_Windows_Graphics_Printing.IPrintTaskOptionsCoreUIConfigurationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaExtensionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media.IMediaExtension = try! abi.QueryInterface()
    return __IMPL_Windows_Media.IMediaExtensionBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media.IMediaFrame = try! abi.QueryInterface()
    return __IMPL_Windows_Media.IMediaFrameBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAudioInputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Audio.IAudioInputNode = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Audio.IAudioInputNodeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAudioInputNode2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Audio.IAudioInputNode2 = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Audio.IAudioInputNode2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAudioNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Audio.IAudioNode = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Audio.IAudioNodeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAudioNodeWithListenerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Audio.IAudioNodeWithListener = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Audio.IAudioNodeWithListenerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaCueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.IMediaCue = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.IMediaCueBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.IMediaSource = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.IMediaSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaStreamDescriptorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.IMediaStreamDescriptor = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.IMediaStreamDescriptorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaStreamDescriptor2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.IMediaStreamDescriptor2 = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.IMediaStreamDescriptor2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaTrackFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.IMediaTrack = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.IMediaTrackBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISingleSelectMediaTrackListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.ISingleSelectMediaTrackList = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.ISingleSelectMediaTrackListBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeITimedMetadataTrackProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Core.ITimedMetadataTrackProvider = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Core.ITimedMetadataTrackProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaDeviceControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Devices.IMediaDeviceController = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Devices.IMediaDeviceControllerBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAudioEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Effects.IAudioEffectDefinition = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Effects.IAudioEffectDefinitionBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIVideoEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Effects.IVideoEffectDefinition = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Effects.IVideoEffectDefinitionBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaEncodingPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_MediaProperties.IMediaEncodingProperties = try! abi.QueryInterface()
    return __IMPL_Windows_Media_MediaProperties.IMediaEncodingPropertiesBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaEnginePlaybackSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Playback.IMediaEnginePlaybackSource = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Playback.IMediaEnginePlaybackSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaPlaybackSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Playback.IMediaPlaybackSource = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Playback.IMediaPlaybackSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIMediaProtectionServiceRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_Protection.IMediaProtectionServiceRequest = try! abi.QueryInterface()
    return __IMPL_Windows_Media_Protection.IMediaProtectionServiceRequestBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeISpeechRecognitionConstraintFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Media_SpeechRecognition.ISpeechRecognitionConstraint = try! abi.QueryInterface()
    return __IMPL_Windows_Media_SpeechRecognition.ISpeechRecognitionConstraintBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTransferOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperation = try! abi.QueryInterface()
    return __IMPL_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBackgroundTransferOperationPriorityFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperationPriority = try! abi.QueryInterface()
    return __IMPL_Windows_Networking_BackgroundTransfer.IBackgroundTransferOperationPriorityBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIWebAccountProviderOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Security_Authentication_Web_Provider.IWebAccountProviderOperation = try! abi.QueryInterface()
    return __IMPL_Windows_Security_Authentication_Web_Provider.IWebAccountProviderOperationBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageFileFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageFile = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageFileBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageFile2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageFile2 = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageFile2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageFilePropertiesWithAvailabilityFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageFilePropertiesWithAvailability = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageFilePropertiesWithAvailabilityBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageFolderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageFolder = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageFolderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageFolder2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageFolder2 = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageFolder2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageItem = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageItemBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageItem2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageItem2 = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageItem2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageItemPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageItemProperties = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageItemPropertiesBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageItemProperties2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageItemProperties2 = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageItemProperties2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageItemPropertiesWithProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStorageItemPropertiesWithProvider = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStorageItemPropertiesWithProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStreamedFileDataRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage.IStreamedFileDataRequest = try! abi.QueryInterface()
    return __IMPL_Windows_Storage.IStreamedFileDataRequestBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageItemExtraPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_FileProperties.IStorageItemExtraProperties = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_FileProperties.IStorageItemExtraPropertiesBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageFolderQueryOperationsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Search.IStorageFolderQueryOperations = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Search.IStorageFolderQueryOperationsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIStorageQueryResultBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Search.IStorageQueryResultBase = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Search.IStorageQueryResultBaseBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIBufferFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IBuffer = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IBufferBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIContentTypeProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IContentTypeProvider = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IContentTypeProviderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDataReaderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IDataReader = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IDataReaderBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIDataWriterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IDataWriter = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IDataWriterBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIInputStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IInputStream = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IInputStreamBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIInputStreamReferenceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IInputStreamReference = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IInputStreamReferenceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIOutputStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IOutputStream = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IOutputStreamBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIRandomAccessStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IRandomAccessStream = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IRandomAccessStreamBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIRandomAccessStreamReferenceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IRandomAccessStreamReference = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IRandomAccessStreamReferenceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIRandomAccessStreamWithContentTypeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Storage_Streams.IRandomAccessStreamWithContentType = try! abi.QueryInterface()
    return __IMPL_Windows_Storage_Streams.IRandomAccessStreamWithContentTypeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeILauncherViewOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_System.ILauncherViewOptions = try! abi.QueryInterface()
    return __IMPL_Windows_System.ILauncherViewOptionsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIRemoteSystemFilterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_System_RemoteSystems.IRemoteSystemFilter = try! abi.QueryInterface()
    return __IMPL_Windows_System_RemoteSystems.IRemoteSystemFilterBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAnimationObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Composition.IAnimationObject = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Composition.IAnimationObjectBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICompositionAnimationBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Composition.ICompositionAnimationBase = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Composition.ICompositionAnimationBaseBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICompositionSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Composition.ICompositionSurface = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Composition.ICompositionSurfaceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIVisualElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Composition.IVisualElement = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Composition.IVisualElementBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICoreAcceleratorKeysFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICoreAcceleratorKeys = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICoreAcceleratorKeysBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICoreInputSourceBaseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICoreInputSourceBase = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICoreInputSourceBaseBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICorePointerInputSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICorePointerInputSource = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICorePointerInputSourceBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICorePointerInputSource2From(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICorePointerInputSource2 = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICorePointerInputSource2Bridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICorePointerRedirectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICorePointerRedirector = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICorePointerRedirectorBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICoreWindowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICoreWindow = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICoreWindowBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeICoreWindowEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.ICoreWindowEventArgs = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.ICoreWindowEventArgsBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIInitializeWithCoreWindowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Core.IInitializeWithCoreWindow = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Core.IInitializeWithCoreWindowBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIPointerPointTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Input.IPointerPointTransform = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Input.IPointerPointTransformBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIAdaptiveNotificationContentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Notifications.IAdaptiveNotificationContent = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Notifications.IAdaptiveNotificationContentBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIUICommandFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Popups.IUICommand = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Popups.IUICommandBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeITextCharacterFormatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Text.ITextCharacterFormat = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Text.ITextCharacterFormatBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeITextDocumentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Text.ITextDocument = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Text.ITextDocumentBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeITextParagraphFormatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Text.ITextParagraphFormat = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Text.ITextParagraphFormatBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeITextRangeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Text.ITextRange = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Text.ITextRangeBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeITextSelectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_UI_Text.ITextSelection = try! abi.QueryInterface()
    return __IMPL_Windows_UI_Text.ITextSelectionBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIHttpContentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Web_Http.IHttpContent = try! abi.QueryInterface()
    return __IMPL_Windows_Web_Http.IHttpContentBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeIHttpFilterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    let swiftAbi: __ABI_Windows_Web_Http_Filters.IHttpFilter = try! abi.QueryInterface()
    return __IMPL_Windows_Web_Http_Filters.IHttpFilterBridge.from(abi: RawPointer(swiftAbi))!
}

fileprivate func makeAppDisplayInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppDisplayInfo(fromAbi: abi)
}

fileprivate func makeAppInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppInfo(fromAbi: abi)
}

fileprivate func makeAppInstallerInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppInstallerInfo(fromAbi: abi)
}

fileprivate func makeAppInstanceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppInstance(fromAbi: abi)
}

fileprivate func makeEnteredBackgroundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EnteredBackgroundEventArgs(fromAbi: abi)
}

fileprivate func makeLeavingBackgroundEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LeavingBackgroundEventArgs(fromAbi: abi)
}

fileprivate func makeLimitedAccessFeatureRequestResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LimitedAccessFeatureRequestResult(fromAbi: abi)
}

fileprivate func makePackageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Package(fromAbi: abi)
}

fileprivate func makePackageCatalogFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageCatalog(fromAbi: abi)
}

fileprivate func makePackageCatalogAddOptionalPackageResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageCatalogAddOptionalPackageResult(fromAbi: abi)
}

fileprivate func makePackageCatalogAddResourcePackageResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageCatalogAddResourcePackageResult(fromAbi: abi)
}

fileprivate func makePackageCatalogRemoveOptionalPackagesResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageCatalogRemoveOptionalPackagesResult(fromAbi: abi)
}

fileprivate func makePackageCatalogRemoveResourcePackagesResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageCatalogRemoveResourcePackagesResult(fromAbi: abi)
}

fileprivate func makePackageContentGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageContentGroup(fromAbi: abi)
}

fileprivate func makePackageContentGroupStagingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageContentGroupStagingEventArgs(fromAbi: abi)
}

fileprivate func makePackageIdFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageId(fromAbi: abi)
}

fileprivate func makePackageInstallingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageInstallingEventArgs(fromAbi: abi)
}

fileprivate func makePackageStagingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageStagingEventArgs(fromAbi: abi)
}

fileprivate func makePackageStatusFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageStatus(fromAbi: abi)
}

fileprivate func makePackageStatusChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageStatusChangedEventArgs(fromAbi: abi)
}

fileprivate func makePackageUninstallingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageUninstallingEventArgs(fromAbi: abi)
}

fileprivate func makePackageUpdateAvailabilityResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageUpdateAvailabilityResult(fromAbi: abi)
}

fileprivate func makePackageUpdatingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageUpdatingEventArgs(fromAbi: abi)
}

fileprivate func makeStartupTaskFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StartupTask(fromAbi: abi)
}

fileprivate func makeSuspendingDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SuspendingDeferral(fromAbi: abi)
}

fileprivate func makeSuspendingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SuspendingEventArgs(fromAbi: abi)
}

fileprivate func makeSuspendingOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SuspendingOperation(fromAbi: abi)
}

fileprivate func makeAppointmentsProviderAddAppointmentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentsProviderAddAppointmentActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeAppointmentsProviderRemoveAppointmentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentsProviderRemoveAppointmentActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeAppointmentsProviderReplaceAppointmentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentsProviderReplaceAppointmentActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeAppointmentsProviderShowAppointmentDetailsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentsProviderShowAppointmentDetailsActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeAppointmentsProviderShowTimeFrameActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentsProviderShowTimeFrameActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeBackgroundActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeBarcodeScannerPreviewActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BarcodeScannerPreviewActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeCachedFileUpdaterActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CachedFileUpdaterActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeCameraSettingsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CameraSettingsActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeCommandLineActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CommandLineActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeCommandLineActivationOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CommandLineActivationOperation(fromAbi: abi)
}

fileprivate func makeContactCallActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactCallActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeContactMapActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactMapActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeContactMessageActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactMessageActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeContactPanelActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPanelActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeContactPickerActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPickerActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeContactPostActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPostActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeContactVideoCallActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactVideoCallActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeDeviceActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeDevicePairingActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DevicePairingActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeDialReceiverActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DialReceiverActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeFileActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeFileOpenPickerActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileOpenPickerActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeFileOpenPickerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileOpenPickerContinuationEventArgs(fromAbi: abi)
}

fileprivate func makeFileSavePickerActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileSavePickerActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeFileSavePickerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileSavePickerContinuationEventArgs(fromAbi: abi)
}

fileprivate func makeFolderPickerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FolderPickerContinuationEventArgs(fromAbi: abi)
}

fileprivate func makeLaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LaunchActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeLockScreenActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LockScreenActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeLockScreenCallActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LockScreenCallActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeLockScreenComponentActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LockScreenComponentActivatedEventArgs(fromAbi: abi)
}

fileprivate func makePickerReturnedActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PickerReturnedActivatedEventArgs(fromAbi: abi)
}

fileprivate func makePrint3DWorkflowActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Print3DWorkflowActivatedEventArgs(fromAbi: abi)
}

fileprivate func makePrintTaskSettingsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintTaskSettingsActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeProtocolActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProtocolActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeProtocolForResultsActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProtocolForResultsActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeRestrictedLaunchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RestrictedLaunchActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeSearchActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SearchActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeShareTargetActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareTargetActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeSplashScreenFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SplashScreen(fromAbi: abi)
}

fileprivate func makeStartupTaskActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StartupTaskActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeTileActivatedInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TileActivatedInfo(fromAbi: abi)
}

fileprivate func makeToastNotificationActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotificationActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeUserDataAccountProviderActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserDataAccountProviderActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeVoiceCommandActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VoiceCommandActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeWalletActionActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WalletActionActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeWebAccountProviderActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WebAccountProviderActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeWebAuthenticationBrokerContinuationEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WebAuthenticationBrokerContinuationEventArgs(fromAbi: abi)
}

fileprivate func makeAppServiceClosedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppServiceClosedEventArgs(fromAbi: abi)
}

fileprivate func makeAppServiceConnectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppServiceConnection(fromAbi: abi)
}

fileprivate func makeAppServiceDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppServiceDeferral(fromAbi: abi)
}

fileprivate func makeAppServiceRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppServiceRequest(fromAbi: abi)
}

fileprivate func makeAppServiceRequestReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppServiceRequestReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeAppServiceResponseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppServiceResponse(fromAbi: abi)
}

fileprivate func makeStatelessAppServiceResponseFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StatelessAppServiceResponse(fromAbi: abi)
}

fileprivate func makeAppointmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Appointment(fromAbi: abi)
}

fileprivate func makeAppointmentInviteeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentInvitee(fromAbi: abi)
}

fileprivate func makeAppointmentOrganizerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentOrganizer(fromAbi: abi)
}

fileprivate func makeAppointmentRecurrenceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppointmentRecurrence(fromAbi: abi)
}

fileprivate func makeAddAppointmentOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AddAppointmentOperation(fromAbi: abi)
}

fileprivate func makeRemoveAppointmentOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoveAppointmentOperation(fromAbi: abi)
}

fileprivate func makeReplaceAppointmentOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ReplaceAppointmentOperation(fromAbi: abi)
}

fileprivate func makeBackgroundTaskCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTaskCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeBackgroundTaskDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTaskDeferral(fromAbi: abi)
}

fileprivate func makeBackgroundTaskProgressEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTaskProgressEventArgs(fromAbi: abi)
}

fileprivate func makeBackgroundTaskRegistrationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTaskRegistration(fromAbi: abi)
}

fileprivate func makeBackgroundTaskRegistrationGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTaskRegistrationGroup(fromAbi: abi)
}

fileprivate func makeDeviceWatcherTriggerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceWatcherTrigger(fromAbi: abi)
}

fileprivate func makeLockScreenCallEndCallDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LockScreenCallEndCallDeferral(fromAbi: abi)
}

fileprivate func makeLockScreenCallEndRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LockScreenCallEndRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeLockScreenCallUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LockScreenCallUI(fromAbi: abi)
}

fileprivate func makeContactFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Contact(fromAbi: abi)
}

fileprivate func makeContactAddressFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactAddress(fromAbi: abi)
}

fileprivate func makeContactConnectedServiceAccountFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactConnectedServiceAccount(fromAbi: abi)
}

fileprivate func makeContactDateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactDate(fromAbi: abi)
}

fileprivate func makeContactEmailFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactEmail(fromAbi: abi)
}

fileprivate func makeContactJobInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactJobInfo(fromAbi: abi)
}

fileprivate func makeContactPanelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPanel(fromAbi: abi)
}

fileprivate func makeContactPanelClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPanelClosingEventArgs(fromAbi: abi)
}

fileprivate func makeContactPanelLaunchFullAppRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPanelLaunchFullAppRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeContactPhoneFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPhone(fromAbi: abi)
}

fileprivate func makeContactSignificantOtherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactSignificantOther(fromAbi: abi)
}

fileprivate func makeContactWebsiteFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactWebsite(fromAbi: abi)
}

fileprivate func makeContactPickerUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactPickerUI(fromAbi: abi)
}

fileprivate func makeContactRemovedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContactRemovedEventArgs(fromAbi: abi)
}

fileprivate func makeAppListEntryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppListEntry(fromAbi: abi)
}

fileprivate func makeCoreApplicationViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreApplicationView(fromAbi: abi)
}

fileprivate func makeCoreApplicationViewTitleBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreApplicationViewTitleBar(fromAbi: abi)
}

fileprivate func makeHostedViewClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HostedViewClosingEventArgs(fromAbi: abi)
}

fileprivate func makeUnhandledErrorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UnhandledError(fromAbi: abi)
}

fileprivate func makeUnhandledErrorDetectedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UnhandledErrorDetectedEventArgs(fromAbi: abi)
}

fileprivate func makeClipboardContentOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ClipboardContentOptions(fromAbi: abi)
}

fileprivate func makeClipboardHistoryChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ClipboardHistoryChangedEventArgs(fromAbi: abi)
}

fileprivate func makeClipboardHistoryItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ClipboardHistoryItem(fromAbi: abi)
}

fileprivate func makeClipboardHistoryItemsResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ClipboardHistoryItemsResult(fromAbi: abi)
}

fileprivate func makeDataPackageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataPackage(fromAbi: abi)
}

fileprivate func makeDataPackagePropertySetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataPackagePropertySet(fromAbi: abi)
}

fileprivate func makeDataPackagePropertySetViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataPackagePropertySetView(fromAbi: abi)
}

fileprivate func makeDataPackageViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataPackageView(fromAbi: abi)
}

fileprivate func makeDataProviderDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataProviderDeferral(fromAbi: abi)
}

fileprivate func makeDataProviderRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataProviderRequest(fromAbi: abi)
}

fileprivate func makeDataRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataRequest(fromAbi: abi)
}

fileprivate func makeDataRequestDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataRequestDeferral(fromAbi: abi)
}

fileprivate func makeDataRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeDataTransferManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataTransferManager(fromAbi: abi)
}

fileprivate func makeOperationCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return OperationCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeShareCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeShareProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareProvider(fromAbi: abi)
}

fileprivate func makeShareProviderOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareProviderOperation(fromAbi: abi)
}

fileprivate func makeShareProvidersRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareProvidersRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeShareTargetInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareTargetInfo(fromAbi: abi)
}

fileprivate func makeShareUIOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareUIOptions(fromAbi: abi)
}

fileprivate func makeTargetApplicationChosenEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TargetApplicationChosenEventArgs(fromAbi: abi)
}

fileprivate func makeCoreDragInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreDragInfo(fromAbi: abi)
}

fileprivate func makeCoreDragUIOverrideFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreDragUIOverride(fromAbi: abi)
}

fileprivate func makeQuickLinkFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuickLink(fromAbi: abi)
}

fileprivate func makeShareOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShareOperation(fromAbi: abi)
}

fileprivate func makeSearchPaneQueryLinguisticDetailsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SearchPaneQueryLinguisticDetails(fromAbi: abi)
}

fileprivate func makeJsonArrayFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return JsonArray(fromAbi: abi)
}

fileprivate func makeJsonObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return JsonObject(fromAbi: abi)
}

fileprivate func makeJsonValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return JsonValue(fromAbi: abi)
}

fileprivate func makeXmlAttributeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlAttribute(fromAbi: abi)
}

fileprivate func makeXmlCDataSectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlCDataSection(fromAbi: abi)
}

fileprivate func makeXmlCommentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlComment(fromAbi: abi)
}

fileprivate func makeXmlDocumentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlDocument(fromAbi: abi)
}

fileprivate func makeXmlDocumentFragmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlDocumentFragment(fromAbi: abi)
}

fileprivate func makeXmlDocumentTypeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlDocumentType(fromAbi: abi)
}

fileprivate func makeXmlDomImplementationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlDomImplementation(fromAbi: abi)
}

fileprivate func makeXmlElementFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlElement(fromAbi: abi)
}

fileprivate func makeXmlEntityReferenceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlEntityReference(fromAbi: abi)
}

fileprivate func makeXmlLoadSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlLoadSettings(fromAbi: abi)
}

fileprivate func makeXmlNamedNodeMapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlNamedNodeMap(fromAbi: abi)
}

fileprivate func makeXmlNodeListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlNodeList(fromAbi: abi)
}

fileprivate func makeXmlProcessingInstructionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlProcessingInstruction(fromAbi: abi)
}

fileprivate func makeXmlTextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return XmlText(fromAbi: abi)
}

fileprivate func makeDeviceInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceInformation(fromAbi: abi)
}

fileprivate func makeDeviceInformationCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceInformationCollection(fromAbi: abi)
}

fileprivate func makeDeviceInformationCustomPairingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceInformationCustomPairing(fromAbi: abi)
}

fileprivate func makeDeviceInformationPairingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceInformationPairing(fromAbi: abi)
}

fileprivate func makeDeviceInformationUpdateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceInformationUpdate(fromAbi: abi)
}

fileprivate func makeDevicePairingRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DevicePairingRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeDevicePairingResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DevicePairingResult(fromAbi: abi)
}

fileprivate func makeDevicePickerAppearanceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DevicePickerAppearance(fromAbi: abi)
}

fileprivate func makeDeviceThumbnailFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceThumbnail(fromAbi: abi)
}

fileprivate func makeDeviceUnpairingResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceUnpairingResult(fromAbi: abi)
}

fileprivate func makeDeviceWatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeviceWatcher(fromAbi: abi)
}

fileprivate func makeEnclosureLocationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EnclosureLocation(fromAbi: abi)
}

fileprivate func makeGeopointFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Geopoint(fromAbi: abi)
}

fileprivate func makeKeyboardCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyboardCapabilities(fromAbi: abi)
}

fileprivate func makeMouseCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MouseCapabilities(fromAbi: abi)
}

fileprivate func makeMouseDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MouseDevice(fromAbi: abi)
}

fileprivate func makeMouseEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MouseEventArgs(fromAbi: abi)
}

fileprivate func makePenDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PenDevice(fromAbi: abi)
}

fileprivate func makePointerDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerDevice(fromAbi: abi)
}

fileprivate func makeTouchCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TouchCapabilities(fromAbi: abi)
}

fileprivate func makePrint3DWorkflowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Print3DWorkflow(fromAbi: abi)
}

fileprivate func makePrint3DWorkflowPrintRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Print3DWorkflowPrintRequestedEventArgs(fromAbi: abi)
}

fileprivate func makePrint3DWorkflowPrinterChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Print3DWorkflowPrinterChangedEventArgs(fromAbi: abi)
}

fileprivate func makePrintTaskConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintTaskConfiguration(fromAbi: abi)
}

fileprivate func makePrintTaskConfigurationSaveRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintTaskConfigurationSaveRequest(fromAbi: abi)
}

fileprivate func makePrintTaskConfigurationSaveRequestedDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintTaskConfigurationSaveRequestedDeferral(fromAbi: abi)
}

fileprivate func makePrintTaskConfigurationSaveRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintTaskConfigurationSaveRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeLanguageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Language(fromAbi: abi)
}

fileprivate func makeBitmapBufferFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapBuffer(fromAbi: abi)
}

fileprivate func makeBitmapCodecInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapCodecInformation(fromAbi: abi)
}

fileprivate func makeBitmapDecoderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapDecoder(fromAbi: abi)
}

fileprivate func makeBitmapEncoderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapEncoder(fromAbi: abi)
}

fileprivate func makeBitmapFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapFrame(fromAbi: abi)
}

fileprivate func makeBitmapPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapProperties(fromAbi: abi)
}

fileprivate func makeBitmapPropertiesViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapPropertiesView(fromAbi: abi)
}

fileprivate func makeBitmapPropertySetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapPropertySet(fromAbi: abi)
}

fileprivate func makeBitmapTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapTransform(fromAbi: abi)
}

fileprivate func makeBitmapTypedValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BitmapTypedValue(fromAbi: abi)
}

fileprivate func makeImageStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageStream(fromAbi: abi)
}

fileprivate func makePixelDataProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PixelDataProvider(fromAbi: abi)
}

fileprivate func makeSoftwareBitmapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SoftwareBitmap(fromAbi: abi)
}

fileprivate func makePrintPageInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintPageInfo(fromAbi: abi)
}

fileprivate func makePrintPageRangeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintPageRange(fromAbi: abi)
}

fileprivate func makePrintPageRangeOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintPageRangeOptions(fromAbi: abi)
}

fileprivate func makePrintTaskOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PrintTaskOptions(fromAbi: abi)
}

fileprivate func makeDeploymentResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DeploymentResult(fromAbi: abi)
}

fileprivate func makePackageManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageManager(fromAbi: abi)
}

fileprivate func makePackageManagerDebugSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageManagerDebugSettings(fromAbi: abi)
}

fileprivate func makePackageUserInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageUserInformation(fromAbi: abi)
}

fileprivate func makePackageVolumeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PackageVolume(fromAbi: abi)
}

fileprivate func makeAudioBufferFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioBuffer(fromAbi: abi)
}

fileprivate func makeAudioFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioFrame(fromAbi: abi)
}

fileprivate func makeAutoRepeatModeChangeRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutoRepeatModeChangeRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeImageDisplayPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageDisplayProperties(fromAbi: abi)
}

fileprivate func makeMediaTimelineControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaTimelineController(fromAbi: abi)
}

fileprivate func makeMediaTimelineControllerFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaTimelineControllerFailedEventArgs(fromAbi: abi)
}

fileprivate func makeMusicDisplayPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MusicDisplayProperties(fromAbi: abi)
}

fileprivate func makePlaybackPositionChangeRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PlaybackPositionChangeRequestedEventArgs(fromAbi: abi)
}

fileprivate func makePlaybackRateChangeRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PlaybackRateChangeRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeShuffleEnabledChangeRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShuffleEnabledChangeRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeSystemMediaTransportControlsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMediaTransportControls(fromAbi: abi)
}

fileprivate func makeSystemMediaTransportControlsButtonPressedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMediaTransportControlsButtonPressedEventArgs(fromAbi: abi)
}

fileprivate func makeSystemMediaTransportControlsDisplayUpdaterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMediaTransportControlsDisplayUpdater(fromAbi: abi)
}

fileprivate func makeSystemMediaTransportControlsPropertyChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMediaTransportControlsPropertyChangedEventArgs(fromAbi: abi)
}

fileprivate func makeSystemMediaTransportControlsTimelinePropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMediaTransportControlsTimelineProperties(fromAbi: abi)
}

fileprivate func makeVideoDisplayPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoDisplayProperties(fromAbi: abi)
}

fileprivate func makeAudioDeviceInputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioDeviceInputNode(fromAbi: abi)
}

fileprivate func makeAudioDeviceOutputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioDeviceOutputNode(fromAbi: abi)
}

fileprivate func makeAudioFileInputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioFileInputNode(fromAbi: abi)
}

fileprivate func makeAudioFileOutputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioFileOutputNode(fromAbi: abi)
}

fileprivate func makeAudioFrameCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioFrameCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeAudioFrameInputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioFrameInputNode(fromAbi: abi)
}

fileprivate func makeAudioFrameOutputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioFrameOutputNode(fromAbi: abi)
}

fileprivate func makeAudioGraphFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioGraph(fromAbi: abi)
}

fileprivate func makeAudioGraphBatchUpdaterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioGraphBatchUpdater(fromAbi: abi)
}

fileprivate func makeAudioGraphConnectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioGraphConnection(fromAbi: abi)
}

fileprivate func makeAudioGraphSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioGraphSettings(fromAbi: abi)
}

fileprivate func makeAudioGraphUnrecoverableErrorOccurredEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioGraphUnrecoverableErrorOccurredEventArgs(fromAbi: abi)
}

fileprivate func makeAudioNodeEmitterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioNodeEmitter(fromAbi: abi)
}

fileprivate func makeAudioNodeEmitterConePropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioNodeEmitterConeProperties(fromAbi: abi)
}

fileprivate func makeAudioNodeEmitterDecayModelFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioNodeEmitterDecayModel(fromAbi: abi)
}

fileprivate func makeAudioNodeEmitterNaturalDecayModelPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioNodeEmitterNaturalDecayModelProperties(fromAbi: abi)
}

fileprivate func makeAudioNodeEmitterShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioNodeEmitterShape(fromAbi: abi)
}

fileprivate func makeAudioNodeListenerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioNodeListener(fromAbi: abi)
}

fileprivate func makeAudioStateMonitorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioStateMonitor(fromAbi: abi)
}

fileprivate func makeAudioSubmixNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioSubmixNode(fromAbi: abi)
}

fileprivate func makeCreateAudioDeviceInputNodeResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CreateAudioDeviceInputNodeResult(fromAbi: abi)
}

fileprivate func makeCreateAudioDeviceOutputNodeResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CreateAudioDeviceOutputNodeResult(fromAbi: abi)
}

fileprivate func makeCreateAudioFileInputNodeResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CreateAudioFileInputNodeResult(fromAbi: abi)
}

fileprivate func makeCreateAudioFileOutputNodeResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CreateAudioFileOutputNodeResult(fromAbi: abi)
}

fileprivate func makeCreateAudioGraphResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CreateAudioGraphResult(fromAbi: abi)
}

fileprivate func makeCreateMediaSourceAudioInputNodeResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CreateMediaSourceAudioInputNodeResult(fromAbi: abi)
}

fileprivate func makeEchoEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EchoEffectDefinition(fromAbi: abi)
}

fileprivate func makeEqualizerBandFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EqualizerBand(fromAbi: abi)
}

fileprivate func makeEqualizerEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return EqualizerEffectDefinition(fromAbi: abi)
}

fileprivate func makeFrameInputNodeQuantumStartedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameInputNodeQuantumStartedEventArgs(fromAbi: abi)
}

fileprivate func makeLimiterEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LimiterEffectDefinition(fromAbi: abi)
}

fileprivate func makeMediaSourceAudioInputNodeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaSourceAudioInputNode(fromAbi: abi)
}

fileprivate func makeReverbEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ReverbEffectDefinition(fromAbi: abi)
}

fileprivate func makeSetDefaultSpatialAudioFormatResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SetDefaultSpatialAudioFormatResult(fromAbi: abi)
}

fileprivate func makeSpatialAudioDeviceConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpatialAudioDeviceConfiguration(fromAbi: abi)
}

fileprivate func makeSpatialAudioFormatConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpatialAudioFormatConfiguration(fromAbi: abi)
}

fileprivate func makeCapturedFrameControlValuesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CapturedFrameControlValues(fromAbi: abi)
}

fileprivate func makeMediaCaptureVideoProfileMediaDescriptionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaCaptureVideoProfileMediaDescription(fromAbi: abi)
}

fileprivate func makeVideoStreamConfigurationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoStreamConfiguration(fromAbi: abi)
}

fileprivate func makeDepthMediaFrameFormatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DepthMediaFrameFormat(fromAbi: abi)
}

fileprivate func makeMediaFrameFormatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaFrameFormat(fromAbi: abi)
}

fileprivate func makeMediaFrameSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaFrameSource(fromAbi: abi)
}

fileprivate func makeMediaFrameSourceControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaFrameSourceController(fromAbi: abi)
}

fileprivate func makeMediaFrameSourceGetPropertyResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaFrameSourceGetPropertyResult(fromAbi: abi)
}

fileprivate func makeMediaFrameSourceGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaFrameSourceGroup(fromAbi: abi)
}

fileprivate func makeMediaFrameSourceInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaFrameSourceInfo(fromAbi: abi)
}

fileprivate func makeVideoMediaFrameFormatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoMediaFrameFormat(fromAbi: abi)
}

fileprivate func makeCastingConnectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingConnection(fromAbi: abi)
}

fileprivate func makeCastingConnectionErrorOccurredEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingConnectionErrorOccurredEventArgs(fromAbi: abi)
}

fileprivate func makeCastingDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingDevice(fromAbi: abi)
}

fileprivate func makeCastingDevicePickerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingDevicePicker(fromAbi: abi)
}

fileprivate func makeCastingDevicePickerFilterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingDevicePickerFilter(fromAbi: abi)
}

fileprivate func makeCastingDeviceSelectedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingDeviceSelectedEventArgs(fromAbi: abi)
}

fileprivate func makeCastingSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CastingSource(fromAbi: abi)
}

fileprivate func makeAudioStreamDescriptorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioStreamDescriptor(fromAbi: abi)
}

fileprivate func makeAudioTrackFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioTrack(fromAbi: abi)
}

fileprivate func makeAudioTrackOpenFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioTrackOpenFailedEventArgs(fromAbi: abi)
}

fileprivate func makeAudioTrackSupportInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioTrackSupportInfo(fromAbi: abi)
}

fileprivate func makeChapterCueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChapterCue(fromAbi: abi)
}

fileprivate func makeCodecInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CodecInfo(fromAbi: abi)
}

fileprivate func makeCodecQueryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CodecQuery(fromAbi: abi)
}

fileprivate func makeDataCueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataCue(fromAbi: abi)
}

fileprivate func makeFaceDetectedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FaceDetectedEventArgs(fromAbi: abi)
}

fileprivate func makeFaceDetectionEffectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FaceDetectionEffect(fromAbi: abi)
}

fileprivate func makeFaceDetectionEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FaceDetectionEffectDefinition(fromAbi: abi)
}

fileprivate func makeFaceDetectionEffectFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FaceDetectionEffectFrame(fromAbi: abi)
}

fileprivate func makeHighDynamicRangeControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HighDynamicRangeControl(fromAbi: abi)
}

fileprivate func makeHighDynamicRangeOutputFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HighDynamicRangeOutput(fromAbi: abi)
}

fileprivate func makeImageCueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageCue(fromAbi: abi)
}

fileprivate func makeInitializeMediaStreamSourceRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InitializeMediaStreamSourceRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeLowLightFusionResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LowLightFusionResult(fromAbi: abi)
}

fileprivate func makeMediaBinderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBinder(fromAbi: abi)
}

fileprivate func makeMediaBindingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBindingEventArgs(fromAbi: abi)
}

fileprivate func makeMediaCueEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaCueEventArgs(fromAbi: abi)
}

fileprivate func makeMediaSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaSource(fromAbi: abi)
}

fileprivate func makeMediaSourceAppServiceConnectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaSourceAppServiceConnection(fromAbi: abi)
}

fileprivate func makeMediaSourceErrorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaSourceError(fromAbi: abi)
}

fileprivate func makeMediaSourceOpenOperationCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaSourceOpenOperationCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaSourceStateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaSourceStateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaStreamSampleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSample(fromAbi: abi)
}

fileprivate func makeMediaStreamSamplePropertySetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSamplePropertySet(fromAbi: abi)
}

fileprivate func makeMediaStreamSampleProtectionPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSampleProtectionProperties(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSource(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceClosedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceClosedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceClosedRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceClosedRequest(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSampleRenderedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSampleRenderedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSampleRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSampleRequest(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSampleRequestDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSampleRequestDeferral(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSampleRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSampleRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceStartingEventArgs(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceStartingRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceStartingRequest(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceStartingRequestDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceStartingRequestDeferral(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSwitchStreamsRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSwitchStreamsRequest(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSwitchStreamsRequestDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSwitchStreamsRequestDeferral(fromAbi: abi)
}

fileprivate func makeMediaStreamSourceSwitchStreamsRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaStreamSourceSwitchStreamsRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeMseSourceBufferFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MseSourceBuffer(fromAbi: abi)
}

fileprivate func makeMseSourceBufferListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MseSourceBufferList(fromAbi: abi)
}

fileprivate func makeMseStreamSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MseStreamSource(fromAbi: abi)
}

fileprivate func makeSceneAnalysisEffectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SceneAnalysisEffect(fromAbi: abi)
}

fileprivate func makeSceneAnalysisEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SceneAnalysisEffectDefinition(fromAbi: abi)
}

fileprivate func makeSceneAnalysisEffectFrameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SceneAnalysisEffectFrame(fromAbi: abi)
}

fileprivate func makeSceneAnalyzedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SceneAnalyzedEventArgs(fromAbi: abi)
}

fileprivate func makeSpeechCueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpeechCue(fromAbi: abi)
}

fileprivate func makeTimedMetadataStreamDescriptorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedMetadataStreamDescriptor(fromAbi: abi)
}

fileprivate func makeTimedMetadataTrackFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedMetadataTrack(fromAbi: abi)
}

fileprivate func makeTimedMetadataTrackErrorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedMetadataTrackError(fromAbi: abi)
}

fileprivate func makeTimedMetadataTrackFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedMetadataTrackFailedEventArgs(fromAbi: abi)
}

fileprivate func makeTimedTextCueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextCue(fromAbi: abi)
}

fileprivate func makeTimedTextLineFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextLine(fromAbi: abi)
}

fileprivate func makeTimedTextRegionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextRegion(fromAbi: abi)
}

fileprivate func makeTimedTextSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextSource(fromAbi: abi)
}

fileprivate func makeTimedTextSourceResolveResultEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextSourceResolveResultEventArgs(fromAbi: abi)
}

fileprivate func makeTimedTextStyleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextStyle(fromAbi: abi)
}

fileprivate func makeTimedTextSubformatFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedTextSubformat(fromAbi: abi)
}

fileprivate func makeVideoStabilizationEffectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoStabilizationEffect(fromAbi: abi)
}

fileprivate func makeVideoStabilizationEffectDefinitionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoStabilizationEffectDefinition(fromAbi: abi)
}

fileprivate func makeVideoStabilizationEffectEnabledChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoStabilizationEffectEnabledChangedEventArgs(fromAbi: abi)
}

fileprivate func makeVideoStreamDescriptorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoStreamDescriptor(fromAbi: abi)
}

fileprivate func makeVideoTrackFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoTrack(fromAbi: abi)
}

fileprivate func makeVideoTrackOpenFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoTrackOpenFailedEventArgs(fromAbi: abi)
}

fileprivate func makeVideoTrackSupportInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoTrackSupportInfo(fromAbi: abi)
}

fileprivate func makeAdvancedPhotoCaptureSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdvancedPhotoCaptureSettings(fromAbi: abi)
}

fileprivate func makeAdvancedPhotoControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdvancedPhotoControl(fromAbi: abi)
}

fileprivate func makeAudioDeviceControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioDeviceController(fromAbi: abi)
}

fileprivate func makeExposureCompensationControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExposureCompensationControl(fromAbi: abi)
}

fileprivate func makeExposureControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExposureControl(fromAbi: abi)
}

fileprivate func makeExposurePriorityVideoControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExposurePriorityVideoControl(fromAbi: abi)
}

fileprivate func makeFlashControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FlashControl(fromAbi: abi)
}

fileprivate func makeFocusControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusControl(fromAbi: abi)
}

fileprivate func makeFocusSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FocusSettings(fromAbi: abi)
}

fileprivate func makeHdrVideoControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HdrVideoControl(fromAbi: abi)
}

fileprivate func makeInfraredTorchControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InfraredTorchControl(fromAbi: abi)
}

fileprivate func makeIsoSpeedControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IsoSpeedControl(fromAbi: abi)
}

fileprivate func makeLowLagPhotoControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LowLagPhotoControl(fromAbi: abi)
}

fileprivate func makeLowLagPhotoSequenceControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LowLagPhotoSequenceControl(fromAbi: abi)
}

fileprivate func makeMediaDeviceControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaDeviceControl(fromAbi: abi)
}

fileprivate func makeMediaDeviceControlCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaDeviceControlCapabilities(fromAbi: abi)
}

fileprivate func makeOpticalImageStabilizationControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return OpticalImageStabilizationControl(fromAbi: abi)
}

fileprivate func makePhotoConfirmationControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PhotoConfirmationControl(fromAbi: abi)
}

fileprivate func makeRegionOfInterestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RegionOfInterest(fromAbi: abi)
}

fileprivate func makeRegionsOfInterestControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RegionsOfInterestControl(fromAbi: abi)
}

fileprivate func makeSceneModeControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SceneModeControl(fromAbi: abi)
}

fileprivate func makeTorchControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TorchControl(fromAbi: abi)
}

fileprivate func makeVideoDeviceControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoDeviceController(fromAbi: abi)
}

fileprivate func makeVideoDeviceControllerGetDevicePropertyResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoDeviceControllerGetDevicePropertyResult(fromAbi: abi)
}

fileprivate func makeVideoTemporalDenoisingControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoTemporalDenoisingControl(fromAbi: abi)
}

fileprivate func makeWhiteBalanceControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WhiteBalanceControl(fromAbi: abi)
}

fileprivate func makeZoomControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ZoomControl(fromAbi: abi)
}

fileprivate func makeZoomSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ZoomSettings(fromAbi: abi)
}

fileprivate func makeCameraIntrinsicsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CameraIntrinsics(fromAbi: abi)
}

fileprivate func makeFrameControlCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameControlCapabilities(fromAbi: abi)
}

fileprivate func makeFrameControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameController(fromAbi: abi)
}

fileprivate func makeFrameExposureCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameExposureCapabilities(fromAbi: abi)
}

fileprivate func makeFrameExposureCompensationCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameExposureCompensationCapabilities(fromAbi: abi)
}

fileprivate func makeFrameExposureCompensationControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameExposureCompensationControl(fromAbi: abi)
}

fileprivate func makeFrameExposureControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameExposureControl(fromAbi: abi)
}

fileprivate func makeFrameFlashCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameFlashCapabilities(fromAbi: abi)
}

fileprivate func makeFrameFlashControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameFlashControl(fromAbi: abi)
}

fileprivate func makeFrameFocusCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameFocusCapabilities(fromAbi: abi)
}

fileprivate func makeFrameFocusControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameFocusControl(fromAbi: abi)
}

fileprivate func makeFrameIsoSpeedCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameIsoSpeedCapabilities(fromAbi: abi)
}

fileprivate func makeFrameIsoSpeedControlFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FrameIsoSpeedControl(fromAbi: abi)
}

fileprivate func makeVariablePhotoSequenceControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VariablePhotoSequenceController(fromAbi: abi)
}

fileprivate func makeDetectedFaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DetectedFace(fromAbi: abi)
}

fileprivate func makeAudioEncodingPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AudioEncodingProperties(fromAbi: abi)
}

fileprivate func makeContainerEncodingPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContainerEncodingProperties(fromAbi: abi)
}

fileprivate func makeMediaEncodingProfileFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaEncodingProfile(fromAbi: abi)
}

fileprivate func makeMediaPropertySetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPropertySet(fromAbi: abi)
}

fileprivate func makeMediaRatioFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaRatio(fromAbi: abi)
}

fileprivate func makeTimedMetadataEncodingPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedMetadataEncodingProperties(fromAbi: abi)
}

fileprivate func makeVideoEncodingPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoEncodingProperties(fromAbi: abi)
}

fileprivate func makeCurrentMediaPlaybackItemChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CurrentMediaPlaybackItemChangedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaBreakFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreak(fromAbi: abi)
}

fileprivate func makeMediaBreakEndedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreakEndedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaBreakManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreakManager(fromAbi: abi)
}

fileprivate func makeMediaBreakScheduleFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreakSchedule(fromAbi: abi)
}

fileprivate func makeMediaBreakSeekedOverEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreakSeekedOverEventArgs(fromAbi: abi)
}

fileprivate func makeMediaBreakSkippedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreakSkippedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaBreakStartedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaBreakStartedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaItemDisplayPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaItemDisplayProperties(fromAbi: abi)
}

fileprivate func makeMediaPlaybackAudioTrackListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackAudioTrackList(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManager(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerCommandBehaviorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerCommandBehavior(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerFastForwardReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerFastForwardReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerNextReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerNextReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerPauseReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerPauseReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerPlayReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerPlayReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerPositionReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerPositionReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerPreviousReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerPreviousReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerRateReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerRateReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerRewindReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerRewindReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackCommandManagerShuffleReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackCommandManagerShuffleReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackItem(fromAbi: abi)
}

fileprivate func makeMediaPlaybackItemErrorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackItemError(fromAbi: abi)
}

fileprivate func makeMediaPlaybackItemFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackItemFailedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackItemOpenedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackItemOpenedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackList(fromAbi: abi)
}

fileprivate func makeMediaPlaybackSessionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackSession(fromAbi: abi)
}

fileprivate func makeMediaPlaybackSessionBufferingStartedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackSessionBufferingStartedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlaybackSessionOutputDegradationPolicyStateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackSessionOutputDegradationPolicyState(fromAbi: abi)
}

fileprivate func makeMediaPlaybackSphericalVideoProjectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackSphericalVideoProjection(fromAbi: abi)
}

fileprivate func makeMediaPlaybackTimedMetadataTrackListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackTimedMetadataTrackList(fromAbi: abi)
}

fileprivate func makeMediaPlaybackVideoTrackListFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlaybackVideoTrackList(fromAbi: abi)
}

fileprivate func makeMediaPlayerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlayer(fromAbi: abi)
}

fileprivate func makeMediaPlayerDataReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlayerDataReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlayerFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlayerFailedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlayerRateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlayerRateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaPlayerSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaPlayerSurface(fromAbi: abi)
}

fileprivate func makePlaybackMediaMarkerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PlaybackMediaMarker(fromAbi: abi)
}

fileprivate func makePlaybackMediaMarkerReachedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PlaybackMediaMarkerReachedEventArgs(fromAbi: abi)
}

fileprivate func makePlaybackMediaMarkerSequenceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PlaybackMediaMarkerSequence(fromAbi: abi)
}

fileprivate func makeTimedMetadataPresentationModeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TimedMetadataPresentationModeChangedEventArgs(fromAbi: abi)
}

fileprivate func makeComponentLoadFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ComponentLoadFailedEventArgs(fromAbi: abi)
}

fileprivate func makeMediaProtectionManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaProtectionManager(fromAbi: abi)
}

fileprivate func makeMediaProtectionServiceCompletionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MediaProtectionServiceCompletion(fromAbi: abi)
}

fileprivate func makeRevocationAndRenewalInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RevocationAndRenewalInformation(fromAbi: abi)
}

fileprivate func makeRevocationAndRenewalItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RevocationAndRenewalItem(fromAbi: abi)
}

fileprivate func makeServiceRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ServiceRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeSpeechRecognitionResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpeechRecognitionResult(fromAbi: abi)
}

fileprivate func makeSpeechRecognitionSemanticInterpretationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpeechRecognitionSemanticInterpretation(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSource(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceAdvancedSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceAdvancedSettings(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceCorrelatedTimesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceCorrelatedTimes(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceCreationResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceCreationResult(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDiagnosticAvailableEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDiagnosticAvailableEventArgs(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDiagnosticsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDiagnostics(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadBitrateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadBitrateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadFailedEventArgs(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadRequestedDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadRequestedDeferral(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadResult(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourceDownloadStatisticsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourceDownloadStatistics(fromAbi: abi)
}

fileprivate func makeAdaptiveMediaSourcePlaybackBitrateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveMediaSourcePlaybackBitrateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeHostNameFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HostName(fromAbi: abi)
}

fileprivate func makeBackgroundTransferGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTransferGroup(fromAbi: abi)
}

fileprivate func makeBackgroundTransferRangesDownloadedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackgroundTransferRangesDownloadedEventArgs(fromAbi: abi)
}

fileprivate func makeDownloadOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DownloadOperation(fromAbi: abi)
}

fileprivate func makeResponseInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ResponseInformation(fromAbi: abi)
}

fileprivate func makeAttributedNetworkUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AttributedNetworkUsage(fromAbi: abi)
}

fileprivate func makeConnectionCostFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectionCost(fromAbi: abi)
}

fileprivate func makeConnectionProfileFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectionProfile(fromAbi: abi)
}

fileprivate func makeConnectivityIntervalFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ConnectivityInterval(fromAbi: abi)
}

fileprivate func makeDataPlanStatusFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataPlanStatus(fromAbi: abi)
}

fileprivate func makeDataPlanUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataPlanUsage(fromAbi: abi)
}

fileprivate func makeDataUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataUsage(fromAbi: abi)
}

fileprivate func makeIPInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IPInformation(fromAbi: abi)
}

fileprivate func makeNetworkAdapterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NetworkAdapter(fromAbi: abi)
}

fileprivate func makeNetworkItemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NetworkItem(fromAbi: abi)
}

fileprivate func makeNetworkSecuritySettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NetworkSecuritySettings(fromAbi: abi)
}

fileprivate func makeNetworkUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NetworkUsage(fromAbi: abi)
}

fileprivate func makeProviderNetworkUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProviderNetworkUsage(fromAbi: abi)
}

fileprivate func makeWlanConnectionProfileDetailsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WlanConnectionProfileDetails(fromAbi: abi)
}

fileprivate func makeWwanConnectionProfileDetailsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WwanConnectionProfileDetails(fromAbi: abi)
}

fileprivate func makeSpatialCoordinateSystemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpatialCoordinateSystem(fromAbi: abi)
}

fileprivate func makeWebAuthenticationResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WebAuthenticationResult(fromAbi: abi)
}

fileprivate func makePasswordCredentialFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PasswordCredential(fromAbi: abi)
}

fileprivate func makeCertificateFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Certificate(fromAbi: abi)
}

fileprivate func makeCertificateChainFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CertificateChain(fromAbi: abi)
}

fileprivate func makeCertificateExtensionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CertificateExtension(fromAbi: abi)
}

fileprivate func makeCertificateKeyUsagesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CertificateKeyUsages(fromAbi: abi)
}

fileprivate func makeChainBuildingParametersFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChainBuildingParameters(fromAbi: abi)
}

fileprivate func makeChainValidationParametersFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ChainValidationParameters(fromAbi: abi)
}

fileprivate func makeSubjectAlternativeNameInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SubjectAlternativeNameInfo(fromAbi: abi)
}

fileprivate func makeStorageFileFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageFile(fromAbi: abi)
}

fileprivate func makeStorageFolderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageFolder(fromAbi: abi)
}

fileprivate func makeStorageLibraryChangeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageLibraryChange(fromAbi: abi)
}

fileprivate func makeStorageLibraryChangeReaderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageLibraryChangeReader(fromAbi: abi)
}

fileprivate func makeStorageLibraryChangeTrackerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageLibraryChangeTracker(fromAbi: abi)
}

fileprivate func makeStorageProviderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageProvider(fromAbi: abi)
}

fileprivate func makeStorageStreamTransactionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageStreamTransaction(fromAbi: abi)
}

fileprivate func makeStreamedFileDataRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StreamedFileDataRequest(fromAbi: abi)
}

fileprivate func makeBasicPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BasicProperties(fromAbi: abi)
}

fileprivate func makeDocumentPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DocumentProperties(fromAbi: abi)
}

fileprivate func makeImagePropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImageProperties(fromAbi: abi)
}

fileprivate func makeMusicPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return MusicProperties(fromAbi: abi)
}

fileprivate func makeStorageItemContentPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageItemContentProperties(fromAbi: abi)
}

fileprivate func makeStorageItemThumbnailFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageItemThumbnail(fromAbi: abi)
}

fileprivate func makeVideoPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VideoProperties(fromAbi: abi)
}

fileprivate func makeFileExtensionVectorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileExtensionVector(fromAbi: abi)
}

fileprivate func makeFileOpenPickerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileOpenPicker(fromAbi: abi)
}

fileprivate func makeFilePickerFileTypesOrderedMapFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FilePickerFileTypesOrderedMap(fromAbi: abi)
}

fileprivate func makeFilePickerSelectedFilesArrayFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FilePickerSelectedFilesArray(fromAbi: abi)
}

fileprivate func makeFileSavePickerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileSavePicker(fromAbi: abi)
}

fileprivate func makeFolderPickerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FolderPicker(fromAbi: abi)
}

fileprivate func makeFileOpenPickerUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileOpenPickerUI(fromAbi: abi)
}

fileprivate func makeFileRemovedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileRemovedEventArgs(fromAbi: abi)
}

fileprivate func makeFileSavePickerUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileSavePickerUI(fromAbi: abi)
}

fileprivate func makePickerClosingDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PickerClosingDeferral(fromAbi: abi)
}

fileprivate func makePickerClosingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PickerClosingEventArgs(fromAbi: abi)
}

fileprivate func makePickerClosingOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PickerClosingOperation(fromAbi: abi)
}

fileprivate func makeTargetFileRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TargetFileRequest(fromAbi: abi)
}

fileprivate func makeTargetFileRequestDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TargetFileRequestDeferral(fromAbi: abi)
}

fileprivate func makeTargetFileRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TargetFileRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeCachedFileUpdaterUIFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CachedFileUpdaterUI(fromAbi: abi)
}

fileprivate func makeFileUpdateRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileUpdateRequest(fromAbi: abi)
}

fileprivate func makeFileUpdateRequestDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileUpdateRequestDeferral(fromAbi: abi)
}

fileprivate func makeFileUpdateRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileUpdateRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeQueryOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QueryOptions(fromAbi: abi)
}

fileprivate func makeStorageFileQueryResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageFileQueryResult(fromAbi: abi)
}

fileprivate func makeStorageFolderQueryResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageFolderQueryResult(fromAbi: abi)
}

fileprivate func makeStorageItemQueryResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StorageItemQueryResult(fromAbi: abi)
}

fileprivate func makeBufferFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Buffer(fromAbi: abi)
}

fileprivate func makeDataReaderFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataReader(fromAbi: abi)
}

fileprivate func makeDataReaderLoadOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataReaderLoadOperation(fromAbi: abi)
}

fileprivate func makeDataWriterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataWriter(fromAbi: abi)
}

fileprivate func makeDataWriterStoreOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DataWriterStoreOperation(fromAbi: abi)
}

fileprivate func makeFileInputStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileInputStream(fromAbi: abi)
}

fileprivate func makeFileOutputStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileOutputStream(fromAbi: abi)
}

fileprivate func makeFileRandomAccessStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FileRandomAccessStream(fromAbi: abi)
}

fileprivate func makeInMemoryRandomAccessStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InMemoryRandomAccessStream(fromAbi: abi)
}

fileprivate func makeInputStreamOverStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputStreamOverStream(fromAbi: abi)
}

fileprivate func makeOutputStreamOverStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return OutputStreamOverStream(fromAbi: abi)
}

fileprivate func makeRandomAccessStreamOverStreamFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RandomAccessStreamOverStream(fromAbi: abi)
}

fileprivate func makeRandomAccessStreamReferenceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RandomAccessStreamReference(fromAbi: abi)
}

fileprivate func makeAppActivationResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppActivationResult(fromAbi: abi)
}

fileprivate func makeAppDiagnosticInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppDiagnosticInfo(fromAbi: abi)
}

fileprivate func makeAppDiagnosticInfoWatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppDiagnosticInfoWatcher(fromAbi: abi)
}

fileprivate func makeAppDiagnosticInfoWatcherEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppDiagnosticInfoWatcherEventArgs(fromAbi: abi)
}

fileprivate func makeAppExecutionStateChangeResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppExecutionStateChangeResult(fromAbi: abi)
}

fileprivate func makeAppMemoryReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppMemoryReport(fromAbi: abi)
}

fileprivate func makeAppMemoryUsageLimitChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppMemoryUsageLimitChangingEventArgs(fromAbi: abi)
}

fileprivate func makeAppResourceGroupBackgroundTaskReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupBackgroundTaskReport(fromAbi: abi)
}

fileprivate func makeAppResourceGroupInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupInfo(fromAbi: abi)
}

fileprivate func makeAppResourceGroupInfoWatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupInfoWatcher(fromAbi: abi)
}

fileprivate func makeAppResourceGroupInfoWatcherEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupInfoWatcherEventArgs(fromAbi: abi)
}

fileprivate func makeAppResourceGroupInfoWatcherExecutionStateChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupInfoWatcherExecutionStateChangedEventArgs(fromAbi: abi)
}

fileprivate func makeAppResourceGroupMemoryReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupMemoryReport(fromAbi: abi)
}

fileprivate func makeAppResourceGroupStateReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppResourceGroupStateReport(fromAbi: abi)
}

fileprivate func makeAppUriHandlerHostFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppUriHandlerHost(fromAbi: abi)
}

fileprivate func makeAppUriHandlerRegistrationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppUriHandlerRegistration(fromAbi: abi)
}

fileprivate func makeAppUriHandlerRegistrationManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AppUriHandlerRegistrationManager(fromAbi: abi)
}

fileprivate func makeDispatcherQueueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueue(fromAbi: abi)
}

fileprivate func makeDispatcherQueueControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueueController(fromAbi: abi)
}

fileprivate func makeDispatcherQueueShutdownStartingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueueShutdownStartingEventArgs(fromAbi: abi)
}

fileprivate func makeDispatcherQueueTimerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DispatcherQueueTimer(fromAbi: abi)
}

fileprivate func makeFolderLauncherOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FolderLauncherOptions(fromAbi: abi)
}

fileprivate func makeLaunchUriResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LaunchUriResult(fromAbi: abi)
}

fileprivate func makeLauncherOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LauncherOptions(fromAbi: abi)
}

fileprivate func makeLauncherUIOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LauncherUIOptions(fromAbi: abi)
}

fileprivate func makeProcessLauncherOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessLauncherOptions(fromAbi: abi)
}

fileprivate func makeProcessLauncherResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessLauncherResult(fromAbi: abi)
}

fileprivate func makeProcessMemoryReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessMemoryReport(fromAbi: abi)
}

fileprivate func makeProtocolForResultsOperationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProtocolForResultsOperation(fromAbi: abi)
}

fileprivate func makeRemoteLauncherOptionsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteLauncherOptions(fromAbi: abi)
}

fileprivate func makeUserFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return User(fromAbi: abi)
}

fileprivate func makeUserAuthenticationStatusChangeDeferralFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserAuthenticationStatusChangeDeferral(fromAbi: abi)
}

fileprivate func makeUserAuthenticationStatusChangingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserAuthenticationStatusChangingEventArgs(fromAbi: abi)
}

fileprivate func makeUserChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserChangedEventArgs(fromAbi: abi)
}

fileprivate func makeUserDeviceAssociationChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserDeviceAssociationChangedEventArgs(fromAbi: abi)
}

fileprivate func makeUserPickerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserPicker(fromAbi: abi)
}

fileprivate func makeUserWatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserWatcher(fromAbi: abi)
}

fileprivate func makeDiagnosticActionResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiagnosticActionResult(fromAbi: abi)
}

fileprivate func makeDiagnosticInvokerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DiagnosticInvoker(fromAbi: abi)
}

fileprivate func makeProcessCpuUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessCpuUsage(fromAbi: abi)
}

fileprivate func makeProcessCpuUsageReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessCpuUsageReport(fromAbi: abi)
}

fileprivate func makeProcessDiagnosticInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessDiagnosticInfo(fromAbi: abi)
}

fileprivate func makeProcessDiskUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessDiskUsage(fromAbi: abi)
}

fileprivate func makeProcessDiskUsageReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessDiskUsageReport(fromAbi: abi)
}

fileprivate func makeProcessMemoryUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessMemoryUsage(fromAbi: abi)
}

fileprivate func makeProcessMemoryUsageReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ProcessMemoryUsageReport(fromAbi: abi)
}

fileprivate func makeSystemCpuUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemCpuUsage(fromAbi: abi)
}

fileprivate func makeSystemCpuUsageReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemCpuUsageReport(fromAbi: abi)
}

fileprivate func makeSystemDiagnosticInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemDiagnosticInfo(fromAbi: abi)
}

fileprivate func makeSystemMemoryUsageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMemoryUsage(fromAbi: abi)
}

fileprivate func makeSystemMemoryUsageReportFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemMemoryUsageReport(fromAbi: abi)
}

fileprivate func makeRemoteSystemFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystem(fromAbi: abi)
}

fileprivate func makeRemoteSystemAddedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemAddedEventArgs(fromAbi: abi)
}

fileprivate func makeRemoteSystemAppFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemApp(fromAbi: abi)
}

fileprivate func makeRemoteSystemConnectionRequestFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemConnectionRequest(fromAbi: abi)
}

fileprivate func makeRemoteSystemEnumerationCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemEnumerationCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeRemoteSystemRemovedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemRemovedEventArgs(fromAbi: abi)
}

fileprivate func makeRemoteSystemUpdatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemUpdatedEventArgs(fromAbi: abi)
}

fileprivate func makeRemoteSystemWatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemWatcher(fromAbi: abi)
}

fileprivate func makeRemoteSystemWatcherErrorOccurredEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RemoteSystemWatcherErrorOccurredEventArgs(fromAbi: abi)
}

fileprivate func makeColorHelperFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorHelper(fromAbi: abi)
}

fileprivate func makeColorsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Colors(fromAbi: abi)
}

fileprivate func makeUIContentRootFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIContentRoot(fromAbi: abi)
}

fileprivate func makeUIContextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIContext(fromAbi: abi)
}

fileprivate func makeAmbientLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AmbientLight(fromAbi: abi)
}

fileprivate func makeAnimationControllerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AnimationController(fromAbi: abi)
}

fileprivate func makeAnimationPropertyInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AnimationPropertyInfo(fromAbi: abi)
}

fileprivate func makeBooleanKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BooleanKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeBounceScalarNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceScalarNaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeBounceVector2NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceVector2NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeBounceVector3NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BounceVector3NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeColorKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ColorKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeCompositionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionAnimation(fromAbi: abi)
}

fileprivate func makeCompositionAnimationGroupFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionAnimationGroup(fromAbi: abi)
}

fileprivate func makeCompositionBackdropBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionBackdropBrush(fromAbi: abi)
}

fileprivate func makeCompositionBatchCompletedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionBatchCompletedEventArgs(fromAbi: abi)
}

fileprivate func makeCompositionBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionBrush(fromAbi: abi)
}

fileprivate func makeCompositionCapabilitiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionCapabilities(fromAbi: abi)
}

fileprivate func makeCompositionClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionClip(fromAbi: abi)
}

fileprivate func makeCompositionColorBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionColorBrush(fromAbi: abi)
}

fileprivate func makeCompositionColorGradientStopFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionColorGradientStop(fromAbi: abi)
}

fileprivate func makeCompositionColorGradientStopCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionColorGradientStopCollection(fromAbi: abi)
}

fileprivate func makeCompositionCommitBatchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionCommitBatch(fromAbi: abi)
}

fileprivate func makeCompositionContainerShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionContainerShape(fromAbi: abi)
}

fileprivate func makeCompositionDrawingSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionDrawingSurface(fromAbi: abi)
}

fileprivate func makeCompositionEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEasingFunction(fromAbi: abi)
}

fileprivate func makeCompositionEffectBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEffectBrush(fromAbi: abi)
}

fileprivate func makeCompositionEffectFactoryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEffectFactory(fromAbi: abi)
}

fileprivate func makeCompositionEffectSourceParameterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEffectSourceParameter(fromAbi: abi)
}

fileprivate func makeCompositionEllipseGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionEllipseGeometry(fromAbi: abi)
}

fileprivate func makeCompositionGeometricClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGeometricClip(fromAbi: abi)
}

fileprivate func makeCompositionGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGeometry(fromAbi: abi)
}

fileprivate func makeCompositionGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGradientBrush(fromAbi: abi)
}

fileprivate func makeCompositionGraphicsDeviceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionGraphicsDevice(fromAbi: abi)
}

fileprivate func makeCompositionLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionLight(fromAbi: abi)
}

fileprivate func makeCompositionLineGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionLineGeometry(fromAbi: abi)
}

fileprivate func makeCompositionLinearGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionLinearGradientBrush(fromAbi: abi)
}

fileprivate func makeCompositionMaskBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionMaskBrush(fromAbi: abi)
}

fileprivate func makeCompositionMipmapSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionMipmapSurface(fromAbi: abi)
}

fileprivate func makeCompositionNineGridBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionNineGridBrush(fromAbi: abi)
}

fileprivate func makeCompositionObjectFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionObject(fromAbi: abi)
}

fileprivate func makeCompositionPathFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionPath(fromAbi: abi)
}

fileprivate func makeCompositionPathGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionPathGeometry(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadow(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowCasterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowCaster(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowCasterCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowCasterCollection(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowReceiverFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowReceiver(fromAbi: abi)
}

fileprivate func makeCompositionProjectedShadowReceiverUnorderedCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionProjectedShadowReceiverUnorderedCollection(fromAbi: abi)
}

fileprivate func makeCompositionPropertySetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionPropertySet(fromAbi: abi)
}

fileprivate func makeCompositionRadialGradientBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionRadialGradientBrush(fromAbi: abi)
}

fileprivate func makeCompositionRectangleGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionRectangleGeometry(fromAbi: abi)
}

fileprivate func makeCompositionRoundedRectangleGeometryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionRoundedRectangleGeometry(fromAbi: abi)
}

fileprivate func makeCompositionScopedBatchFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionScopedBatch(fromAbi: abi)
}

fileprivate func makeCompositionShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionShadow(fromAbi: abi)
}

fileprivate func makeCompositionShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionShape(fromAbi: abi)
}

fileprivate func makeCompositionShapeCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionShapeCollection(fromAbi: abi)
}

fileprivate func makeCompositionSpriteShapeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionSpriteShape(fromAbi: abi)
}

fileprivate func makeCompositionStrokeDashArrayFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionStrokeDashArray(fromAbi: abi)
}

fileprivate func makeCompositionSurfaceBrushFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionSurfaceBrush(fromAbi: abi)
}

fileprivate func makeCompositionTargetFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionTarget(fromAbi: abi)
}

fileprivate func makeCompositionTransformFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionTransform(fromAbi: abi)
}

fileprivate func makeCompositionViewBoxFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionViewBox(fromAbi: abi)
}

fileprivate func makeCompositionVirtualDrawingSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionVirtualDrawingSurface(fromAbi: abi)
}

fileprivate func makeCompositionVisualSurfaceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CompositionVisualSurface(fromAbi: abi)
}

fileprivate func makeCompositorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Compositor(fromAbi: abi)
}

fileprivate func makeContainerVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContainerVisual(fromAbi: abi)
}

fileprivate func makeCubicBezierEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CubicBezierEasingFunction(fromAbi: abi)
}

fileprivate func makeDistantLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DistantLight(fromAbi: abi)
}

fileprivate func makeDropShadowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DropShadow(fromAbi: abi)
}

fileprivate func makeExpressionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ExpressionAnimation(fromAbi: abi)
}

fileprivate func makeImplicitAnimationCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ImplicitAnimationCollection(fromAbi: abi)
}

fileprivate func makeInitialValueExpressionCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InitialValueExpressionCollection(fromAbi: abi)
}

fileprivate func makeInsetClipFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InsetClip(fromAbi: abi)
}

fileprivate func makeKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeLayerVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LayerVisual(fromAbi: abi)
}

fileprivate func makeLinearEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return LinearEasingFunction(fromAbi: abi)
}

fileprivate func makeNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makePathKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PathKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makePointLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointLight(fromAbi: abi)
}

fileprivate func makeQuaternionKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return QuaternionKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeRedirectVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RedirectVisual(fromAbi: abi)
}

fileprivate func makeRenderingDeviceReplacedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RenderingDeviceReplacedEventArgs(fromAbi: abi)
}

fileprivate func makeScalarKeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScalarKeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeScalarNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScalarNaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeShapeVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShapeVisual(fromAbi: abi)
}

fileprivate func makeSpotLightFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpotLight(fromAbi: abi)
}

fileprivate func makeSpringScalarNaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpringScalarNaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeSpringVector2NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpringVector2NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeSpringVector3NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpringVector3NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeSpriteVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SpriteVisual(fromAbi: abi)
}

fileprivate func makeStepEasingFunctionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StepEasingFunction(fromAbi: abi)
}

fileprivate func makeVector2KeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector2KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeVector2NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector2NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeVector3KeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector3KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeVector3NaturalMotionAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector3NaturalMotionAnimation(fromAbi: abi)
}

fileprivate func makeVector4KeyFrameAnimationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Vector4KeyFrameAnimation(fromAbi: abi)
}

fileprivate func makeVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Visual(fromAbi: abi)
}

fileprivate func makeVisualCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualCollection(fromAbi: abi)
}

fileprivate func makeVisualUnorderedCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisualUnorderedCollection(fromAbi: abi)
}

fileprivate func makeAcceleratorKeyEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AcceleratorKeyEventArgs(fromAbi: abi)
}

fileprivate func makeAutomationProviderRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AutomationProviderRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeBackRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BackRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeCharacterReceivedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CharacterReceivedEventArgs(fromAbi: abi)
}

fileprivate func makeClosestInteractiveBoundsRequestedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ClosestInteractiveBoundsRequestedEventArgs(fromAbi: abi)
}

fileprivate func makeCoreAcceleratorKeysFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreAcceleratorKeys(fromAbi: abi)
}

fileprivate func makeCoreComponentInputSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreComponentInputSource(fromAbi: abi)
}

fileprivate func makeCoreCursorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreCursor(fromAbi: abi)
}

fileprivate func makeCoreDispatcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreDispatcher(fromAbi: abi)
}

fileprivate func makeCoreIndependentInputSourceFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreIndependentInputSource(fromAbi: abi)
}

fileprivate func makeCoreWindowFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWindow(fromAbi: abi)
}

fileprivate func makeCoreWindowDialogFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWindowDialog(fromAbi: abi)
}

fileprivate func makeCoreWindowEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWindowEventArgs(fromAbi: abi)
}

fileprivate func makeCoreWindowFlyoutFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWindowFlyout(fromAbi: abi)
}

fileprivate func makeCoreWindowPopupShowingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWindowPopupShowingEventArgs(fromAbi: abi)
}

fileprivate func makeCoreWindowResizeManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return CoreWindowResizeManager(fromAbi: abi)
}

fileprivate func makeIdleDispatchedHandlerArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return IdleDispatchedHandlerArgs(fromAbi: abi)
}

fileprivate func makeInputEnabledEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputEnabledEventArgs(fromAbi: abi)
}

fileprivate func makeKeyEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return KeyEventArgs(fromAbi: abi)
}

fileprivate func makePointerEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerEventArgs(fromAbi: abi)
}

fileprivate func makeSystemNavigationManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return SystemNavigationManager(fromAbi: abi)
}

fileprivate func makeTouchHitTestingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TouchHitTestingEventArgs(fromAbi: abi)
}

fileprivate func makeVisibilityChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return VisibilityChangedEventArgs(fromAbi: abi)
}

fileprivate func makeWindowActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeWindowSizeChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowSizeChangedEventArgs(fromAbi: abi)
}

fileprivate func makePointerPointFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerPoint(fromAbi: abi)
}

fileprivate func makePointerPointPropertiesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return PointerPointProperties(fromAbi: abi)
}

fileprivate func makeAdaptiveNotificationTextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AdaptiveNotificationText(fromAbi: abi)
}

fileprivate func makeBadgeNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BadgeNotification(fromAbi: abi)
}

fileprivate func makeBadgeUpdateManagerForUserFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BadgeUpdateManagerForUser(fromAbi: abi)
}

fileprivate func makeBadgeUpdaterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return BadgeUpdater(fromAbi: abi)
}

fileprivate func makeNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return Notification(fromAbi: abi)
}

fileprivate func makeNotificationBindingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NotificationBinding(fromAbi: abi)
}

fileprivate func makeNotificationDataFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NotificationData(fromAbi: abi)
}

fileprivate func makeNotificationVisualFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return NotificationVisual(fromAbi: abi)
}

fileprivate func makeScheduledTileNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScheduledTileNotification(fromAbi: abi)
}

fileprivate func makeScheduledToastNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScheduledToastNotification(fromAbi: abi)
}

fileprivate func makeScheduledToastNotificationShowingEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ScheduledToastNotificationShowingEventArgs(fromAbi: abi)
}

fileprivate func makeShownTileNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ShownTileNotification(fromAbi: abi)
}

fileprivate func makeTileFlyoutNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TileFlyoutNotification(fromAbi: abi)
}

fileprivate func makeTileFlyoutUpdaterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TileFlyoutUpdater(fromAbi: abi)
}

fileprivate func makeTileNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TileNotification(fromAbi: abi)
}

fileprivate func makeTileUpdateManagerForUserFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TileUpdateManagerForUser(fromAbi: abi)
}

fileprivate func makeTileUpdaterFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return TileUpdater(fromAbi: abi)
}

fileprivate func makeToastActivatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastActivatedEventArgs(fromAbi: abi)
}

fileprivate func makeToastCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastCollection(fromAbi: abi)
}

fileprivate func makeToastCollectionManagerFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastCollectionManager(fromAbi: abi)
}

fileprivate func makeToastDismissedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastDismissedEventArgs(fromAbi: abi)
}

fileprivate func makeToastFailedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastFailedEventArgs(fromAbi: abi)
}

fileprivate func makeToastNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotification(fromAbi: abi)
}

fileprivate func makeToastNotificationActionTriggerDetailFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotificationActionTriggerDetail(fromAbi: abi)
}

fileprivate func makeToastNotificationHistoryFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotificationHistory(fromAbi: abi)
}

fileprivate func makeToastNotificationHistoryChangedTriggerDetailFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotificationHistoryChangedTriggerDetail(fromAbi: abi)
}

fileprivate func makeToastNotificationManagerForUserFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotificationManagerForUser(fromAbi: abi)
}

fileprivate func makeToastNotifierFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ToastNotifier(fromAbi: abi)
}

fileprivate func makeUserNotificationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserNotification(fromAbi: abi)
}

fileprivate func makeUserNotificationChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UserNotificationChangedEventArgs(fromAbi: abi)
}

fileprivate func makeContentLinkInfoFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ContentLinkInfo(fromAbi: abi)
}

fileprivate func makeFontWeightsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return FontWeights(fromAbi: abi)
}

fileprivate func makeRichEditTextDocumentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RichEditTextDocument(fromAbi: abi)
}

fileprivate func makeRichEditTextRangeFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return RichEditTextRange(fromAbi: abi)
}

fileprivate func makeAccessibilitySettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return AccessibilitySettings(fromAbi: abi)
}

fileprivate func makeActivationViewSwitcherFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ActivationViewSwitcher(fromAbi: abi)
}

fileprivate func makeApplicationViewFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationView(fromAbi: abi)
}

fileprivate func makeApplicationViewConsolidatedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationViewConsolidatedEventArgs(fromAbi: abi)
}

fileprivate func makeApplicationViewScalingFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationViewScaling(fromAbi: abi)
}

fileprivate func makeApplicationViewTitleBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationViewTitleBar(fromAbi: abi)
}

fileprivate func makeApplicationViewTransferContextFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ApplicationViewTransferContext(fromAbi: abi)
}

fileprivate func makeInputPaneFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputPane(fromAbi: abi)
}

fileprivate func makeInputPaneVisibilityEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return InputPaneVisibilityEventArgs(fromAbi: abi)
}

fileprivate func makeStatusBarFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StatusBar(fromAbi: abi)
}

fileprivate func makeStatusBarProgressIndicatorFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return StatusBarProgressIndicator(fromAbi: abi)
}

fileprivate func makeUISettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UISettings(fromAbi: abi)
}

fileprivate func makeUISettingsAutoHideScrollBarsChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UISettingsAutoHideScrollBarsChangedEventArgs(fromAbi: abi)
}

fileprivate func makeUIViewSettingsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return UIViewSettings(fromAbi: abi)
}

fileprivate func makeViewModePreferencesFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return ViewModePreferences(fromAbi: abi)
}

fileprivate func makeDisplayRegionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return DisplayRegion(fromAbi: abi)
}

fileprivate func makeWindowingEnvironmentFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowingEnvironment(fromAbi: abi)
}

fileprivate func makeWindowingEnvironmentChangedEventArgsFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return WindowingEnvironmentChangedEventArgs(fromAbi: abi)
}

fileprivate func makeHttpClientFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpClient(fromAbi: abi)
}

fileprivate func makeHttpGetBufferResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpGetBufferResult(fromAbi: abi)
}

fileprivate func makeHttpGetInputStreamResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpGetInputStreamResult(fromAbi: abi)
}

fileprivate func makeHttpGetStringResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpGetStringResult(fromAbi: abi)
}

fileprivate func makeHttpMethodFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpMethod(fromAbi: abi)
}

fileprivate func makeHttpRequestMessageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpRequestMessage(fromAbi: abi)
}

fileprivate func makeHttpRequestResultFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpRequestResult(fromAbi: abi)
}

fileprivate func makeHttpResponseMessageFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpResponseMessage(fromAbi: abi)
}

fileprivate func makeHttpTransportInformationFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpTransportInformation(fromAbi: abi)
}

fileprivate func makeHttpCacheDirectiveHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpCacheDirectiveHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpChallengeHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpChallengeHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpChallengeHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpChallengeHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpConnectionOptionHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpConnectionOptionHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpConnectionOptionHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpConnectionOptionHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpContentCodingHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentCodingHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpContentCodingHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentCodingHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpContentCodingWithQualityHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentCodingWithQualityHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpContentCodingWithQualityHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentCodingWithQualityHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpContentDispositionHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentDispositionHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpContentHeaderCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentHeaderCollection(fromAbi: abi)
}

fileprivate func makeHttpContentRangeHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpContentRangeHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpCookiePairHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpCookiePairHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpCookiePairHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpCookiePairHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpCredentialsHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpCredentialsHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpDateOrDeltaHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpDateOrDeltaHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpExpectationHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpExpectationHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpExpectationHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpExpectationHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpLanguageHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpLanguageHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpLanguageRangeWithQualityHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpLanguageRangeWithQualityHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpLanguageRangeWithQualityHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpLanguageRangeWithQualityHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpMediaTypeHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpMediaTypeHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpMediaTypeWithQualityHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpMediaTypeWithQualityHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpMediaTypeWithQualityHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpMediaTypeWithQualityHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpMethodHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpMethodHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpNameValueHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpNameValueHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpProductHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpProductHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpProductInfoHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpProductInfoHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpProductInfoHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpProductInfoHeaderValueCollection(fromAbi: abi)
}

fileprivate func makeHttpRequestHeaderCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpRequestHeaderCollection(fromAbi: abi)
}

fileprivate func makeHttpResponseHeaderCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpResponseHeaderCollection(fromAbi: abi)
}

fileprivate func makeHttpTransferCodingHeaderValueFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpTransferCodingHeaderValue(fromAbi: abi)
}

fileprivate func makeHttpTransferCodingHeaderValueCollectionFrom(abi: WindowsFoundation.IInspectable) -> Any {
    return HttpTransferCodingHeaderValueCollection(fromAbi: abi)
}

@_spi(__MakeFromAbi_DoNotImport)
public class __MakeFromAbi: MakeFromAbi {
    public static func from(typeName: String, abi: WindowsFoundation.IInspectable) -> Any? {
        switch typeName {
            case "IEnteredBackgroundEventArgs": return makeIEnteredBackgroundEventArgsFrom(abi: abi)
            case "ILeavingBackgroundEventArgs": return makeILeavingBackgroundEventArgsFrom(abi: abi)
            case "ISuspendingDeferral": return makeISuspendingDeferralFrom(abi: abi)
            case "ISuspendingEventArgs": return makeISuspendingEventArgsFrom(abi: abi)
            case "ISuspendingOperation": return makeISuspendingOperationFrom(abi: abi)
            case "IActivatedEventArgs": return makeIActivatedEventArgsFrom(abi: abi)
            case "IActivatedEventArgsWithUser": return makeIActivatedEventArgsWithUserFrom(abi: abi)
            case "IApplicationViewActivatedEventArgs": return makeIApplicationViewActivatedEventArgsFrom(abi: abi)
            case "IAppointmentsProviderActivatedEventArgs": return makeIAppointmentsProviderActivatedEventArgsFrom(abi: abi)
            case "IAppointmentsProviderAddAppointmentActivatedEventArgs": return makeIAppointmentsProviderAddAppointmentActivatedEventArgsFrom(abi: abi)
            case "IAppointmentsProviderRemoveAppointmentActivatedEventArgs": return makeIAppointmentsProviderRemoveAppointmentActivatedEventArgsFrom(abi: abi)
            case "IAppointmentsProviderReplaceAppointmentActivatedEventArgs": return makeIAppointmentsProviderReplaceAppointmentActivatedEventArgsFrom(abi: abi)
            case "IAppointmentsProviderShowAppointmentDetailsActivatedEventArgs": return makeIAppointmentsProviderShowAppointmentDetailsActivatedEventArgsFrom(abi: abi)
            case "IAppointmentsProviderShowTimeFrameActivatedEventArgs": return makeIAppointmentsProviderShowTimeFrameActivatedEventArgsFrom(abi: abi)
            case "IBackgroundActivatedEventArgs": return makeIBackgroundActivatedEventArgsFrom(abi: abi)
            case "IBarcodeScannerPreviewActivatedEventArgs": return makeIBarcodeScannerPreviewActivatedEventArgsFrom(abi: abi)
            case "ICachedFileUpdaterActivatedEventArgs": return makeICachedFileUpdaterActivatedEventArgsFrom(abi: abi)
            case "ICameraSettingsActivatedEventArgs": return makeICameraSettingsActivatedEventArgsFrom(abi: abi)
            case "ICommandLineActivatedEventArgs": return makeICommandLineActivatedEventArgsFrom(abi: abi)
            case "IContactActivatedEventArgs": return makeIContactActivatedEventArgsFrom(abi: abi)
            case "IContactCallActivatedEventArgs": return makeIContactCallActivatedEventArgsFrom(abi: abi)
            case "IContactMapActivatedEventArgs": return makeIContactMapActivatedEventArgsFrom(abi: abi)
            case "IContactMessageActivatedEventArgs": return makeIContactMessageActivatedEventArgsFrom(abi: abi)
            case "IContactPanelActivatedEventArgs": return makeIContactPanelActivatedEventArgsFrom(abi: abi)
            case "IContactPickerActivatedEventArgs": return makeIContactPickerActivatedEventArgsFrom(abi: abi)
            case "IContactPostActivatedEventArgs": return makeIContactPostActivatedEventArgsFrom(abi: abi)
            case "IContactVideoCallActivatedEventArgs": return makeIContactVideoCallActivatedEventArgsFrom(abi: abi)
            case "IContactsProviderActivatedEventArgs": return makeIContactsProviderActivatedEventArgsFrom(abi: abi)
            case "IContinuationActivatedEventArgs": return makeIContinuationActivatedEventArgsFrom(abi: abi)
            case "IDeviceActivatedEventArgs": return makeIDeviceActivatedEventArgsFrom(abi: abi)
            case "IDevicePairingActivatedEventArgs": return makeIDevicePairingActivatedEventArgsFrom(abi: abi)
            case "IDialReceiverActivatedEventArgs": return makeIDialReceiverActivatedEventArgsFrom(abi: abi)
            case "IFileActivatedEventArgs": return makeIFileActivatedEventArgsFrom(abi: abi)
            case "IFileActivatedEventArgsWithCallerPackageFamilyName": return makeIFileActivatedEventArgsWithCallerPackageFamilyNameFrom(abi: abi)
            case "IFileActivatedEventArgsWithNeighboringFiles": return makeIFileActivatedEventArgsWithNeighboringFilesFrom(abi: abi)
            case "IFileOpenPickerActivatedEventArgs": return makeIFileOpenPickerActivatedEventArgsFrom(abi: abi)
            case "IFileOpenPickerActivatedEventArgs2": return makeIFileOpenPickerActivatedEventArgs2From(abi: abi)
            case "IFileOpenPickerContinuationEventArgs": return makeIFileOpenPickerContinuationEventArgsFrom(abi: abi)
            case "IFileSavePickerActivatedEventArgs": return makeIFileSavePickerActivatedEventArgsFrom(abi: abi)
            case "IFileSavePickerActivatedEventArgs2": return makeIFileSavePickerActivatedEventArgs2From(abi: abi)
            case "IFileSavePickerContinuationEventArgs": return makeIFileSavePickerContinuationEventArgsFrom(abi: abi)
            case "IFolderPickerContinuationEventArgs": return makeIFolderPickerContinuationEventArgsFrom(abi: abi)
            case "ILaunchActivatedEventArgs": return makeILaunchActivatedEventArgsFrom(abi: abi)
            case "ILaunchActivatedEventArgs2": return makeILaunchActivatedEventArgs2From(abi: abi)
            case "ILockScreenActivatedEventArgs": return makeILockScreenActivatedEventArgsFrom(abi: abi)
            case "ILockScreenCallActivatedEventArgs": return makeILockScreenCallActivatedEventArgsFrom(abi: abi)
            case "IPickerReturnedActivatedEventArgs": return makeIPickerReturnedActivatedEventArgsFrom(abi: abi)
            case "IPrelaunchActivatedEventArgs": return makeIPrelaunchActivatedEventArgsFrom(abi: abi)
            case "IPrint3DWorkflowActivatedEventArgs": return makeIPrint3DWorkflowActivatedEventArgsFrom(abi: abi)
            case "IPrintTaskSettingsActivatedEventArgs": return makeIPrintTaskSettingsActivatedEventArgsFrom(abi: abi)
            case "IProtocolActivatedEventArgs": return makeIProtocolActivatedEventArgsFrom(abi: abi)
            case "IProtocolActivatedEventArgsWithCallerPackageFamilyNameAndData": return makeIProtocolActivatedEventArgsWithCallerPackageFamilyNameAndDataFrom(abi: abi)
            case "IProtocolForResultsActivatedEventArgs": return makeIProtocolForResultsActivatedEventArgsFrom(abi: abi)
            case "IRestrictedLaunchActivatedEventArgs": return makeIRestrictedLaunchActivatedEventArgsFrom(abi: abi)
            case "ISearchActivatedEventArgs": return makeISearchActivatedEventArgsFrom(abi: abi)
            case "ISearchActivatedEventArgsWithLinguisticDetails": return makeISearchActivatedEventArgsWithLinguisticDetailsFrom(abi: abi)
            case "IShareTargetActivatedEventArgs": return makeIShareTargetActivatedEventArgsFrom(abi: abi)
            case "IStartupTaskActivatedEventArgs": return makeIStartupTaskActivatedEventArgsFrom(abi: abi)
            case "IToastNotificationActivatedEventArgs": return makeIToastNotificationActivatedEventArgsFrom(abi: abi)
            case "IUserDataAccountProviderActivatedEventArgs": return makeIUserDataAccountProviderActivatedEventArgsFrom(abi: abi)
            case "IViewSwitcherProvider": return makeIViewSwitcherProviderFrom(abi: abi)
            case "IVoiceCommandActivatedEventArgs": return makeIVoiceCommandActivatedEventArgsFrom(abi: abi)
            case "IWalletActionActivatedEventArgs": return makeIWalletActionActivatedEventArgsFrom(abi: abi)
            case "IWebAccountProviderActivatedEventArgs": return makeIWebAccountProviderActivatedEventArgsFrom(abi: abi)
            case "IWebAuthenticationBrokerContinuationEventArgs": return makeIWebAuthenticationBrokerContinuationEventArgsFrom(abi: abi)
            case "IAppointmentParticipant": return makeIAppointmentParticipantFrom(abi: abi)
            case "IBackgroundTaskInstance": return makeIBackgroundTaskInstanceFrom(abi: abi)
            case "IBackgroundTaskRegistration": return makeIBackgroundTaskRegistrationFrom(abi: abi)
            case "IBackgroundTaskRegistration2": return makeIBackgroundTaskRegistration2From(abi: abi)
            case "IBackgroundTaskRegistration3": return makeIBackgroundTaskRegistration3From(abi: abi)
            case "IBackgroundTrigger": return makeIBackgroundTriggerFrom(abi: abi)
            case "IContactField": return makeIContactFieldFrom(abi: abi)
            case "ICoreApplicationUnhandledError": return makeICoreApplicationUnhandledErrorFrom(abi: abi)
            case "IFrameworkView": return makeIFrameworkViewFrom(abi: abi)
            case "IFrameworkViewSource": return makeIFrameworkViewSourceFrom(abi: abi)
            case "IUserDataAccountProviderOperation": return makeIUserDataAccountProviderOperationFrom(abi: abi)
            case "IJsonValue": return makeIJsonValueFrom(abi: abi)
            case "IXmlCharacterData": return makeIXmlCharacterDataFrom(abi: abi)
            case "IXmlNode": return makeIXmlNodeFrom(abi: abi)
            case "IXmlNodeSelector": return makeIXmlNodeSelectorFrom(abi: abi)
            case "IXmlNodeSerializer": return makeIXmlNodeSerializerFrom(abi: abi)
            case "IXmlText": return makeIXmlTextFrom(abi: abi)
            case "IDevicePairingSettings": return makeIDevicePairingSettingsFrom(abi: abi)
            case "IGeoshape": return makeIGeoshapeFrom(abi: abi)
            case "INumberFormatter2": return makeINumberFormatter2From(abi: abi)
            case "IGeometrySource2D": return makeIGeometrySource2DFrom(abi: abi)
            case "IDirect3DDevice": return makeIDirect3DDeviceFrom(abi: abi)
            case "IDirect3DSurface": return makeIDirect3DSurfaceFrom(abi: abi)
            case "IGraphicsEffect": return makeIGraphicsEffectFrom(abi: abi)
            case "IGraphicsEffectSource": return makeIGraphicsEffectSourceFrom(abi: abi)
            case "IBitmapFrame": return makeIBitmapFrameFrom(abi: abi)
            case "IBitmapFrameWithSoftwareBitmap": return makeIBitmapFrameWithSoftwareBitmapFrom(abi: abi)
            case "IBitmapPropertiesView": return makeIBitmapPropertiesViewFrom(abi: abi)
            case "IPrintDocumentSource": return makeIPrintDocumentSourceFrom(abi: abi)
            case "IPrintTaskOptionsCore": return makeIPrintTaskOptionsCoreFrom(abi: abi)
            case "IPrintTaskOptionsCoreProperties": return makeIPrintTaskOptionsCorePropertiesFrom(abi: abi)
            case "IPrintTaskOptionsCoreUIConfiguration": return makeIPrintTaskOptionsCoreUIConfigurationFrom(abi: abi)
            case "IMediaExtension": return makeIMediaExtensionFrom(abi: abi)
            case "IMediaFrame": return makeIMediaFrameFrom(abi: abi)
            case "IAudioInputNode": return makeIAudioInputNodeFrom(abi: abi)
            case "IAudioInputNode2": return makeIAudioInputNode2From(abi: abi)
            case "IAudioNode": return makeIAudioNodeFrom(abi: abi)
            case "IAudioNodeWithListener": return makeIAudioNodeWithListenerFrom(abi: abi)
            case "IMediaCue": return makeIMediaCueFrom(abi: abi)
            case "IMediaSource": return makeIMediaSourceFrom(abi: abi)
            case "IMediaStreamDescriptor": return makeIMediaStreamDescriptorFrom(abi: abi)
            case "IMediaStreamDescriptor2": return makeIMediaStreamDescriptor2From(abi: abi)
            case "IMediaTrack": return makeIMediaTrackFrom(abi: abi)
            case "ISingleSelectMediaTrackList": return makeISingleSelectMediaTrackListFrom(abi: abi)
            case "ITimedMetadataTrackProvider": return makeITimedMetadataTrackProviderFrom(abi: abi)
            case "IMediaDeviceController": return makeIMediaDeviceControllerFrom(abi: abi)
            case "IAudioEffectDefinition": return makeIAudioEffectDefinitionFrom(abi: abi)
            case "IVideoEffectDefinition": return makeIVideoEffectDefinitionFrom(abi: abi)
            case "IMediaEncodingProperties": return makeIMediaEncodingPropertiesFrom(abi: abi)
            case "IMediaEnginePlaybackSource": return makeIMediaEnginePlaybackSourceFrom(abi: abi)
            case "IMediaPlaybackSource": return makeIMediaPlaybackSourceFrom(abi: abi)
            case "IMediaProtectionServiceRequest": return makeIMediaProtectionServiceRequestFrom(abi: abi)
            case "ISpeechRecognitionConstraint": return makeISpeechRecognitionConstraintFrom(abi: abi)
            case "IBackgroundTransferOperation": return makeIBackgroundTransferOperationFrom(abi: abi)
            case "IBackgroundTransferOperationPriority": return makeIBackgroundTransferOperationPriorityFrom(abi: abi)
            case "IWebAccountProviderOperation": return makeIWebAccountProviderOperationFrom(abi: abi)
            case "IStorageFile": return makeIStorageFileFrom(abi: abi)
            case "IStorageFile2": return makeIStorageFile2From(abi: abi)
            case "IStorageFilePropertiesWithAvailability": return makeIStorageFilePropertiesWithAvailabilityFrom(abi: abi)
            case "IStorageFolder": return makeIStorageFolderFrom(abi: abi)
            case "IStorageFolder2": return makeIStorageFolder2From(abi: abi)
            case "IStorageItem": return makeIStorageItemFrom(abi: abi)
            case "IStorageItem2": return makeIStorageItem2From(abi: abi)
            case "IStorageItemProperties": return makeIStorageItemPropertiesFrom(abi: abi)
            case "IStorageItemProperties2": return makeIStorageItemProperties2From(abi: abi)
            case "IStorageItemPropertiesWithProvider": return makeIStorageItemPropertiesWithProviderFrom(abi: abi)
            case "IStreamedFileDataRequest": return makeIStreamedFileDataRequestFrom(abi: abi)
            case "IStorageItemExtraProperties": return makeIStorageItemExtraPropertiesFrom(abi: abi)
            case "IStorageFolderQueryOperations": return makeIStorageFolderQueryOperationsFrom(abi: abi)
            case "IStorageQueryResultBase": return makeIStorageQueryResultBaseFrom(abi: abi)
            case "IBuffer": return makeIBufferFrom(abi: abi)
            case "IContentTypeProvider": return makeIContentTypeProviderFrom(abi: abi)
            case "IDataReader": return makeIDataReaderFrom(abi: abi)
            case "IDataWriter": return makeIDataWriterFrom(abi: abi)
            case "IInputStream": return makeIInputStreamFrom(abi: abi)
            case "IInputStreamReference": return makeIInputStreamReferenceFrom(abi: abi)
            case "IOutputStream": return makeIOutputStreamFrom(abi: abi)
            case "IRandomAccessStream": return makeIRandomAccessStreamFrom(abi: abi)
            case "IRandomAccessStreamReference": return makeIRandomAccessStreamReferenceFrom(abi: abi)
            case "IRandomAccessStreamWithContentType": return makeIRandomAccessStreamWithContentTypeFrom(abi: abi)
            case "ILauncherViewOptions": return makeILauncherViewOptionsFrom(abi: abi)
            case "IRemoteSystemFilter": return makeIRemoteSystemFilterFrom(abi: abi)
            case "IAnimationObject": return makeIAnimationObjectFrom(abi: abi)
            case "ICompositionAnimationBase": return makeICompositionAnimationBaseFrom(abi: abi)
            case "ICompositionSurface": return makeICompositionSurfaceFrom(abi: abi)
            case "IVisualElement": return makeIVisualElementFrom(abi: abi)
            case "ICoreAcceleratorKeys": return makeICoreAcceleratorKeysFrom(abi: abi)
            case "ICoreInputSourceBase": return makeICoreInputSourceBaseFrom(abi: abi)
            case "ICorePointerInputSource": return makeICorePointerInputSourceFrom(abi: abi)
            case "ICorePointerInputSource2": return makeICorePointerInputSource2From(abi: abi)
            case "ICorePointerRedirector": return makeICorePointerRedirectorFrom(abi: abi)
            case "ICoreWindow": return makeICoreWindowFrom(abi: abi)
            case "ICoreWindowEventArgs": return makeICoreWindowEventArgsFrom(abi: abi)
            case "IInitializeWithCoreWindow": return makeIInitializeWithCoreWindowFrom(abi: abi)
            case "IPointerPointTransform": return makeIPointerPointTransformFrom(abi: abi)
            case "IAdaptiveNotificationContent": return makeIAdaptiveNotificationContentFrom(abi: abi)
            case "IUICommand": return makeIUICommandFrom(abi: abi)
            case "ITextCharacterFormat": return makeITextCharacterFormatFrom(abi: abi)
            case "ITextDocument": return makeITextDocumentFrom(abi: abi)
            case "ITextParagraphFormat": return makeITextParagraphFormatFrom(abi: abi)
            case "ITextRange": return makeITextRangeFrom(abi: abi)
            case "ITextSelection": return makeITextSelectionFrom(abi: abi)
            case "IHttpContent": return makeIHttpContentFrom(abi: abi)
            case "IHttpFilter": return makeIHttpFilterFrom(abi: abi)
            case "AppDisplayInfo": return makeAppDisplayInfoFrom(abi: abi)
            case "AppInfo": return makeAppInfoFrom(abi: abi)
            case "AppInstallerInfo": return makeAppInstallerInfoFrom(abi: abi)
            case "AppInstance": return makeAppInstanceFrom(abi: abi)
            case "EnteredBackgroundEventArgs": return makeEnteredBackgroundEventArgsFrom(abi: abi)
            case "LeavingBackgroundEventArgs": return makeLeavingBackgroundEventArgsFrom(abi: abi)
            case "LimitedAccessFeatureRequestResult": return makeLimitedAccessFeatureRequestResultFrom(abi: abi)
            case "Package": return makePackageFrom(abi: abi)
            case "PackageCatalog": return makePackageCatalogFrom(abi: abi)
            case "PackageCatalogAddOptionalPackageResult": return makePackageCatalogAddOptionalPackageResultFrom(abi: abi)
            case "PackageCatalogAddResourcePackageResult": return makePackageCatalogAddResourcePackageResultFrom(abi: abi)
            case "PackageCatalogRemoveOptionalPackagesResult": return makePackageCatalogRemoveOptionalPackagesResultFrom(abi: abi)
            case "PackageCatalogRemoveResourcePackagesResult": return makePackageCatalogRemoveResourcePackagesResultFrom(abi: abi)
            case "PackageContentGroup": return makePackageContentGroupFrom(abi: abi)
            case "PackageContentGroupStagingEventArgs": return makePackageContentGroupStagingEventArgsFrom(abi: abi)
            case "PackageId": return makePackageIdFrom(abi: abi)
            case "PackageInstallingEventArgs": return makePackageInstallingEventArgsFrom(abi: abi)
            case "PackageStagingEventArgs": return makePackageStagingEventArgsFrom(abi: abi)
            case "PackageStatus": return makePackageStatusFrom(abi: abi)
            case "PackageStatusChangedEventArgs": return makePackageStatusChangedEventArgsFrom(abi: abi)
            case "PackageUninstallingEventArgs": return makePackageUninstallingEventArgsFrom(abi: abi)
            case "PackageUpdateAvailabilityResult": return makePackageUpdateAvailabilityResultFrom(abi: abi)
            case "PackageUpdatingEventArgs": return makePackageUpdatingEventArgsFrom(abi: abi)
            case "StartupTask": return makeStartupTaskFrom(abi: abi)
            case "SuspendingDeferral": return makeSuspendingDeferralFrom(abi: abi)
            case "SuspendingEventArgs": return makeSuspendingEventArgsFrom(abi: abi)
            case "SuspendingOperation": return makeSuspendingOperationFrom(abi: abi)
            case "AppointmentsProviderAddAppointmentActivatedEventArgs": return makeAppointmentsProviderAddAppointmentActivatedEventArgsFrom(abi: abi)
            case "AppointmentsProviderRemoveAppointmentActivatedEventArgs": return makeAppointmentsProviderRemoveAppointmentActivatedEventArgsFrom(abi: abi)
            case "AppointmentsProviderReplaceAppointmentActivatedEventArgs": return makeAppointmentsProviderReplaceAppointmentActivatedEventArgsFrom(abi: abi)
            case "AppointmentsProviderShowAppointmentDetailsActivatedEventArgs": return makeAppointmentsProviderShowAppointmentDetailsActivatedEventArgsFrom(abi: abi)
            case "AppointmentsProviderShowTimeFrameActivatedEventArgs": return makeAppointmentsProviderShowTimeFrameActivatedEventArgsFrom(abi: abi)
            case "BackgroundActivatedEventArgs": return makeBackgroundActivatedEventArgsFrom(abi: abi)
            case "BarcodeScannerPreviewActivatedEventArgs": return makeBarcodeScannerPreviewActivatedEventArgsFrom(abi: abi)
            case "CachedFileUpdaterActivatedEventArgs": return makeCachedFileUpdaterActivatedEventArgsFrom(abi: abi)
            case "CameraSettingsActivatedEventArgs": return makeCameraSettingsActivatedEventArgsFrom(abi: abi)
            case "CommandLineActivatedEventArgs": return makeCommandLineActivatedEventArgsFrom(abi: abi)
            case "CommandLineActivationOperation": return makeCommandLineActivationOperationFrom(abi: abi)
            case "ContactCallActivatedEventArgs": return makeContactCallActivatedEventArgsFrom(abi: abi)
            case "ContactMapActivatedEventArgs": return makeContactMapActivatedEventArgsFrom(abi: abi)
            case "ContactMessageActivatedEventArgs": return makeContactMessageActivatedEventArgsFrom(abi: abi)
            case "ContactPanelActivatedEventArgs": return makeContactPanelActivatedEventArgsFrom(abi: abi)
            case "ContactPickerActivatedEventArgs": return makeContactPickerActivatedEventArgsFrom(abi: abi)
            case "ContactPostActivatedEventArgs": return makeContactPostActivatedEventArgsFrom(abi: abi)
            case "ContactVideoCallActivatedEventArgs": return makeContactVideoCallActivatedEventArgsFrom(abi: abi)
            case "DeviceActivatedEventArgs": return makeDeviceActivatedEventArgsFrom(abi: abi)
            case "DevicePairingActivatedEventArgs": return makeDevicePairingActivatedEventArgsFrom(abi: abi)
            case "DialReceiverActivatedEventArgs": return makeDialReceiverActivatedEventArgsFrom(abi: abi)
            case "FileActivatedEventArgs": return makeFileActivatedEventArgsFrom(abi: abi)
            case "FileOpenPickerActivatedEventArgs": return makeFileOpenPickerActivatedEventArgsFrom(abi: abi)
            case "FileOpenPickerContinuationEventArgs": return makeFileOpenPickerContinuationEventArgsFrom(abi: abi)
            case "FileSavePickerActivatedEventArgs": return makeFileSavePickerActivatedEventArgsFrom(abi: abi)
            case "FileSavePickerContinuationEventArgs": return makeFileSavePickerContinuationEventArgsFrom(abi: abi)
            case "FolderPickerContinuationEventArgs": return makeFolderPickerContinuationEventArgsFrom(abi: abi)
            case "LaunchActivatedEventArgs": return makeLaunchActivatedEventArgsFrom(abi: abi)
            case "LockScreenActivatedEventArgs": return makeLockScreenActivatedEventArgsFrom(abi: abi)
            case "LockScreenCallActivatedEventArgs": return makeLockScreenCallActivatedEventArgsFrom(abi: abi)
            case "LockScreenComponentActivatedEventArgs": return makeLockScreenComponentActivatedEventArgsFrom(abi: abi)
            case "PickerReturnedActivatedEventArgs": return makePickerReturnedActivatedEventArgsFrom(abi: abi)
            case "Print3DWorkflowActivatedEventArgs": return makePrint3DWorkflowActivatedEventArgsFrom(abi: abi)
            case "PrintTaskSettingsActivatedEventArgs": return makePrintTaskSettingsActivatedEventArgsFrom(abi: abi)
            case "ProtocolActivatedEventArgs": return makeProtocolActivatedEventArgsFrom(abi: abi)
            case "ProtocolForResultsActivatedEventArgs": return makeProtocolForResultsActivatedEventArgsFrom(abi: abi)
            case "RestrictedLaunchActivatedEventArgs": return makeRestrictedLaunchActivatedEventArgsFrom(abi: abi)
            case "SearchActivatedEventArgs": return makeSearchActivatedEventArgsFrom(abi: abi)
            case "ShareTargetActivatedEventArgs": return makeShareTargetActivatedEventArgsFrom(abi: abi)
            case "SplashScreen": return makeSplashScreenFrom(abi: abi)
            case "StartupTaskActivatedEventArgs": return makeStartupTaskActivatedEventArgsFrom(abi: abi)
            case "TileActivatedInfo": return makeTileActivatedInfoFrom(abi: abi)
            case "ToastNotificationActivatedEventArgs": return makeToastNotificationActivatedEventArgsFrom(abi: abi)
            case "UserDataAccountProviderActivatedEventArgs": return makeUserDataAccountProviderActivatedEventArgsFrom(abi: abi)
            case "VoiceCommandActivatedEventArgs": return makeVoiceCommandActivatedEventArgsFrom(abi: abi)
            case "WalletActionActivatedEventArgs": return makeWalletActionActivatedEventArgsFrom(abi: abi)
            case "WebAccountProviderActivatedEventArgs": return makeWebAccountProviderActivatedEventArgsFrom(abi: abi)
            case "WebAuthenticationBrokerContinuationEventArgs": return makeWebAuthenticationBrokerContinuationEventArgsFrom(abi: abi)
            case "AppServiceClosedEventArgs": return makeAppServiceClosedEventArgsFrom(abi: abi)
            case "AppServiceConnection": return makeAppServiceConnectionFrom(abi: abi)
            case "AppServiceDeferral": return makeAppServiceDeferralFrom(abi: abi)
            case "AppServiceRequest": return makeAppServiceRequestFrom(abi: abi)
            case "AppServiceRequestReceivedEventArgs": return makeAppServiceRequestReceivedEventArgsFrom(abi: abi)
            case "AppServiceResponse": return makeAppServiceResponseFrom(abi: abi)
            case "StatelessAppServiceResponse": return makeStatelessAppServiceResponseFrom(abi: abi)
            case "Appointment": return makeAppointmentFrom(abi: abi)
            case "AppointmentInvitee": return makeAppointmentInviteeFrom(abi: abi)
            case "AppointmentOrganizer": return makeAppointmentOrganizerFrom(abi: abi)
            case "AppointmentRecurrence": return makeAppointmentRecurrenceFrom(abi: abi)
            case "AddAppointmentOperation": return makeAddAppointmentOperationFrom(abi: abi)
            case "RemoveAppointmentOperation": return makeRemoveAppointmentOperationFrom(abi: abi)
            case "ReplaceAppointmentOperation": return makeReplaceAppointmentOperationFrom(abi: abi)
            case "BackgroundTaskCompletedEventArgs": return makeBackgroundTaskCompletedEventArgsFrom(abi: abi)
            case "BackgroundTaskDeferral": return makeBackgroundTaskDeferralFrom(abi: abi)
            case "BackgroundTaskProgressEventArgs": return makeBackgroundTaskProgressEventArgsFrom(abi: abi)
            case "BackgroundTaskRegistration": return makeBackgroundTaskRegistrationFrom(abi: abi)
            case "BackgroundTaskRegistrationGroup": return makeBackgroundTaskRegistrationGroupFrom(abi: abi)
            case "DeviceWatcherTrigger": return makeDeviceWatcherTriggerFrom(abi: abi)
            case "LockScreenCallEndCallDeferral": return makeLockScreenCallEndCallDeferralFrom(abi: abi)
            case "LockScreenCallEndRequestedEventArgs": return makeLockScreenCallEndRequestedEventArgsFrom(abi: abi)
            case "LockScreenCallUI": return makeLockScreenCallUIFrom(abi: abi)
            case "Contact": return makeContactFrom(abi: abi)
            case "ContactAddress": return makeContactAddressFrom(abi: abi)
            case "ContactConnectedServiceAccount": return makeContactConnectedServiceAccountFrom(abi: abi)
            case "ContactDate": return makeContactDateFrom(abi: abi)
            case "ContactEmail": return makeContactEmailFrom(abi: abi)
            case "ContactJobInfo": return makeContactJobInfoFrom(abi: abi)
            case "ContactPanel": return makeContactPanelFrom(abi: abi)
            case "ContactPanelClosingEventArgs": return makeContactPanelClosingEventArgsFrom(abi: abi)
            case "ContactPanelLaunchFullAppRequestedEventArgs": return makeContactPanelLaunchFullAppRequestedEventArgsFrom(abi: abi)
            case "ContactPhone": return makeContactPhoneFrom(abi: abi)
            case "ContactSignificantOther": return makeContactSignificantOtherFrom(abi: abi)
            case "ContactWebsite": return makeContactWebsiteFrom(abi: abi)
            case "ContactPickerUI": return makeContactPickerUIFrom(abi: abi)
            case "ContactRemovedEventArgs": return makeContactRemovedEventArgsFrom(abi: abi)
            case "AppListEntry": return makeAppListEntryFrom(abi: abi)
            case "CoreApplicationView": return makeCoreApplicationViewFrom(abi: abi)
            case "CoreApplicationViewTitleBar": return makeCoreApplicationViewTitleBarFrom(abi: abi)
            case "HostedViewClosingEventArgs": return makeHostedViewClosingEventArgsFrom(abi: abi)
            case "UnhandledError": return makeUnhandledErrorFrom(abi: abi)
            case "UnhandledErrorDetectedEventArgs": return makeUnhandledErrorDetectedEventArgsFrom(abi: abi)
            case "ClipboardContentOptions": return makeClipboardContentOptionsFrom(abi: abi)
            case "ClipboardHistoryChangedEventArgs": return makeClipboardHistoryChangedEventArgsFrom(abi: abi)
            case "ClipboardHistoryItem": return makeClipboardHistoryItemFrom(abi: abi)
            case "ClipboardHistoryItemsResult": return makeClipboardHistoryItemsResultFrom(abi: abi)
            case "DataPackage": return makeDataPackageFrom(abi: abi)
            case "DataPackagePropertySet": return makeDataPackagePropertySetFrom(abi: abi)
            case "DataPackagePropertySetView": return makeDataPackagePropertySetViewFrom(abi: abi)
            case "DataPackageView": return makeDataPackageViewFrom(abi: abi)
            case "DataProviderDeferral": return makeDataProviderDeferralFrom(abi: abi)
            case "DataProviderRequest": return makeDataProviderRequestFrom(abi: abi)
            case "DataRequest": return makeDataRequestFrom(abi: abi)
            case "DataRequestDeferral": return makeDataRequestDeferralFrom(abi: abi)
            case "DataRequestedEventArgs": return makeDataRequestedEventArgsFrom(abi: abi)
            case "DataTransferManager": return makeDataTransferManagerFrom(abi: abi)
            case "OperationCompletedEventArgs": return makeOperationCompletedEventArgsFrom(abi: abi)
            case "ShareCompletedEventArgs": return makeShareCompletedEventArgsFrom(abi: abi)
            case "ShareProvider": return makeShareProviderFrom(abi: abi)
            case "ShareProviderOperation": return makeShareProviderOperationFrom(abi: abi)
            case "ShareProvidersRequestedEventArgs": return makeShareProvidersRequestedEventArgsFrom(abi: abi)
            case "ShareTargetInfo": return makeShareTargetInfoFrom(abi: abi)
            case "ShareUIOptions": return makeShareUIOptionsFrom(abi: abi)
            case "TargetApplicationChosenEventArgs": return makeTargetApplicationChosenEventArgsFrom(abi: abi)
            case "CoreDragInfo": return makeCoreDragInfoFrom(abi: abi)
            case "CoreDragUIOverride": return makeCoreDragUIOverrideFrom(abi: abi)
            case "QuickLink": return makeQuickLinkFrom(abi: abi)
            case "ShareOperation": return makeShareOperationFrom(abi: abi)
            case "SearchPaneQueryLinguisticDetails": return makeSearchPaneQueryLinguisticDetailsFrom(abi: abi)
            case "JsonArray": return makeJsonArrayFrom(abi: abi)
            case "JsonObject": return makeJsonObjectFrom(abi: abi)
            case "JsonValue": return makeJsonValueFrom(abi: abi)
            case "XmlAttribute": return makeXmlAttributeFrom(abi: abi)
            case "XmlCDataSection": return makeXmlCDataSectionFrom(abi: abi)
            case "XmlComment": return makeXmlCommentFrom(abi: abi)
            case "XmlDocument": return makeXmlDocumentFrom(abi: abi)
            case "XmlDocumentFragment": return makeXmlDocumentFragmentFrom(abi: abi)
            case "XmlDocumentType": return makeXmlDocumentTypeFrom(abi: abi)
            case "XmlDomImplementation": return makeXmlDomImplementationFrom(abi: abi)
            case "XmlElement": return makeXmlElementFrom(abi: abi)
            case "XmlEntityReference": return makeXmlEntityReferenceFrom(abi: abi)
            case "XmlLoadSettings": return makeXmlLoadSettingsFrom(abi: abi)
            case "XmlNamedNodeMap": return makeXmlNamedNodeMapFrom(abi: abi)
            case "XmlNodeList": return makeXmlNodeListFrom(abi: abi)
            case "XmlProcessingInstruction": return makeXmlProcessingInstructionFrom(abi: abi)
            case "XmlText": return makeXmlTextFrom(abi: abi)
            case "DeviceInformation": return makeDeviceInformationFrom(abi: abi)
            case "DeviceInformationCollection": return makeDeviceInformationCollectionFrom(abi: abi)
            case "DeviceInformationCustomPairing": return makeDeviceInformationCustomPairingFrom(abi: abi)
            case "DeviceInformationPairing": return makeDeviceInformationPairingFrom(abi: abi)
            case "DeviceInformationUpdate": return makeDeviceInformationUpdateFrom(abi: abi)
            case "DevicePairingRequestedEventArgs": return makeDevicePairingRequestedEventArgsFrom(abi: abi)
            case "DevicePairingResult": return makeDevicePairingResultFrom(abi: abi)
            case "DevicePickerAppearance": return makeDevicePickerAppearanceFrom(abi: abi)
            case "DeviceThumbnail": return makeDeviceThumbnailFrom(abi: abi)
            case "DeviceUnpairingResult": return makeDeviceUnpairingResultFrom(abi: abi)
            case "DeviceWatcher": return makeDeviceWatcherFrom(abi: abi)
            case "EnclosureLocation": return makeEnclosureLocationFrom(abi: abi)
            case "Geopoint": return makeGeopointFrom(abi: abi)
            case "KeyboardCapabilities": return makeKeyboardCapabilitiesFrom(abi: abi)
            case "MouseCapabilities": return makeMouseCapabilitiesFrom(abi: abi)
            case "MouseDevice": return makeMouseDeviceFrom(abi: abi)
            case "MouseEventArgs": return makeMouseEventArgsFrom(abi: abi)
            case "PenDevice": return makePenDeviceFrom(abi: abi)
            case "PointerDevice": return makePointerDeviceFrom(abi: abi)
            case "TouchCapabilities": return makeTouchCapabilitiesFrom(abi: abi)
            case "Print3DWorkflow": return makePrint3DWorkflowFrom(abi: abi)
            case "Print3DWorkflowPrintRequestedEventArgs": return makePrint3DWorkflowPrintRequestedEventArgsFrom(abi: abi)
            case "Print3DWorkflowPrinterChangedEventArgs": return makePrint3DWorkflowPrinterChangedEventArgsFrom(abi: abi)
            case "PrintTaskConfiguration": return makePrintTaskConfigurationFrom(abi: abi)
            case "PrintTaskConfigurationSaveRequest": return makePrintTaskConfigurationSaveRequestFrom(abi: abi)
            case "PrintTaskConfigurationSaveRequestedDeferral": return makePrintTaskConfigurationSaveRequestedDeferralFrom(abi: abi)
            case "PrintTaskConfigurationSaveRequestedEventArgs": return makePrintTaskConfigurationSaveRequestedEventArgsFrom(abi: abi)
            case "Language": return makeLanguageFrom(abi: abi)
            case "BitmapBuffer": return makeBitmapBufferFrom(abi: abi)
            case "BitmapCodecInformation": return makeBitmapCodecInformationFrom(abi: abi)
            case "BitmapDecoder": return makeBitmapDecoderFrom(abi: abi)
            case "BitmapEncoder": return makeBitmapEncoderFrom(abi: abi)
            case "BitmapFrame": return makeBitmapFrameFrom(abi: abi)
            case "BitmapProperties": return makeBitmapPropertiesFrom(abi: abi)
            case "BitmapPropertiesView": return makeBitmapPropertiesViewFrom(abi: abi)
            case "BitmapPropertySet": return makeBitmapPropertySetFrom(abi: abi)
            case "BitmapTransform": return makeBitmapTransformFrom(abi: abi)
            case "BitmapTypedValue": return makeBitmapTypedValueFrom(abi: abi)
            case "ImageStream": return makeImageStreamFrom(abi: abi)
            case "PixelDataProvider": return makePixelDataProviderFrom(abi: abi)
            case "SoftwareBitmap": return makeSoftwareBitmapFrom(abi: abi)
            case "PrintPageInfo": return makePrintPageInfoFrom(abi: abi)
            case "PrintPageRange": return makePrintPageRangeFrom(abi: abi)
            case "PrintPageRangeOptions": return makePrintPageRangeOptionsFrom(abi: abi)
            case "PrintTaskOptions": return makePrintTaskOptionsFrom(abi: abi)
            case "DeploymentResult": return makeDeploymentResultFrom(abi: abi)
            case "PackageManager": return makePackageManagerFrom(abi: abi)
            case "PackageManagerDebugSettings": return makePackageManagerDebugSettingsFrom(abi: abi)
            case "PackageUserInformation": return makePackageUserInformationFrom(abi: abi)
            case "PackageVolume": return makePackageVolumeFrom(abi: abi)
            case "AudioBuffer": return makeAudioBufferFrom(abi: abi)
            case "AudioFrame": return makeAudioFrameFrom(abi: abi)
            case "AutoRepeatModeChangeRequestedEventArgs": return makeAutoRepeatModeChangeRequestedEventArgsFrom(abi: abi)
            case "ImageDisplayProperties": return makeImageDisplayPropertiesFrom(abi: abi)
            case "MediaTimelineController": return makeMediaTimelineControllerFrom(abi: abi)
            case "MediaTimelineControllerFailedEventArgs": return makeMediaTimelineControllerFailedEventArgsFrom(abi: abi)
            case "MusicDisplayProperties": return makeMusicDisplayPropertiesFrom(abi: abi)
            case "PlaybackPositionChangeRequestedEventArgs": return makePlaybackPositionChangeRequestedEventArgsFrom(abi: abi)
            case "PlaybackRateChangeRequestedEventArgs": return makePlaybackRateChangeRequestedEventArgsFrom(abi: abi)
            case "ShuffleEnabledChangeRequestedEventArgs": return makeShuffleEnabledChangeRequestedEventArgsFrom(abi: abi)
            case "SystemMediaTransportControls": return makeSystemMediaTransportControlsFrom(abi: abi)
            case "SystemMediaTransportControlsButtonPressedEventArgs": return makeSystemMediaTransportControlsButtonPressedEventArgsFrom(abi: abi)
            case "SystemMediaTransportControlsDisplayUpdater": return makeSystemMediaTransportControlsDisplayUpdaterFrom(abi: abi)
            case "SystemMediaTransportControlsPropertyChangedEventArgs": return makeSystemMediaTransportControlsPropertyChangedEventArgsFrom(abi: abi)
            case "SystemMediaTransportControlsTimelineProperties": return makeSystemMediaTransportControlsTimelinePropertiesFrom(abi: abi)
            case "VideoDisplayProperties": return makeVideoDisplayPropertiesFrom(abi: abi)
            case "AudioDeviceInputNode": return makeAudioDeviceInputNodeFrom(abi: abi)
            case "AudioDeviceOutputNode": return makeAudioDeviceOutputNodeFrom(abi: abi)
            case "AudioFileInputNode": return makeAudioFileInputNodeFrom(abi: abi)
            case "AudioFileOutputNode": return makeAudioFileOutputNodeFrom(abi: abi)
            case "AudioFrameCompletedEventArgs": return makeAudioFrameCompletedEventArgsFrom(abi: abi)
            case "AudioFrameInputNode": return makeAudioFrameInputNodeFrom(abi: abi)
            case "AudioFrameOutputNode": return makeAudioFrameOutputNodeFrom(abi: abi)
            case "AudioGraph": return makeAudioGraphFrom(abi: abi)
            case "AudioGraphBatchUpdater": return makeAudioGraphBatchUpdaterFrom(abi: abi)
            case "AudioGraphConnection": return makeAudioGraphConnectionFrom(abi: abi)
            case "AudioGraphSettings": return makeAudioGraphSettingsFrom(abi: abi)
            case "AudioGraphUnrecoverableErrorOccurredEventArgs": return makeAudioGraphUnrecoverableErrorOccurredEventArgsFrom(abi: abi)
            case "AudioNodeEmitter": return makeAudioNodeEmitterFrom(abi: abi)
            case "AudioNodeEmitterConeProperties": return makeAudioNodeEmitterConePropertiesFrom(abi: abi)
            case "AudioNodeEmitterDecayModel": return makeAudioNodeEmitterDecayModelFrom(abi: abi)
            case "AudioNodeEmitterNaturalDecayModelProperties": return makeAudioNodeEmitterNaturalDecayModelPropertiesFrom(abi: abi)
            case "AudioNodeEmitterShape": return makeAudioNodeEmitterShapeFrom(abi: abi)
            case "AudioNodeListener": return makeAudioNodeListenerFrom(abi: abi)
            case "AudioStateMonitor": return makeAudioStateMonitorFrom(abi: abi)
            case "AudioSubmixNode": return makeAudioSubmixNodeFrom(abi: abi)
            case "CreateAudioDeviceInputNodeResult": return makeCreateAudioDeviceInputNodeResultFrom(abi: abi)
            case "CreateAudioDeviceOutputNodeResult": return makeCreateAudioDeviceOutputNodeResultFrom(abi: abi)
            case "CreateAudioFileInputNodeResult": return makeCreateAudioFileInputNodeResultFrom(abi: abi)
            case "CreateAudioFileOutputNodeResult": return makeCreateAudioFileOutputNodeResultFrom(abi: abi)
            case "CreateAudioGraphResult": return makeCreateAudioGraphResultFrom(abi: abi)
            case "CreateMediaSourceAudioInputNodeResult": return makeCreateMediaSourceAudioInputNodeResultFrom(abi: abi)
            case "EchoEffectDefinition": return makeEchoEffectDefinitionFrom(abi: abi)
            case "EqualizerBand": return makeEqualizerBandFrom(abi: abi)
            case "EqualizerEffectDefinition": return makeEqualizerEffectDefinitionFrom(abi: abi)
            case "FrameInputNodeQuantumStartedEventArgs": return makeFrameInputNodeQuantumStartedEventArgsFrom(abi: abi)
            case "LimiterEffectDefinition": return makeLimiterEffectDefinitionFrom(abi: abi)
            case "MediaSourceAudioInputNode": return makeMediaSourceAudioInputNodeFrom(abi: abi)
            case "ReverbEffectDefinition": return makeReverbEffectDefinitionFrom(abi: abi)
            case "SetDefaultSpatialAudioFormatResult": return makeSetDefaultSpatialAudioFormatResultFrom(abi: abi)
            case "SpatialAudioDeviceConfiguration": return makeSpatialAudioDeviceConfigurationFrom(abi: abi)
            case "SpatialAudioFormatConfiguration": return makeSpatialAudioFormatConfigurationFrom(abi: abi)
            case "CapturedFrameControlValues": return makeCapturedFrameControlValuesFrom(abi: abi)
            case "MediaCaptureVideoProfileMediaDescription": return makeMediaCaptureVideoProfileMediaDescriptionFrom(abi: abi)
            case "VideoStreamConfiguration": return makeVideoStreamConfigurationFrom(abi: abi)
            case "DepthMediaFrameFormat": return makeDepthMediaFrameFormatFrom(abi: abi)
            case "MediaFrameFormat": return makeMediaFrameFormatFrom(abi: abi)
            case "MediaFrameSource": return makeMediaFrameSourceFrom(abi: abi)
            case "MediaFrameSourceController": return makeMediaFrameSourceControllerFrom(abi: abi)
            case "MediaFrameSourceGetPropertyResult": return makeMediaFrameSourceGetPropertyResultFrom(abi: abi)
            case "MediaFrameSourceGroup": return makeMediaFrameSourceGroupFrom(abi: abi)
            case "MediaFrameSourceInfo": return makeMediaFrameSourceInfoFrom(abi: abi)
            case "VideoMediaFrameFormat": return makeVideoMediaFrameFormatFrom(abi: abi)
            case "CastingConnection": return makeCastingConnectionFrom(abi: abi)
            case "CastingConnectionErrorOccurredEventArgs": return makeCastingConnectionErrorOccurredEventArgsFrom(abi: abi)
            case "CastingDevice": return makeCastingDeviceFrom(abi: abi)
            case "CastingDevicePicker": return makeCastingDevicePickerFrom(abi: abi)
            case "CastingDevicePickerFilter": return makeCastingDevicePickerFilterFrom(abi: abi)
            case "CastingDeviceSelectedEventArgs": return makeCastingDeviceSelectedEventArgsFrom(abi: abi)
            case "CastingSource": return makeCastingSourceFrom(abi: abi)
            case "AudioStreamDescriptor": return makeAudioStreamDescriptorFrom(abi: abi)
            case "AudioTrack": return makeAudioTrackFrom(abi: abi)
            case "AudioTrackOpenFailedEventArgs": return makeAudioTrackOpenFailedEventArgsFrom(abi: abi)
            case "AudioTrackSupportInfo": return makeAudioTrackSupportInfoFrom(abi: abi)
            case "ChapterCue": return makeChapterCueFrom(abi: abi)
            case "CodecInfo": return makeCodecInfoFrom(abi: abi)
            case "CodecQuery": return makeCodecQueryFrom(abi: abi)
            case "DataCue": return makeDataCueFrom(abi: abi)
            case "FaceDetectedEventArgs": return makeFaceDetectedEventArgsFrom(abi: abi)
            case "FaceDetectionEffect": return makeFaceDetectionEffectFrom(abi: abi)
            case "FaceDetectionEffectDefinition": return makeFaceDetectionEffectDefinitionFrom(abi: abi)
            case "FaceDetectionEffectFrame": return makeFaceDetectionEffectFrameFrom(abi: abi)
            case "HighDynamicRangeControl": return makeHighDynamicRangeControlFrom(abi: abi)
            case "HighDynamicRangeOutput": return makeHighDynamicRangeOutputFrom(abi: abi)
            case "ImageCue": return makeImageCueFrom(abi: abi)
            case "InitializeMediaStreamSourceRequestedEventArgs": return makeInitializeMediaStreamSourceRequestedEventArgsFrom(abi: abi)
            case "LowLightFusionResult": return makeLowLightFusionResultFrom(abi: abi)
            case "MediaBinder": return makeMediaBinderFrom(abi: abi)
            case "MediaBindingEventArgs": return makeMediaBindingEventArgsFrom(abi: abi)
            case "MediaCueEventArgs": return makeMediaCueEventArgsFrom(abi: abi)
            case "MediaSource": return makeMediaSourceFrom(abi: abi)
            case "MediaSourceAppServiceConnection": return makeMediaSourceAppServiceConnectionFrom(abi: abi)
            case "MediaSourceError": return makeMediaSourceErrorFrom(abi: abi)
            case "MediaSourceOpenOperationCompletedEventArgs": return makeMediaSourceOpenOperationCompletedEventArgsFrom(abi: abi)
            case "MediaSourceStateChangedEventArgs": return makeMediaSourceStateChangedEventArgsFrom(abi: abi)
            case "MediaStreamSample": return makeMediaStreamSampleFrom(abi: abi)
            case "MediaStreamSamplePropertySet": return makeMediaStreamSamplePropertySetFrom(abi: abi)
            case "MediaStreamSampleProtectionProperties": return makeMediaStreamSampleProtectionPropertiesFrom(abi: abi)
            case "MediaStreamSource": return makeMediaStreamSourceFrom(abi: abi)
            case "MediaStreamSourceClosedEventArgs": return makeMediaStreamSourceClosedEventArgsFrom(abi: abi)
            case "MediaStreamSourceClosedRequest": return makeMediaStreamSourceClosedRequestFrom(abi: abi)
            case "MediaStreamSourceSampleRenderedEventArgs": return makeMediaStreamSourceSampleRenderedEventArgsFrom(abi: abi)
            case "MediaStreamSourceSampleRequest": return makeMediaStreamSourceSampleRequestFrom(abi: abi)
            case "MediaStreamSourceSampleRequestDeferral": return makeMediaStreamSourceSampleRequestDeferralFrom(abi: abi)
            case "MediaStreamSourceSampleRequestedEventArgs": return makeMediaStreamSourceSampleRequestedEventArgsFrom(abi: abi)
            case "MediaStreamSourceStartingEventArgs": return makeMediaStreamSourceStartingEventArgsFrom(abi: abi)
            case "MediaStreamSourceStartingRequest": return makeMediaStreamSourceStartingRequestFrom(abi: abi)
            case "MediaStreamSourceStartingRequestDeferral": return makeMediaStreamSourceStartingRequestDeferralFrom(abi: abi)
            case "MediaStreamSourceSwitchStreamsRequest": return makeMediaStreamSourceSwitchStreamsRequestFrom(abi: abi)
            case "MediaStreamSourceSwitchStreamsRequestDeferral": return makeMediaStreamSourceSwitchStreamsRequestDeferralFrom(abi: abi)
            case "MediaStreamSourceSwitchStreamsRequestedEventArgs": return makeMediaStreamSourceSwitchStreamsRequestedEventArgsFrom(abi: abi)
            case "MseSourceBuffer": return makeMseSourceBufferFrom(abi: abi)
            case "MseSourceBufferList": return makeMseSourceBufferListFrom(abi: abi)
            case "MseStreamSource": return makeMseStreamSourceFrom(abi: abi)
            case "SceneAnalysisEffect": return makeSceneAnalysisEffectFrom(abi: abi)
            case "SceneAnalysisEffectDefinition": return makeSceneAnalysisEffectDefinitionFrom(abi: abi)
            case "SceneAnalysisEffectFrame": return makeSceneAnalysisEffectFrameFrom(abi: abi)
            case "SceneAnalyzedEventArgs": return makeSceneAnalyzedEventArgsFrom(abi: abi)
            case "SpeechCue": return makeSpeechCueFrom(abi: abi)
            case "TimedMetadataStreamDescriptor": return makeTimedMetadataStreamDescriptorFrom(abi: abi)
            case "TimedMetadataTrack": return makeTimedMetadataTrackFrom(abi: abi)
            case "TimedMetadataTrackError": return makeTimedMetadataTrackErrorFrom(abi: abi)
            case "TimedMetadataTrackFailedEventArgs": return makeTimedMetadataTrackFailedEventArgsFrom(abi: abi)
            case "TimedTextCue": return makeTimedTextCueFrom(abi: abi)
            case "TimedTextLine": return makeTimedTextLineFrom(abi: abi)
            case "TimedTextRegion": return makeTimedTextRegionFrom(abi: abi)
            case "TimedTextSource": return makeTimedTextSourceFrom(abi: abi)
            case "TimedTextSourceResolveResultEventArgs": return makeTimedTextSourceResolveResultEventArgsFrom(abi: abi)
            case "TimedTextStyle": return makeTimedTextStyleFrom(abi: abi)
            case "TimedTextSubformat": return makeTimedTextSubformatFrom(abi: abi)
            case "VideoStabilizationEffect": return makeVideoStabilizationEffectFrom(abi: abi)
            case "VideoStabilizationEffectDefinition": return makeVideoStabilizationEffectDefinitionFrom(abi: abi)
            case "VideoStabilizationEffectEnabledChangedEventArgs": return makeVideoStabilizationEffectEnabledChangedEventArgsFrom(abi: abi)
            case "VideoStreamDescriptor": return makeVideoStreamDescriptorFrom(abi: abi)
            case "VideoTrack": return makeVideoTrackFrom(abi: abi)
            case "VideoTrackOpenFailedEventArgs": return makeVideoTrackOpenFailedEventArgsFrom(abi: abi)
            case "VideoTrackSupportInfo": return makeVideoTrackSupportInfoFrom(abi: abi)
            case "AdvancedPhotoCaptureSettings": return makeAdvancedPhotoCaptureSettingsFrom(abi: abi)
            case "AdvancedPhotoControl": return makeAdvancedPhotoControlFrom(abi: abi)
            case "AudioDeviceController": return makeAudioDeviceControllerFrom(abi: abi)
            case "ExposureCompensationControl": return makeExposureCompensationControlFrom(abi: abi)
            case "ExposureControl": return makeExposureControlFrom(abi: abi)
            case "ExposurePriorityVideoControl": return makeExposurePriorityVideoControlFrom(abi: abi)
            case "FlashControl": return makeFlashControlFrom(abi: abi)
            case "FocusControl": return makeFocusControlFrom(abi: abi)
            case "FocusSettings": return makeFocusSettingsFrom(abi: abi)
            case "HdrVideoControl": return makeHdrVideoControlFrom(abi: abi)
            case "InfraredTorchControl": return makeInfraredTorchControlFrom(abi: abi)
            case "IsoSpeedControl": return makeIsoSpeedControlFrom(abi: abi)
            case "LowLagPhotoControl": return makeLowLagPhotoControlFrom(abi: abi)
            case "LowLagPhotoSequenceControl": return makeLowLagPhotoSequenceControlFrom(abi: abi)
            case "MediaDeviceControl": return makeMediaDeviceControlFrom(abi: abi)
            case "MediaDeviceControlCapabilities": return makeMediaDeviceControlCapabilitiesFrom(abi: abi)
            case "OpticalImageStabilizationControl": return makeOpticalImageStabilizationControlFrom(abi: abi)
            case "PhotoConfirmationControl": return makePhotoConfirmationControlFrom(abi: abi)
            case "RegionOfInterest": return makeRegionOfInterestFrom(abi: abi)
            case "RegionsOfInterestControl": return makeRegionsOfInterestControlFrom(abi: abi)
            case "SceneModeControl": return makeSceneModeControlFrom(abi: abi)
            case "TorchControl": return makeTorchControlFrom(abi: abi)
            case "VideoDeviceController": return makeVideoDeviceControllerFrom(abi: abi)
            case "VideoDeviceControllerGetDevicePropertyResult": return makeVideoDeviceControllerGetDevicePropertyResultFrom(abi: abi)
            case "VideoTemporalDenoisingControl": return makeVideoTemporalDenoisingControlFrom(abi: abi)
            case "WhiteBalanceControl": return makeWhiteBalanceControlFrom(abi: abi)
            case "ZoomControl": return makeZoomControlFrom(abi: abi)
            case "ZoomSettings": return makeZoomSettingsFrom(abi: abi)
            case "CameraIntrinsics": return makeCameraIntrinsicsFrom(abi: abi)
            case "FrameControlCapabilities": return makeFrameControlCapabilitiesFrom(abi: abi)
            case "FrameController": return makeFrameControllerFrom(abi: abi)
            case "FrameExposureCapabilities": return makeFrameExposureCapabilitiesFrom(abi: abi)
            case "FrameExposureCompensationCapabilities": return makeFrameExposureCompensationCapabilitiesFrom(abi: abi)
            case "FrameExposureCompensationControl": return makeFrameExposureCompensationControlFrom(abi: abi)
            case "FrameExposureControl": return makeFrameExposureControlFrom(abi: abi)
            case "FrameFlashCapabilities": return makeFrameFlashCapabilitiesFrom(abi: abi)
            case "FrameFlashControl": return makeFrameFlashControlFrom(abi: abi)
            case "FrameFocusCapabilities": return makeFrameFocusCapabilitiesFrom(abi: abi)
            case "FrameFocusControl": return makeFrameFocusControlFrom(abi: abi)
            case "FrameIsoSpeedCapabilities": return makeFrameIsoSpeedCapabilitiesFrom(abi: abi)
            case "FrameIsoSpeedControl": return makeFrameIsoSpeedControlFrom(abi: abi)
            case "VariablePhotoSequenceController": return makeVariablePhotoSequenceControllerFrom(abi: abi)
            case "DetectedFace": return makeDetectedFaceFrom(abi: abi)
            case "AudioEncodingProperties": return makeAudioEncodingPropertiesFrom(abi: abi)
            case "ContainerEncodingProperties": return makeContainerEncodingPropertiesFrom(abi: abi)
            case "MediaEncodingProfile": return makeMediaEncodingProfileFrom(abi: abi)
            case "MediaPropertySet": return makeMediaPropertySetFrom(abi: abi)
            case "MediaRatio": return makeMediaRatioFrom(abi: abi)
            case "TimedMetadataEncodingProperties": return makeTimedMetadataEncodingPropertiesFrom(abi: abi)
            case "VideoEncodingProperties": return makeVideoEncodingPropertiesFrom(abi: abi)
            case "CurrentMediaPlaybackItemChangedEventArgs": return makeCurrentMediaPlaybackItemChangedEventArgsFrom(abi: abi)
            case "MediaBreak": return makeMediaBreakFrom(abi: abi)
            case "MediaBreakEndedEventArgs": return makeMediaBreakEndedEventArgsFrom(abi: abi)
            case "MediaBreakManager": return makeMediaBreakManagerFrom(abi: abi)
            case "MediaBreakSchedule": return makeMediaBreakScheduleFrom(abi: abi)
            case "MediaBreakSeekedOverEventArgs": return makeMediaBreakSeekedOverEventArgsFrom(abi: abi)
            case "MediaBreakSkippedEventArgs": return makeMediaBreakSkippedEventArgsFrom(abi: abi)
            case "MediaBreakStartedEventArgs": return makeMediaBreakStartedEventArgsFrom(abi: abi)
            case "MediaItemDisplayProperties": return makeMediaItemDisplayPropertiesFrom(abi: abi)
            case "MediaPlaybackAudioTrackList": return makeMediaPlaybackAudioTrackListFrom(abi: abi)
            case "MediaPlaybackCommandManager": return makeMediaPlaybackCommandManagerFrom(abi: abi)
            case "MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs": return makeMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerCommandBehavior": return makeMediaPlaybackCommandManagerCommandBehaviorFrom(abi: abi)
            case "MediaPlaybackCommandManagerFastForwardReceivedEventArgs": return makeMediaPlaybackCommandManagerFastForwardReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerNextReceivedEventArgs": return makeMediaPlaybackCommandManagerNextReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerPauseReceivedEventArgs": return makeMediaPlaybackCommandManagerPauseReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerPlayReceivedEventArgs": return makeMediaPlaybackCommandManagerPlayReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerPositionReceivedEventArgs": return makeMediaPlaybackCommandManagerPositionReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerPreviousReceivedEventArgs": return makeMediaPlaybackCommandManagerPreviousReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerRateReceivedEventArgs": return makeMediaPlaybackCommandManagerRateReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerRewindReceivedEventArgs": return makeMediaPlaybackCommandManagerRewindReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackCommandManagerShuffleReceivedEventArgs": return makeMediaPlaybackCommandManagerShuffleReceivedEventArgsFrom(abi: abi)
            case "MediaPlaybackItem": return makeMediaPlaybackItemFrom(abi: abi)
            case "MediaPlaybackItemError": return makeMediaPlaybackItemErrorFrom(abi: abi)
            case "MediaPlaybackItemFailedEventArgs": return makeMediaPlaybackItemFailedEventArgsFrom(abi: abi)
            case "MediaPlaybackItemOpenedEventArgs": return makeMediaPlaybackItemOpenedEventArgsFrom(abi: abi)
            case "MediaPlaybackList": return makeMediaPlaybackListFrom(abi: abi)
            case "MediaPlaybackSession": return makeMediaPlaybackSessionFrom(abi: abi)
            case "MediaPlaybackSessionBufferingStartedEventArgs": return makeMediaPlaybackSessionBufferingStartedEventArgsFrom(abi: abi)
            case "MediaPlaybackSessionOutputDegradationPolicyState": return makeMediaPlaybackSessionOutputDegradationPolicyStateFrom(abi: abi)
            case "MediaPlaybackSphericalVideoProjection": return makeMediaPlaybackSphericalVideoProjectionFrom(abi: abi)
            case "MediaPlaybackTimedMetadataTrackList": return makeMediaPlaybackTimedMetadataTrackListFrom(abi: abi)
            case "MediaPlaybackVideoTrackList": return makeMediaPlaybackVideoTrackListFrom(abi: abi)
            case "MediaPlayer": return makeMediaPlayerFrom(abi: abi)
            case "MediaPlayerDataReceivedEventArgs": return makeMediaPlayerDataReceivedEventArgsFrom(abi: abi)
            case "MediaPlayerFailedEventArgs": return makeMediaPlayerFailedEventArgsFrom(abi: abi)
            case "MediaPlayerRateChangedEventArgs": return makeMediaPlayerRateChangedEventArgsFrom(abi: abi)
            case "MediaPlayerSurface": return makeMediaPlayerSurfaceFrom(abi: abi)
            case "PlaybackMediaMarker": return makePlaybackMediaMarkerFrom(abi: abi)
            case "PlaybackMediaMarkerReachedEventArgs": return makePlaybackMediaMarkerReachedEventArgsFrom(abi: abi)
            case "PlaybackMediaMarkerSequence": return makePlaybackMediaMarkerSequenceFrom(abi: abi)
            case "TimedMetadataPresentationModeChangedEventArgs": return makeTimedMetadataPresentationModeChangedEventArgsFrom(abi: abi)
            case "ComponentLoadFailedEventArgs": return makeComponentLoadFailedEventArgsFrom(abi: abi)
            case "MediaProtectionManager": return makeMediaProtectionManagerFrom(abi: abi)
            case "MediaProtectionServiceCompletion": return makeMediaProtectionServiceCompletionFrom(abi: abi)
            case "RevocationAndRenewalInformation": return makeRevocationAndRenewalInformationFrom(abi: abi)
            case "RevocationAndRenewalItem": return makeRevocationAndRenewalItemFrom(abi: abi)
            case "ServiceRequestedEventArgs": return makeServiceRequestedEventArgsFrom(abi: abi)
            case "SpeechRecognitionResult": return makeSpeechRecognitionResultFrom(abi: abi)
            case "SpeechRecognitionSemanticInterpretation": return makeSpeechRecognitionSemanticInterpretationFrom(abi: abi)
            case "AdaptiveMediaSource": return makeAdaptiveMediaSourceFrom(abi: abi)
            case "AdaptiveMediaSourceAdvancedSettings": return makeAdaptiveMediaSourceAdvancedSettingsFrom(abi: abi)
            case "AdaptiveMediaSourceCorrelatedTimes": return makeAdaptiveMediaSourceCorrelatedTimesFrom(abi: abi)
            case "AdaptiveMediaSourceCreationResult": return makeAdaptiveMediaSourceCreationResultFrom(abi: abi)
            case "AdaptiveMediaSourceDiagnosticAvailableEventArgs": return makeAdaptiveMediaSourceDiagnosticAvailableEventArgsFrom(abi: abi)
            case "AdaptiveMediaSourceDiagnostics": return makeAdaptiveMediaSourceDiagnosticsFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadBitrateChangedEventArgs": return makeAdaptiveMediaSourceDownloadBitrateChangedEventArgsFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadCompletedEventArgs": return makeAdaptiveMediaSourceDownloadCompletedEventArgsFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadFailedEventArgs": return makeAdaptiveMediaSourceDownloadFailedEventArgsFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadRequestedDeferral": return makeAdaptiveMediaSourceDownloadRequestedDeferralFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadRequestedEventArgs": return makeAdaptiveMediaSourceDownloadRequestedEventArgsFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadResult": return makeAdaptiveMediaSourceDownloadResultFrom(abi: abi)
            case "AdaptiveMediaSourceDownloadStatistics": return makeAdaptiveMediaSourceDownloadStatisticsFrom(abi: abi)
            case "AdaptiveMediaSourcePlaybackBitrateChangedEventArgs": return makeAdaptiveMediaSourcePlaybackBitrateChangedEventArgsFrom(abi: abi)
            case "HostName": return makeHostNameFrom(abi: abi)
            case "BackgroundTransferGroup": return makeBackgroundTransferGroupFrom(abi: abi)
            case "BackgroundTransferRangesDownloadedEventArgs": return makeBackgroundTransferRangesDownloadedEventArgsFrom(abi: abi)
            case "DownloadOperation": return makeDownloadOperationFrom(abi: abi)
            case "ResponseInformation": return makeResponseInformationFrom(abi: abi)
            case "AttributedNetworkUsage": return makeAttributedNetworkUsageFrom(abi: abi)
            case "ConnectionCost": return makeConnectionCostFrom(abi: abi)
            case "ConnectionProfile": return makeConnectionProfileFrom(abi: abi)
            case "ConnectivityInterval": return makeConnectivityIntervalFrom(abi: abi)
            case "DataPlanStatus": return makeDataPlanStatusFrom(abi: abi)
            case "DataPlanUsage": return makeDataPlanUsageFrom(abi: abi)
            case "DataUsage": return makeDataUsageFrom(abi: abi)
            case "IPInformation": return makeIPInformationFrom(abi: abi)
            case "NetworkAdapter": return makeNetworkAdapterFrom(abi: abi)
            case "NetworkItem": return makeNetworkItemFrom(abi: abi)
            case "NetworkSecuritySettings": return makeNetworkSecuritySettingsFrom(abi: abi)
            case "NetworkUsage": return makeNetworkUsageFrom(abi: abi)
            case "ProviderNetworkUsage": return makeProviderNetworkUsageFrom(abi: abi)
            case "WlanConnectionProfileDetails": return makeWlanConnectionProfileDetailsFrom(abi: abi)
            case "WwanConnectionProfileDetails": return makeWwanConnectionProfileDetailsFrom(abi: abi)
            case "SpatialCoordinateSystem": return makeSpatialCoordinateSystemFrom(abi: abi)
            case "WebAuthenticationResult": return makeWebAuthenticationResultFrom(abi: abi)
            case "PasswordCredential": return makePasswordCredentialFrom(abi: abi)
            case "Certificate": return makeCertificateFrom(abi: abi)
            case "CertificateChain": return makeCertificateChainFrom(abi: abi)
            case "CertificateExtension": return makeCertificateExtensionFrom(abi: abi)
            case "CertificateKeyUsages": return makeCertificateKeyUsagesFrom(abi: abi)
            case "ChainBuildingParameters": return makeChainBuildingParametersFrom(abi: abi)
            case "ChainValidationParameters": return makeChainValidationParametersFrom(abi: abi)
            case "SubjectAlternativeNameInfo": return makeSubjectAlternativeNameInfoFrom(abi: abi)
            case "StorageFile": return makeStorageFileFrom(abi: abi)
            case "StorageFolder": return makeStorageFolderFrom(abi: abi)
            case "StorageLibraryChange": return makeStorageLibraryChangeFrom(abi: abi)
            case "StorageLibraryChangeReader": return makeStorageLibraryChangeReaderFrom(abi: abi)
            case "StorageLibraryChangeTracker": return makeStorageLibraryChangeTrackerFrom(abi: abi)
            case "StorageProvider": return makeStorageProviderFrom(abi: abi)
            case "StorageStreamTransaction": return makeStorageStreamTransactionFrom(abi: abi)
            case "StreamedFileDataRequest": return makeStreamedFileDataRequestFrom(abi: abi)
            case "BasicProperties": return makeBasicPropertiesFrom(abi: abi)
            case "DocumentProperties": return makeDocumentPropertiesFrom(abi: abi)
            case "ImageProperties": return makeImagePropertiesFrom(abi: abi)
            case "MusicProperties": return makeMusicPropertiesFrom(abi: abi)
            case "StorageItemContentProperties": return makeStorageItemContentPropertiesFrom(abi: abi)
            case "StorageItemThumbnail": return makeStorageItemThumbnailFrom(abi: abi)
            case "VideoProperties": return makeVideoPropertiesFrom(abi: abi)
            case "FileExtensionVector": return makeFileExtensionVectorFrom(abi: abi)
            case "FileOpenPicker": return makeFileOpenPickerFrom(abi: abi)
            case "FilePickerFileTypesOrderedMap": return makeFilePickerFileTypesOrderedMapFrom(abi: abi)
            case "FilePickerSelectedFilesArray": return makeFilePickerSelectedFilesArrayFrom(abi: abi)
            case "FileSavePicker": return makeFileSavePickerFrom(abi: abi)
            case "FolderPicker": return makeFolderPickerFrom(abi: abi)
            case "FileOpenPickerUI": return makeFileOpenPickerUIFrom(abi: abi)
            case "FileRemovedEventArgs": return makeFileRemovedEventArgsFrom(abi: abi)
            case "FileSavePickerUI": return makeFileSavePickerUIFrom(abi: abi)
            case "PickerClosingDeferral": return makePickerClosingDeferralFrom(abi: abi)
            case "PickerClosingEventArgs": return makePickerClosingEventArgsFrom(abi: abi)
            case "PickerClosingOperation": return makePickerClosingOperationFrom(abi: abi)
            case "TargetFileRequest": return makeTargetFileRequestFrom(abi: abi)
            case "TargetFileRequestDeferral": return makeTargetFileRequestDeferralFrom(abi: abi)
            case "TargetFileRequestedEventArgs": return makeTargetFileRequestedEventArgsFrom(abi: abi)
            case "CachedFileUpdaterUI": return makeCachedFileUpdaterUIFrom(abi: abi)
            case "FileUpdateRequest": return makeFileUpdateRequestFrom(abi: abi)
            case "FileUpdateRequestDeferral": return makeFileUpdateRequestDeferralFrom(abi: abi)
            case "FileUpdateRequestedEventArgs": return makeFileUpdateRequestedEventArgsFrom(abi: abi)
            case "QueryOptions": return makeQueryOptionsFrom(abi: abi)
            case "StorageFileQueryResult": return makeStorageFileQueryResultFrom(abi: abi)
            case "StorageFolderQueryResult": return makeStorageFolderQueryResultFrom(abi: abi)
            case "StorageItemQueryResult": return makeStorageItemQueryResultFrom(abi: abi)
            case "Buffer": return makeBufferFrom(abi: abi)
            case "DataReader": return makeDataReaderFrom(abi: abi)
            case "DataReaderLoadOperation": return makeDataReaderLoadOperationFrom(abi: abi)
            case "DataWriter": return makeDataWriterFrom(abi: abi)
            case "DataWriterStoreOperation": return makeDataWriterStoreOperationFrom(abi: abi)
            case "FileInputStream": return makeFileInputStreamFrom(abi: abi)
            case "FileOutputStream": return makeFileOutputStreamFrom(abi: abi)
            case "FileRandomAccessStream": return makeFileRandomAccessStreamFrom(abi: abi)
            case "InMemoryRandomAccessStream": return makeInMemoryRandomAccessStreamFrom(abi: abi)
            case "InputStreamOverStream": return makeInputStreamOverStreamFrom(abi: abi)
            case "OutputStreamOverStream": return makeOutputStreamOverStreamFrom(abi: abi)
            case "RandomAccessStreamOverStream": return makeRandomAccessStreamOverStreamFrom(abi: abi)
            case "RandomAccessStreamReference": return makeRandomAccessStreamReferenceFrom(abi: abi)
            case "AppActivationResult": return makeAppActivationResultFrom(abi: abi)
            case "AppDiagnosticInfo": return makeAppDiagnosticInfoFrom(abi: abi)
            case "AppDiagnosticInfoWatcher": return makeAppDiagnosticInfoWatcherFrom(abi: abi)
            case "AppDiagnosticInfoWatcherEventArgs": return makeAppDiagnosticInfoWatcherEventArgsFrom(abi: abi)
            case "AppExecutionStateChangeResult": return makeAppExecutionStateChangeResultFrom(abi: abi)
            case "AppMemoryReport": return makeAppMemoryReportFrom(abi: abi)
            case "AppMemoryUsageLimitChangingEventArgs": return makeAppMemoryUsageLimitChangingEventArgsFrom(abi: abi)
            case "AppResourceGroupBackgroundTaskReport": return makeAppResourceGroupBackgroundTaskReportFrom(abi: abi)
            case "AppResourceGroupInfo": return makeAppResourceGroupInfoFrom(abi: abi)
            case "AppResourceGroupInfoWatcher": return makeAppResourceGroupInfoWatcherFrom(abi: abi)
            case "AppResourceGroupInfoWatcherEventArgs": return makeAppResourceGroupInfoWatcherEventArgsFrom(abi: abi)
            case "AppResourceGroupInfoWatcherExecutionStateChangedEventArgs": return makeAppResourceGroupInfoWatcherExecutionStateChangedEventArgsFrom(abi: abi)
            case "AppResourceGroupMemoryReport": return makeAppResourceGroupMemoryReportFrom(abi: abi)
            case "AppResourceGroupStateReport": return makeAppResourceGroupStateReportFrom(abi: abi)
            case "AppUriHandlerHost": return makeAppUriHandlerHostFrom(abi: abi)
            case "AppUriHandlerRegistration": return makeAppUriHandlerRegistrationFrom(abi: abi)
            case "AppUriHandlerRegistrationManager": return makeAppUriHandlerRegistrationManagerFrom(abi: abi)
            case "DispatcherQueue": return makeDispatcherQueueFrom(abi: abi)
            case "DispatcherQueueController": return makeDispatcherQueueControllerFrom(abi: abi)
            case "DispatcherQueueShutdownStartingEventArgs": return makeDispatcherQueueShutdownStartingEventArgsFrom(abi: abi)
            case "DispatcherQueueTimer": return makeDispatcherQueueTimerFrom(abi: abi)
            case "FolderLauncherOptions": return makeFolderLauncherOptionsFrom(abi: abi)
            case "LaunchUriResult": return makeLaunchUriResultFrom(abi: abi)
            case "LauncherOptions": return makeLauncherOptionsFrom(abi: abi)
            case "LauncherUIOptions": return makeLauncherUIOptionsFrom(abi: abi)
            case "ProcessLauncherOptions": return makeProcessLauncherOptionsFrom(abi: abi)
            case "ProcessLauncherResult": return makeProcessLauncherResultFrom(abi: abi)
            case "ProcessMemoryReport": return makeProcessMemoryReportFrom(abi: abi)
            case "ProtocolForResultsOperation": return makeProtocolForResultsOperationFrom(abi: abi)
            case "RemoteLauncherOptions": return makeRemoteLauncherOptionsFrom(abi: abi)
            case "User": return makeUserFrom(abi: abi)
            case "UserAuthenticationStatusChangeDeferral": return makeUserAuthenticationStatusChangeDeferralFrom(abi: abi)
            case "UserAuthenticationStatusChangingEventArgs": return makeUserAuthenticationStatusChangingEventArgsFrom(abi: abi)
            case "UserChangedEventArgs": return makeUserChangedEventArgsFrom(abi: abi)
            case "UserDeviceAssociationChangedEventArgs": return makeUserDeviceAssociationChangedEventArgsFrom(abi: abi)
            case "UserPicker": return makeUserPickerFrom(abi: abi)
            case "UserWatcher": return makeUserWatcherFrom(abi: abi)
            case "DiagnosticActionResult": return makeDiagnosticActionResultFrom(abi: abi)
            case "DiagnosticInvoker": return makeDiagnosticInvokerFrom(abi: abi)
            case "ProcessCpuUsage": return makeProcessCpuUsageFrom(abi: abi)
            case "ProcessCpuUsageReport": return makeProcessCpuUsageReportFrom(abi: abi)
            case "ProcessDiagnosticInfo": return makeProcessDiagnosticInfoFrom(abi: abi)
            case "ProcessDiskUsage": return makeProcessDiskUsageFrom(abi: abi)
            case "ProcessDiskUsageReport": return makeProcessDiskUsageReportFrom(abi: abi)
            case "ProcessMemoryUsage": return makeProcessMemoryUsageFrom(abi: abi)
            case "ProcessMemoryUsageReport": return makeProcessMemoryUsageReportFrom(abi: abi)
            case "SystemCpuUsage": return makeSystemCpuUsageFrom(abi: abi)
            case "SystemCpuUsageReport": return makeSystemCpuUsageReportFrom(abi: abi)
            case "SystemDiagnosticInfo": return makeSystemDiagnosticInfoFrom(abi: abi)
            case "SystemMemoryUsage": return makeSystemMemoryUsageFrom(abi: abi)
            case "SystemMemoryUsageReport": return makeSystemMemoryUsageReportFrom(abi: abi)
            case "RemoteSystem": return makeRemoteSystemFrom(abi: abi)
            case "RemoteSystemAddedEventArgs": return makeRemoteSystemAddedEventArgsFrom(abi: abi)
            case "RemoteSystemApp": return makeRemoteSystemAppFrom(abi: abi)
            case "RemoteSystemConnectionRequest": return makeRemoteSystemConnectionRequestFrom(abi: abi)
            case "RemoteSystemEnumerationCompletedEventArgs": return makeRemoteSystemEnumerationCompletedEventArgsFrom(abi: abi)
            case "RemoteSystemRemovedEventArgs": return makeRemoteSystemRemovedEventArgsFrom(abi: abi)
            case "RemoteSystemUpdatedEventArgs": return makeRemoteSystemUpdatedEventArgsFrom(abi: abi)
            case "RemoteSystemWatcher": return makeRemoteSystemWatcherFrom(abi: abi)
            case "RemoteSystemWatcherErrorOccurredEventArgs": return makeRemoteSystemWatcherErrorOccurredEventArgsFrom(abi: abi)
            case "ColorHelper": return makeColorHelperFrom(abi: abi)
            case "Colors": return makeColorsFrom(abi: abi)
            case "UIContentRoot": return makeUIContentRootFrom(abi: abi)
            case "UIContext": return makeUIContextFrom(abi: abi)
            case "AmbientLight": return makeAmbientLightFrom(abi: abi)
            case "AnimationController": return makeAnimationControllerFrom(abi: abi)
            case "AnimationPropertyInfo": return makeAnimationPropertyInfoFrom(abi: abi)
            case "BooleanKeyFrameAnimation": return makeBooleanKeyFrameAnimationFrom(abi: abi)
            case "BounceScalarNaturalMotionAnimation": return makeBounceScalarNaturalMotionAnimationFrom(abi: abi)
            case "BounceVector2NaturalMotionAnimation": return makeBounceVector2NaturalMotionAnimationFrom(abi: abi)
            case "BounceVector3NaturalMotionAnimation": return makeBounceVector3NaturalMotionAnimationFrom(abi: abi)
            case "ColorKeyFrameAnimation": return makeColorKeyFrameAnimationFrom(abi: abi)
            case "CompositionAnimation": return makeCompositionAnimationFrom(abi: abi)
            case "CompositionAnimationGroup": return makeCompositionAnimationGroupFrom(abi: abi)
            case "CompositionBackdropBrush": return makeCompositionBackdropBrushFrom(abi: abi)
            case "CompositionBatchCompletedEventArgs": return makeCompositionBatchCompletedEventArgsFrom(abi: abi)
            case "CompositionBrush": return makeCompositionBrushFrom(abi: abi)
            case "CompositionCapabilities": return makeCompositionCapabilitiesFrom(abi: abi)
            case "CompositionClip": return makeCompositionClipFrom(abi: abi)
            case "CompositionColorBrush": return makeCompositionColorBrushFrom(abi: abi)
            case "CompositionColorGradientStop": return makeCompositionColorGradientStopFrom(abi: abi)
            case "CompositionColorGradientStopCollection": return makeCompositionColorGradientStopCollectionFrom(abi: abi)
            case "CompositionCommitBatch": return makeCompositionCommitBatchFrom(abi: abi)
            case "CompositionContainerShape": return makeCompositionContainerShapeFrom(abi: abi)
            case "CompositionDrawingSurface": return makeCompositionDrawingSurfaceFrom(abi: abi)
            case "CompositionEasingFunction": return makeCompositionEasingFunctionFrom(abi: abi)
            case "CompositionEffectBrush": return makeCompositionEffectBrushFrom(abi: abi)
            case "CompositionEffectFactory": return makeCompositionEffectFactoryFrom(abi: abi)
            case "CompositionEffectSourceParameter": return makeCompositionEffectSourceParameterFrom(abi: abi)
            case "CompositionEllipseGeometry": return makeCompositionEllipseGeometryFrom(abi: abi)
            case "CompositionGeometricClip": return makeCompositionGeometricClipFrom(abi: abi)
            case "CompositionGeometry": return makeCompositionGeometryFrom(abi: abi)
            case "CompositionGradientBrush": return makeCompositionGradientBrushFrom(abi: abi)
            case "CompositionGraphicsDevice": return makeCompositionGraphicsDeviceFrom(abi: abi)
            case "CompositionLight": return makeCompositionLightFrom(abi: abi)
            case "CompositionLineGeometry": return makeCompositionLineGeometryFrom(abi: abi)
            case "CompositionLinearGradientBrush": return makeCompositionLinearGradientBrushFrom(abi: abi)
            case "CompositionMaskBrush": return makeCompositionMaskBrushFrom(abi: abi)
            case "CompositionMipmapSurface": return makeCompositionMipmapSurfaceFrom(abi: abi)
            case "CompositionNineGridBrush": return makeCompositionNineGridBrushFrom(abi: abi)
            case "CompositionObject": return makeCompositionObjectFrom(abi: abi)
            case "CompositionPath": return makeCompositionPathFrom(abi: abi)
            case "CompositionPathGeometry": return makeCompositionPathGeometryFrom(abi: abi)
            case "CompositionProjectedShadow": return makeCompositionProjectedShadowFrom(abi: abi)
            case "CompositionProjectedShadowCaster": return makeCompositionProjectedShadowCasterFrom(abi: abi)
            case "CompositionProjectedShadowCasterCollection": return makeCompositionProjectedShadowCasterCollectionFrom(abi: abi)
            case "CompositionProjectedShadowReceiver": return makeCompositionProjectedShadowReceiverFrom(abi: abi)
            case "CompositionProjectedShadowReceiverUnorderedCollection": return makeCompositionProjectedShadowReceiverUnorderedCollectionFrom(abi: abi)
            case "CompositionPropertySet": return makeCompositionPropertySetFrom(abi: abi)
            case "CompositionRadialGradientBrush": return makeCompositionRadialGradientBrushFrom(abi: abi)
            case "CompositionRectangleGeometry": return makeCompositionRectangleGeometryFrom(abi: abi)
            case "CompositionRoundedRectangleGeometry": return makeCompositionRoundedRectangleGeometryFrom(abi: abi)
            case "CompositionScopedBatch": return makeCompositionScopedBatchFrom(abi: abi)
            case "CompositionShadow": return makeCompositionShadowFrom(abi: abi)
            case "CompositionShape": return makeCompositionShapeFrom(abi: abi)
            case "CompositionShapeCollection": return makeCompositionShapeCollectionFrom(abi: abi)
            case "CompositionSpriteShape": return makeCompositionSpriteShapeFrom(abi: abi)
            case "CompositionStrokeDashArray": return makeCompositionStrokeDashArrayFrom(abi: abi)
            case "CompositionSurfaceBrush": return makeCompositionSurfaceBrushFrom(abi: abi)
            case "CompositionTarget": return makeCompositionTargetFrom(abi: abi)
            case "CompositionTransform": return makeCompositionTransformFrom(abi: abi)
            case "CompositionViewBox": return makeCompositionViewBoxFrom(abi: abi)
            case "CompositionVirtualDrawingSurface": return makeCompositionVirtualDrawingSurfaceFrom(abi: abi)
            case "CompositionVisualSurface": return makeCompositionVisualSurfaceFrom(abi: abi)
            case "Compositor": return makeCompositorFrom(abi: abi)
            case "ContainerVisual": return makeContainerVisualFrom(abi: abi)
            case "CubicBezierEasingFunction": return makeCubicBezierEasingFunctionFrom(abi: abi)
            case "DistantLight": return makeDistantLightFrom(abi: abi)
            case "DropShadow": return makeDropShadowFrom(abi: abi)
            case "ExpressionAnimation": return makeExpressionAnimationFrom(abi: abi)
            case "ImplicitAnimationCollection": return makeImplicitAnimationCollectionFrom(abi: abi)
            case "InitialValueExpressionCollection": return makeInitialValueExpressionCollectionFrom(abi: abi)
            case "InsetClip": return makeInsetClipFrom(abi: abi)
            case "KeyFrameAnimation": return makeKeyFrameAnimationFrom(abi: abi)
            case "LayerVisual": return makeLayerVisualFrom(abi: abi)
            case "LinearEasingFunction": return makeLinearEasingFunctionFrom(abi: abi)
            case "NaturalMotionAnimation": return makeNaturalMotionAnimationFrom(abi: abi)
            case "PathKeyFrameAnimation": return makePathKeyFrameAnimationFrom(abi: abi)
            case "PointLight": return makePointLightFrom(abi: abi)
            case "QuaternionKeyFrameAnimation": return makeQuaternionKeyFrameAnimationFrom(abi: abi)
            case "RedirectVisual": return makeRedirectVisualFrom(abi: abi)
            case "RenderingDeviceReplacedEventArgs": return makeRenderingDeviceReplacedEventArgsFrom(abi: abi)
            case "ScalarKeyFrameAnimation": return makeScalarKeyFrameAnimationFrom(abi: abi)
            case "ScalarNaturalMotionAnimation": return makeScalarNaturalMotionAnimationFrom(abi: abi)
            case "ShapeVisual": return makeShapeVisualFrom(abi: abi)
            case "SpotLight": return makeSpotLightFrom(abi: abi)
            case "SpringScalarNaturalMotionAnimation": return makeSpringScalarNaturalMotionAnimationFrom(abi: abi)
            case "SpringVector2NaturalMotionAnimation": return makeSpringVector2NaturalMotionAnimationFrom(abi: abi)
            case "SpringVector3NaturalMotionAnimation": return makeSpringVector3NaturalMotionAnimationFrom(abi: abi)
            case "SpriteVisual": return makeSpriteVisualFrom(abi: abi)
            case "StepEasingFunction": return makeStepEasingFunctionFrom(abi: abi)
            case "Vector2KeyFrameAnimation": return makeVector2KeyFrameAnimationFrom(abi: abi)
            case "Vector2NaturalMotionAnimation": return makeVector2NaturalMotionAnimationFrom(abi: abi)
            case "Vector3KeyFrameAnimation": return makeVector3KeyFrameAnimationFrom(abi: abi)
            case "Vector3NaturalMotionAnimation": return makeVector3NaturalMotionAnimationFrom(abi: abi)
            case "Vector4KeyFrameAnimation": return makeVector4KeyFrameAnimationFrom(abi: abi)
            case "Visual": return makeVisualFrom(abi: abi)
            case "VisualCollection": return makeVisualCollectionFrom(abi: abi)
            case "VisualUnorderedCollection": return makeVisualUnorderedCollectionFrom(abi: abi)
            case "AcceleratorKeyEventArgs": return makeAcceleratorKeyEventArgsFrom(abi: abi)
            case "AutomationProviderRequestedEventArgs": return makeAutomationProviderRequestedEventArgsFrom(abi: abi)
            case "BackRequestedEventArgs": return makeBackRequestedEventArgsFrom(abi: abi)
            case "CharacterReceivedEventArgs": return makeCharacterReceivedEventArgsFrom(abi: abi)
            case "ClosestInteractiveBoundsRequestedEventArgs": return makeClosestInteractiveBoundsRequestedEventArgsFrom(abi: abi)
            case "CoreAcceleratorKeys": return makeCoreAcceleratorKeysFrom(abi: abi)
            case "CoreComponentInputSource": return makeCoreComponentInputSourceFrom(abi: abi)
            case "CoreCursor": return makeCoreCursorFrom(abi: abi)
            case "CoreDispatcher": return makeCoreDispatcherFrom(abi: abi)
            case "CoreIndependentInputSource": return makeCoreIndependentInputSourceFrom(abi: abi)
            case "CoreWindow": return makeCoreWindowFrom(abi: abi)
            case "CoreWindowDialog": return makeCoreWindowDialogFrom(abi: abi)
            case "CoreWindowEventArgs": return makeCoreWindowEventArgsFrom(abi: abi)
            case "CoreWindowFlyout": return makeCoreWindowFlyoutFrom(abi: abi)
            case "CoreWindowPopupShowingEventArgs": return makeCoreWindowPopupShowingEventArgsFrom(abi: abi)
            case "CoreWindowResizeManager": return makeCoreWindowResizeManagerFrom(abi: abi)
            case "IdleDispatchedHandlerArgs": return makeIdleDispatchedHandlerArgsFrom(abi: abi)
            case "InputEnabledEventArgs": return makeInputEnabledEventArgsFrom(abi: abi)
            case "KeyEventArgs": return makeKeyEventArgsFrom(abi: abi)
            case "PointerEventArgs": return makePointerEventArgsFrom(abi: abi)
            case "SystemNavigationManager": return makeSystemNavigationManagerFrom(abi: abi)
            case "TouchHitTestingEventArgs": return makeTouchHitTestingEventArgsFrom(abi: abi)
            case "VisibilityChangedEventArgs": return makeVisibilityChangedEventArgsFrom(abi: abi)
            case "WindowActivatedEventArgs": return makeWindowActivatedEventArgsFrom(abi: abi)
            case "WindowSizeChangedEventArgs": return makeWindowSizeChangedEventArgsFrom(abi: abi)
            case "PointerPoint": return makePointerPointFrom(abi: abi)
            case "PointerPointProperties": return makePointerPointPropertiesFrom(abi: abi)
            case "AdaptiveNotificationText": return makeAdaptiveNotificationTextFrom(abi: abi)
            case "BadgeNotification": return makeBadgeNotificationFrom(abi: abi)
            case "BadgeUpdateManagerForUser": return makeBadgeUpdateManagerForUserFrom(abi: abi)
            case "BadgeUpdater": return makeBadgeUpdaterFrom(abi: abi)
            case "Notification": return makeNotificationFrom(abi: abi)
            case "NotificationBinding": return makeNotificationBindingFrom(abi: abi)
            case "NotificationData": return makeNotificationDataFrom(abi: abi)
            case "NotificationVisual": return makeNotificationVisualFrom(abi: abi)
            case "ScheduledTileNotification": return makeScheduledTileNotificationFrom(abi: abi)
            case "ScheduledToastNotification": return makeScheduledToastNotificationFrom(abi: abi)
            case "ScheduledToastNotificationShowingEventArgs": return makeScheduledToastNotificationShowingEventArgsFrom(abi: abi)
            case "ShownTileNotification": return makeShownTileNotificationFrom(abi: abi)
            case "TileFlyoutNotification": return makeTileFlyoutNotificationFrom(abi: abi)
            case "TileFlyoutUpdater": return makeTileFlyoutUpdaterFrom(abi: abi)
            case "TileNotification": return makeTileNotificationFrom(abi: abi)
            case "TileUpdateManagerForUser": return makeTileUpdateManagerForUserFrom(abi: abi)
            case "TileUpdater": return makeTileUpdaterFrom(abi: abi)
            case "ToastActivatedEventArgs": return makeToastActivatedEventArgsFrom(abi: abi)
            case "ToastCollection": return makeToastCollectionFrom(abi: abi)
            case "ToastCollectionManager": return makeToastCollectionManagerFrom(abi: abi)
            case "ToastDismissedEventArgs": return makeToastDismissedEventArgsFrom(abi: abi)
            case "ToastFailedEventArgs": return makeToastFailedEventArgsFrom(abi: abi)
            case "ToastNotification": return makeToastNotificationFrom(abi: abi)
            case "ToastNotificationActionTriggerDetail": return makeToastNotificationActionTriggerDetailFrom(abi: abi)
            case "ToastNotificationHistory": return makeToastNotificationHistoryFrom(abi: abi)
            case "ToastNotificationHistoryChangedTriggerDetail": return makeToastNotificationHistoryChangedTriggerDetailFrom(abi: abi)
            case "ToastNotificationManagerForUser": return makeToastNotificationManagerForUserFrom(abi: abi)
            case "ToastNotifier": return makeToastNotifierFrom(abi: abi)
            case "UserNotification": return makeUserNotificationFrom(abi: abi)
            case "UserNotificationChangedEventArgs": return makeUserNotificationChangedEventArgsFrom(abi: abi)
            case "ContentLinkInfo": return makeContentLinkInfoFrom(abi: abi)
            case "FontWeights": return makeFontWeightsFrom(abi: abi)
            case "RichEditTextDocument": return makeRichEditTextDocumentFrom(abi: abi)
            case "RichEditTextRange": return makeRichEditTextRangeFrom(abi: abi)
            case "AccessibilitySettings": return makeAccessibilitySettingsFrom(abi: abi)
            case "ActivationViewSwitcher": return makeActivationViewSwitcherFrom(abi: abi)
            case "ApplicationView": return makeApplicationViewFrom(abi: abi)
            case "ApplicationViewConsolidatedEventArgs": return makeApplicationViewConsolidatedEventArgsFrom(abi: abi)
            case "ApplicationViewScaling": return makeApplicationViewScalingFrom(abi: abi)
            case "ApplicationViewTitleBar": return makeApplicationViewTitleBarFrom(abi: abi)
            case "ApplicationViewTransferContext": return makeApplicationViewTransferContextFrom(abi: abi)
            case "InputPane": return makeInputPaneFrom(abi: abi)
            case "InputPaneVisibilityEventArgs": return makeInputPaneVisibilityEventArgsFrom(abi: abi)
            case "StatusBar": return makeStatusBarFrom(abi: abi)
            case "StatusBarProgressIndicator": return makeStatusBarProgressIndicatorFrom(abi: abi)
            case "UISettings": return makeUISettingsFrom(abi: abi)
            case "UISettingsAutoHideScrollBarsChangedEventArgs": return makeUISettingsAutoHideScrollBarsChangedEventArgsFrom(abi: abi)
            case "UIViewSettings": return makeUIViewSettingsFrom(abi: abi)
            case "ViewModePreferences": return makeViewModePreferencesFrom(abi: abi)
            case "DisplayRegion": return makeDisplayRegionFrom(abi: abi)
            case "WindowingEnvironment": return makeWindowingEnvironmentFrom(abi: abi)
            case "WindowingEnvironmentChangedEventArgs": return makeWindowingEnvironmentChangedEventArgsFrom(abi: abi)
            case "HttpClient": return makeHttpClientFrom(abi: abi)
            case "HttpGetBufferResult": return makeHttpGetBufferResultFrom(abi: abi)
            case "HttpGetInputStreamResult": return makeHttpGetInputStreamResultFrom(abi: abi)
            case "HttpGetStringResult": return makeHttpGetStringResultFrom(abi: abi)
            case "HttpMethod": return makeHttpMethodFrom(abi: abi)
            case "HttpRequestMessage": return makeHttpRequestMessageFrom(abi: abi)
            case "HttpRequestResult": return makeHttpRequestResultFrom(abi: abi)
            case "HttpResponseMessage": return makeHttpResponseMessageFrom(abi: abi)
            case "HttpTransportInformation": return makeHttpTransportInformationFrom(abi: abi)
            case "HttpCacheDirectiveHeaderValueCollection": return makeHttpCacheDirectiveHeaderValueCollectionFrom(abi: abi)
            case "HttpChallengeHeaderValue": return makeHttpChallengeHeaderValueFrom(abi: abi)
            case "HttpChallengeHeaderValueCollection": return makeHttpChallengeHeaderValueCollectionFrom(abi: abi)
            case "HttpConnectionOptionHeaderValue": return makeHttpConnectionOptionHeaderValueFrom(abi: abi)
            case "HttpConnectionOptionHeaderValueCollection": return makeHttpConnectionOptionHeaderValueCollectionFrom(abi: abi)
            case "HttpContentCodingHeaderValue": return makeHttpContentCodingHeaderValueFrom(abi: abi)
            case "HttpContentCodingHeaderValueCollection": return makeHttpContentCodingHeaderValueCollectionFrom(abi: abi)
            case "HttpContentCodingWithQualityHeaderValue": return makeHttpContentCodingWithQualityHeaderValueFrom(abi: abi)
            case "HttpContentCodingWithQualityHeaderValueCollection": return makeHttpContentCodingWithQualityHeaderValueCollectionFrom(abi: abi)
            case "HttpContentDispositionHeaderValue": return makeHttpContentDispositionHeaderValueFrom(abi: abi)
            case "HttpContentHeaderCollection": return makeHttpContentHeaderCollectionFrom(abi: abi)
            case "HttpContentRangeHeaderValue": return makeHttpContentRangeHeaderValueFrom(abi: abi)
            case "HttpCookiePairHeaderValue": return makeHttpCookiePairHeaderValueFrom(abi: abi)
            case "HttpCookiePairHeaderValueCollection": return makeHttpCookiePairHeaderValueCollectionFrom(abi: abi)
            case "HttpCredentialsHeaderValue": return makeHttpCredentialsHeaderValueFrom(abi: abi)
            case "HttpDateOrDeltaHeaderValue": return makeHttpDateOrDeltaHeaderValueFrom(abi: abi)
            case "HttpExpectationHeaderValue": return makeHttpExpectationHeaderValueFrom(abi: abi)
            case "HttpExpectationHeaderValueCollection": return makeHttpExpectationHeaderValueCollectionFrom(abi: abi)
            case "HttpLanguageHeaderValueCollection": return makeHttpLanguageHeaderValueCollectionFrom(abi: abi)
            case "HttpLanguageRangeWithQualityHeaderValue": return makeHttpLanguageRangeWithQualityHeaderValueFrom(abi: abi)
            case "HttpLanguageRangeWithQualityHeaderValueCollection": return makeHttpLanguageRangeWithQualityHeaderValueCollectionFrom(abi: abi)
            case "HttpMediaTypeHeaderValue": return makeHttpMediaTypeHeaderValueFrom(abi: abi)
            case "HttpMediaTypeWithQualityHeaderValue": return makeHttpMediaTypeWithQualityHeaderValueFrom(abi: abi)
            case "HttpMediaTypeWithQualityHeaderValueCollection": return makeHttpMediaTypeWithQualityHeaderValueCollectionFrom(abi: abi)
            case "HttpMethodHeaderValueCollection": return makeHttpMethodHeaderValueCollectionFrom(abi: abi)
            case "HttpNameValueHeaderValue": return makeHttpNameValueHeaderValueFrom(abi: abi)
            case "HttpProductHeaderValue": return makeHttpProductHeaderValueFrom(abi: abi)
            case "HttpProductInfoHeaderValue": return makeHttpProductInfoHeaderValueFrom(abi: abi)
            case "HttpProductInfoHeaderValueCollection": return makeHttpProductInfoHeaderValueCollectionFrom(abi: abi)
            case "HttpRequestHeaderCollection": return makeHttpRequestHeaderCollectionFrom(abi: abi)
            case "HttpResponseHeaderCollection": return makeHttpResponseHeaderCollectionFrom(abi: abi)
            case "HttpTransferCodingHeaderValue": return makeHttpTransferCodingHeaderValueFrom(abi: abi)
            case "HttpTransferCodingHeaderValueCollection": return makeHttpTransferCodingHeaderValueCollectionFrom(abi: abi)
            default: return nil
        }
    }
}
